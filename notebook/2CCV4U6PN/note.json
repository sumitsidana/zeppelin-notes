{
  "paragraphs": [
    {
      "text": "val data_10 \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \",\")\n    .load(\"/data/sidana/adaptivity/ml_1m/ml_10_data.headers\")\n\nval data_20\u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \",\")\n    .load(\"/data/sidana/adaptivity/ml_1m/ml_20_data.headers\")\n\nval data_30 \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \",\")\n    .load(\"/data/sidana/adaptivity/ml_1m/ml_30_data.headers\")\n\nval data_50 \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \",\")\n    .load(\"/data/sidana/adaptivity/ml_1m/ml_50_data.headers\")\n    \n\nval data_75 \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \",\")\n    .load(\"/data/sidana/adaptivity/ml_1m/ml_75_data.headers\")\n    \n\nval data_100 \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \",\")\n    .load(\"/data/sidana/adaptivity/ml_1m/ml_100_data.headers\")\n\n\n\n",
      "authenticationInfo": {},
      "dateUpdated": "Mar 31, 2017 1:51:51 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1490917290235_2046061110",
      "id": "20170331-014130_357127741",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "data_10: org.apache.spark.sql.DataFrame \u003d [userid: int, itemid: int, rating: int, timestamp: int]\ndata_20: org.apache.spark.sql.DataFrame \u003d [userid: int, itemid: int, rating: int, timestamp: int]\ndata_30: org.apache.spark.sql.DataFrame \u003d [userid: int, itemid: int, rating: int, timestamp: int]\ndata_50: org.apache.spark.sql.DataFrame \u003d [userid: int, itemid: int, rating: int, timestamp: int]\ndata_75: org.apache.spark.sql.DataFrame \u003d [userid: int, itemid: int, rating: int, timestamp: int]\ndata_100: org.apache.spark.sql.DataFrame \u003d [userid: int, itemid: int, rating: int, timestamp: int]\n"
      },
      "dateCreated": "Mar 31, 2017 1:41:30 AM",
      "dateStarted": "Mar 31, 2017 1:51:51 AM",
      "dateFinished": "Mar 31, 2017 1:51:59 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val user_10 \u003d data_10.select(\"userid\").distinct\nval user_20 \u003d data_20.select(\"userid\").distinct\nval user_30 \u003d data_30.select(\"userid\").distinct\nval user_50 \u003d data_50.select(\"userid\").distinct\nval user_75 \u003d data_75.select(\"userid\").distinct\nval user_100 \u003d data_100.select(\"userid\").distinct",
      "authenticationInfo": {},
      "dateUpdated": "Mar 31, 2017 1:53:02 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1490917509102_1734954136",
      "id": "20170331-014509_1488770049",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "user_10: org.apache.spark.sql.DataFrame \u003d [userid: int]\nuser_20: org.apache.spark.sql.DataFrame \u003d [userid: int]\nuser_30: org.apache.spark.sql.DataFrame \u003d [userid: int]\nuser_50: org.apache.spark.sql.DataFrame \u003d [userid: int]\nuser_75: org.apache.spark.sql.DataFrame \u003d [userid: int]\nuser_100: org.apache.spark.sql.DataFrame \u003d [userid: int]\n"
      },
      "dateCreated": "Mar 31, 2017 1:45:09 AM",
      "dateStarted": "Mar 31, 2017 1:53:02 AM",
      "dateFinished": "Mar 31, 2017 1:53:03 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "user_10.count\nuser_20.count\nuser_30.count\nuser_50.count\nuser_75.count\nuser_100.count",
      "authenticationInfo": {},
      "dateUpdated": "Mar 31, 2017 1:53:08 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1490917464588_1817598529",
      "id": "20170331-014424_788726266",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "res23: Long \u003d 604\nres24: Long \u003d 1208\nres25: Long \u003d 1812\nres26: Long \u003d 3020\nres27: Long \u003d 4530\nres28: Long \u003d 6040\n"
      },
      "dateCreated": "Mar 31, 2017 1:44:24 AM",
      "dateStarted": "Mar 31, 2017 1:53:08 AM",
      "dateFinished": "Mar 31, 2017 1:53:20 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "user_10.select(\"userid\").distinct.except(user_20.select(\"userid\").distinct).count\nuser_20.select(\"userid\").distinct.except(user_30.select(\"userid\").distinct).count\nuser_30.select(\"userid\").distinct.except(user_50.select(\"userid\").distinct).count\nuser_50.select(\"userid\").distinct.except(user_75.select(\"userid\").distinct).count\nuser_75.select(\"userid\").distinct.except(user_100.select(\"userid\").distinct).count\nuser_20.select(\"userid\").distinct.except(user_10.select(\"userid\").distinct).count\nuser_30.select(\"userid\").distinct.except(user_20.select(\"userid\").distinct).count\nuser_50.select(\"userid\").distinct.except(user_30.select(\"userid\").distinct).count\nuser_75.select(\"userid\").distinct.except(user_50.select(\"userid\").distinct).count\nuser_100.select(\"userid\").distinct.except(user_75.select(\"userid\").distinct).count",
      "authenticationInfo": {},
      "dateUpdated": "Mar 31, 2017 1:57:20 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1490917955423_-2025397199",
      "id": "20170331-015235_589081382",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "res32: Long \u003d 0\nres33: Long \u003d 0\nres34: Long \u003d 0\nres35: Long \u003d 0\nres36: Long \u003d 0\nres37: Long \u003d 604\nres38: Long \u003d 604\nres39: Long \u003d 1208\nres40: Long \u003d 1510\nres41: Long \u003d 1510\n"
      },
      "dateCreated": "Mar 31, 2017 1:52:35 AM",
      "dateStarted": "Mar 31, 2017 1:57:20 AM",
      "dateFinished": "Mar 31, 2017 2:02:03 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "user_20.select(\"userid\").distinct.except(user_10.select(\"userid\").distinct).count\nuser_30.select(\"userid\").distinct.except(user_20.select(\"userid\").distinct).count\nuser_50.select(\"userid\").distinct.except(user_30.select(\"userid\").distinct).count\nuser_75.select(\"userid\").distinct.except(user_50.select(\"userid\").distinct).count\nuser_100.select(\"userid\").distinct.except(user_75.select(\"userid\").distinct).count",
      "dateUpdated": "Mar 31, 2017 1:57:28 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1490918085140_1626806282",
      "id": "20170331-015445_947162153",
      "dateCreated": "Mar 31, 2017 1:54:45 AM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "embAdaptivity: test ml_1m subset of users",
  "id": "2CCV4U6PN",
  "angularObjects": {
    "2BGHSKCA7": [],
    "2BFMBPKAB": [],
    "2BHKKP27G": [],
    "2BJHJDBK6": [],
    "2BJAQG5W4": [],
    "2BJGSXM37": [],
    "2BFXEV5XZ": [],
    "2BG77RV7M": [],
    "2BF969NNB": [],
    "2BG8QQJNC": [],
    "2BGVG5JP4": [],
    "2BJ5FCP57": [],
    "2BFEDXCTE": [],
    "2BJ8AEWCT": [],
    "2BH9AVVKH": [],
    "2BJ7KKX85": [],
    "2BHKAE8WK": [],
    "2BJ6HN5AY": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}