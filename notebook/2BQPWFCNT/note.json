{
  "paragraphs": [
    {
      "text": "//overall click stats\n\nval parquetFileClick \u003d sqlContext.read.parquet(\"/home/ama/sidana/calypso_kk_june_data/click/*/2016/*/*/*.parquet\")\nval clicksWithoutKFS \u003d parquetFileClick.filter(!($\"source\".contains(\"kfs\")))\nval uniqueUsers \u003d clicksWithoutKFS.select(\"userId\").distinct\nval uniqueOfferViews \u003d clicksWithoutKFS.select(\"offerViewId\").distinct\nval uniqueOfferCategories \u003d clicksWithoutKFS.select(\"category\").distinct\nval observedNumberOfRatings \u003d clicksWithoutKFS.groupBy(\"userId\",\"offerViewId\")\n\nval numClicks \u003d clicksWithoutKFS.count\nval numUsers \u003d uniqueUsers.count\nval numOfferViews \u003d uniqueOfferViews.count\nval numOfferCategories \u003d uniqueOfferCategories.count\nval numInteractions \u003d observedNumberOfRatings.count.count\n\n\nval offerId \u003d clicksWithoutKFS.select(substring_index(clicksWithoutKFS(\"offerViewId\"),\"-\",1))\nval uniqueOfferId \u003d offerId.select(\"substring_index(offerViewId,-,1)\").distinct\nval numOffers \u003d uniqueOfferId.count\n\nval groupedClicks \u003d clicksWithoutKFS.groupBy(\"userId\").count.sort(desc(\"count\"))\nval clickAvg \u003d groupedClicks.select(avg($\"count\"))\nclickAvg.show",
      "authenticationInfo": {},
      "dateUpdated": "Oct 14, 2016 4:54:44 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1467638014239_557387193",
      "id": "20160704-151334_300093514",
      "result": "org.apache.thrift.transport.TTransportException",
      "dateCreated": "Jul 4, 2016 3:13:34 PM",
      "dateStarted": "Oct 14, 2016 4:54:45 PM",
      "dateFinished": "Oct 14, 2016 4:55:57 PM",
      "status": "FINISHED",
      "errorMessage": "org.apache.thrift.transport.TTransportException\n\tat org.apache.thrift.transport.TIOStreamTransport.read(TIOStreamTransport.java:132)\n\tat org.apache.thrift.transport.TTransport.readAll(TTransport.java:86)\n\tat org.apache.thrift.protocol.TBinaryProtocol.readAll(TBinaryProtocol.java:429)\n\tat org.apache.thrift.protocol.TBinaryProtocol.readI32(TBinaryProtocol.java:318)\n\tat org.apache.thrift.protocol.TBinaryProtocol.readMessageBegin(TBinaryProtocol.java:219)\n\tat org.apache.thrift.TServiceClient.receiveBase(TServiceClient.java:69)\n\tat org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_interpret(RemoteInterpreterService.java:232)\n\tat org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.interpret(RemoteInterpreterService.java:216)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret(RemoteInterpreter.java:240)\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:93)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:242)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:171)\n\tat org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:328)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val parquetFileClick \u003d sqlContext.read.parquet(\"/home/ama/sidana/calypso_kk_june_data/click/fr/2016/*/*/*.parquet\")\nval clicksWithoutKFS \u003d parquetFileClick.filter(!($\"source\".contains(\"kfs\")))\nval uniqueUsers \u003d clicksWithoutKFS.groupBy(\"userId\").count.sort(desc(\"count\"))\nz.show(uniqueUsers)\n",
      "authenticationInfo": {},
      "dateUpdated": "Feb 21, 2017 3:03:49 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "userId",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "count",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "userId",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "count",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1487685404121_1496680631",
      "id": "20170221-145644_233549431",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "userId\tcount\na4c621e-13f42709354-4c447\t839\na4c62a6-1543d7ce5eb-ee93\t833\na4c6257-15510f395c3-42b02\t623\na4c6257-1541ff59e23-269c0\t425\na4c62e4-1550ba7417d-37bfbe\t410\na4c6350-1550b670803-379724\t395\na4c6257-153d0ce243a-9edd\t343\na4c6256-15488bd613f-8a6dee\t322\na4c62e4-1550f60d9a0-c5043\t304\na4c6350-1545b1af820-97f55\t299\na4c628c-154c91836a2-d8d1\t270\na4c6350-154b33a4da1-9b0a31\t268\na4c6257-1548f09b4fd-4d823\t236\na4c6350-1550f031834-be508\t231\na4c6256-154fb9e8100-39e8c4\t219\na4c628c-154f741fea5-4f402\t214\na4c62e4-1550b1ee48a-34570a\t212\na4c6291-1551818b4f6-671be2\t211\na4c622b-14c57443b3e-2d5e39\t210\na4c6291-1551aa5216a-696c63\t206\na4c628c-15571f84afc-54813\t202\na4c6257-154a0ff7f43-8bb98\t198\na4c6256-1541ba8956d-e32d1\t193\na4c62a6-154c9765180-10f412\t191\na4c628c-155227d6aa8-85a66\t189\na4c6257-154ee09ac8c-3448d\t189\na4c6256-154fa46a320-389440\t188\na4c6350-154eee6d4a7-34b690\t187\na4c6350-155017327c5-51525\t170\na4c62a6-15503d374f1-de77\t164\na4c62e4-1550c46c849-3c1a73\t161\na4c628c-15434f49437-6f84f\t148\na4c8258-15501e84ba2-26a\t145\na4c8212-15572e5ed6b-b6\t145\na4c62e4-1550e1b8c0a-a6607\t143\na4c628c-154f371066f-44e2d\t142\na4c62e4-1554e16788b-6d9f12\t141\na4c6257-155060c5655-16d33\t141\na4c6350-1550fb70e0d-d1cb4\t137\na4c628c-1550725f983-1be3b\t136\na4c6255-14eabeaeddd-9037e6\t135\na4c628c-15540f007e9-f5e7b\t134\na4c6350-154f681d199-51a7c6\t134\na4c6257-154ed338974-312ef\t128\na4c628c-154f3612ff9-44b20\t128\na4c6350-1550d1799eb-3eafe\t127\na4c6257-1547ca00254-17443\t127\na4c62a6-154684d0d00-27023\t123\na4c628c-154fec79ff7-66c04\t123\na4c628c-154d87a1615-3fc70\t123\na4c62e4-1551108b040-138789\t122\na4c6257-15428bfc6f8-43dbc\t120\na4c62e4-154ef2ba5a6-35e636\t119\na4c62a6-1550b06fb8a-2902e\t118\na4c6350-154ca2f3c4f-c1aa\t117\na4c6350-155130d7a70-208271\t115\na4c6257-1550b5c812b-2b33f\t115\na4c6257-15511054600-4300a\t112\na4c62a6-1551057e734-3f6d2\t112\na4c6257-154b987ec60-dd8c8\t112\na4c6257-154d44fa411-1335ee\t111\na4c62a6-1550c01180c-2de71\t111\na4c628c-1551ced2d3c-71c64\t111\na4c628c-154cf6a9f7f-22ba1\t110\na4c6255-15500520cff-417c5f\t108\na4c6257-1554a0189fd-1138b7\t108\na4c62a6-15459c315fb-281eb\t108\na4c6350-1550ce2bc33-2691e\t104\na4c628c-1518aae2107-3fbf1\t104\na4c6291-151a258564a-4c5c8\t104\na4c628c-1551020bb84-3e30f\t104\na4c6350-15508d19c3d-2f88b5\t103\na4c637-1540beeb97d-158b9d\t102\na4c628c-15505fa75bb-163fa\t102\na4c628c-155093177e9-23d80\t101\na4c628c-15501e580b0-624e\t101\na4c62e8-1550cc3c281-1e291\t101\na4c628c-154fbd918f9-5c4c5\t101\na4c62e4-1554434ecff-3d86d5\t100\na4c62a6-154f80906c1-5223b\t100\na4c6291-1552c5d2e0c-b5dec\t99\na4c62e4-15522cb033e-667c5c\t98\na4c628c-1553729c1f3-d3c20\t98\na4c62e4-154b59a6ea7-a712c8\t97\na4c62e8-1550703f013-169a2\t97\na4c6257-1543954817d-2065\t96\na4c62a6-15537b72ac6-d4efe\t96\na4c6350-154f5d6f4c4-4eecd4\t95\na4c62e4-1550f427a4b-c27d5\t95\na4c6257-15525b571f9-91c05\t95\na4c62a6-154fcb543d6-5fa83\t94\na4c6257-1551bc8e67b-6dd36\t94\na4c6257-154ed02ee91-30840\t94\na4c628c-153644b5460-13d9b4\t94\na4c628c-15513e53692-4e4eb\t94\na4c6257-15442e46292-201d3\t94\na4c628c-154b9ea2dc0-df58b\t93\na4c6255-1540c208468-40c83f\t92\na4c6257-155217becad-81a23\t92\na4c6350-15515c4ed2d-27521f\t91\na4c6291-1550dbc2fc1-5b271e\t91\na4c6255-15316a34cee-531fa\t91\na4c62e4-154fdc9a43a-76b390\t90\na4c62a6-15507fe499a-1eef9\t90\na4c6350-154f97b5c66-626cd5\t90\na4c62e4-1550d11f7ce-3c339\t90\na4c62e4-1549a2f96ef-50301b\t89\na4c62e8-154fbd56332-90b2\t89\na4c62e4-1550868a3d4-2b380d\t89\na4c6256-154b5e80663-41692b\t89\na4c628c-154c369c10c-fc03b\t88\na4c62a6-15523622d5c-87761\t88\na4c6257-155091a8acc-23cc7\t88\na4c62e4-154a92d8459-77452b\t88\na4c62e4-154c1841be3-da259d\t88\na4c62a6-1550a6b9810-26982\t88\na4c6257-1549bc81d69-79d5b\t87\na4c628c-154e856bc36-22b12\t87\na4c62a6-1553a4eddaf-dd18a\t87\na4c6257-155596efc85-4636\t87\na4c6257-154252a20f6-39239\t86\na4c62e4-15514c3de05-234665\t86\na4c6291-154d388ea2e-9d7cfb\t86\na4c6291-154fac1b163-392c3b\t86\na4c6257-1546ac86a92-2ca42\t86\na4c62a6-1550ba8c4ff-2c314\t85\na4c6257-1550596b1ab-145f5\t85\na4c62e4-1550fbd5d4f-d2bca\t84\na4c6257-155089cae5d-22101\t84\na4c62e4-1551135379c-147cf5\t83\na4c6257-154c49f3cef-100d7e\t83\na4c62e4-154f99ab281-62d00e\t83\na4c6257-1551a9e1032-67e74\t82\na4c6350-15537b2ae0a-d3d86\t82\na4c6350-1550af4da57-34d3a5\t81\na4c62e4-15520e21b6e-590e0f\t81\na4c628c-1556d20d122-43a69\t81\na4c6291-15475e644b4-5c7a97\t81\na4c6257-1550ac65570-28375\t81\na4c6350-15515518856-252316\t81\na4c628c-155035aa7cc-c0ea\t80\na4c6257-154a1fb838f-8fbf1\t80\na4c6350-1551ff30389-534d91\t80\na4c62e4-154c5904f4e-eefc54\t79\na4c6350-1554ce1ba6b-6a43c4\t79\na4c628c-1555e56de35-13ae5\t79\na4c628c-1550e447367-380ca\t79\na4c62a6-15424b1d569-3675d\t79\na4c6291-15510e6731c-5dc4a3\t79\na4c628c-1551bf71585-6e599\t79\na4c6255-151d1c9afa1-44aadc\t79\na4c62e4-1551069d7fa-1040bd\t79\na4c62e8-154f0eb11b6-1436a\t79\na4c62e4-154fa1c39f7-63b28e\t78\na4c6257-1550279cd73-8733\t78\na4c6350-154f677d1d0-517678\t78\na4c6350-1550b6cbb02-37babe\t78\na4c637-1550b469643-1c6826\t78\na4c628c-154f6f2646f-4dfb1\t77\na4c62a6-1557d80a200-833b3\t77\na4c62e4-1552ce85357-2b4a83\t77\na4c628c-1552ee5f3b1-b37ab\t77\na4c6257-1552ae2d9d3-a41a4\t77\na4c628c-1549a951974-74e45\t77\na4c62a6-154e748b91b-1ef7c\t77\na4c6291-15502184ebd-45b378\t77\na4c628c-155026ebec9-7db1\t76\na4c62a6-1551115cbf1-42d75\t76\na4c6291-152f5677522-db6b84\t76\na4c628c-1550682e96f-18da0\t76\na4c6257-1549ab10420-754e4\t75\na4c628c-1552564455e-9040d\t75\na4c628c-154faa39a6b-5949c\t75\na4c62e8-155864a0e19-40d8\t75\na4c6257-15349d188bb-d379c\t75\na4c6257-1555f49f177-17c71\t75\na4c6257-154d8764c3e-13fb2e\t74\na4c628c-14fc6c90d5a-364ed\t74\na4c637-15508079f7f-1ae2c5\t74\na4c62e4-155013509ec-2077c\t74\na4c62e8-154f702873b-45e6\t74\na4c6291-1551b091b4f-6a1033\t74\na4c6257-154cfec0b43-125760\t73\na4c6350-1550c800625-3f27c2\t73\na4c637-1550cf9338d-1d9030\t73\na4c62a6-1550d5ef997-34007\t73\na4c6256-154d28f025f-9a0626\t73\na4c6350-1551812b4f6-34daa2\t73\na4c6350-155107fa64e-10bae9\t73\na4c628c-1555d4bae9a-fadc\t72\na4c6350-154e70cb18c-b1acb\t72\na4c6257-154fc76e7a4-5ecf2\t72\na4c6257-1538e07274e-1cf3cc\t72\na4c62a6-155022080e9-65c8\t72\na4c62a6-154fd17054a-60fcd\t72\na4c628c-15517d2d371-5de1c\t72\na4c62e4-155063237e1-1ace38\t72\na4c6350-155470639bd-50cc3f\t71\na4c6350-1553fcbaed8-2b53d6\t71\na4c62a6-1551777e647-5bf20\t71\na4c62e4-1550c9b4e23-4361\t71\na4c6291-14fa4b0e3e2-23477f\t71\na4c6255-153dba32c2c-888204\t71\na4c6350-15539d2a698-121b27\t70\na4c62a6-154ce036191-11ce9d\t70\na4c6350-1553bb74c35-1c680d\t70\na4c62e8-154a8dfc7fc-3b52e\t70\na4c622b-15534acf8fa-a706a5\t70\na4c6257-1550bd685f4-2d73d\t70\na4c628c-1541610282a-56ce\t69\na4c62e4-15517df801a-33960d\t69\na4c6255-1550b25ebaa-5522b7\t69\na4c62a6-1553c65fa9c-e4e2e\t69\na4c6350-1551185aafc-1650c5\t69\na4c637-154d639a62e-369746\t69\na4c62a6-155116f7645-44563\t69\na4c6291-15516ac7f34-6447f1\t69\na4c637-15516e015f0-21319f\t68\na4c62e4-1550cd5afff-2009c\t68\na4c6350-1550ca7aa2b-9f7c\t68\na4c6257-1540e887f40-1209a\t68\na4c628c-154d38eacda-305c3\t68\na4c628c-1550cb9af95-31789\t68\na4c62e4-154f0b1cd79-386273\t68\na4c62e4-1550d66582f-62752\t68\na4c6257-155231f1f77-87bb0\t68\na4c628c-1557c5e1853-7e027\t67\na4c62a6-15517098424-5a4ec\t67\na4c6257-154ca72c8f0-113c4c\t67\na4c628c-154bc7863ac-e8b8c\t67\na4c62a6-14f5f67a2d5-e0d98\t67\na4c628c-1546d241d46-36988\t67\na4c62a6-154ca39daa8-1128fa\t67\na4c6257-15507403214-1c8e0\t67\na4c6350-1554c55f259-69bcb7\t67\na4c62e4-15509c0b500-2ff6cc\t67\na4c62e4-155081374bb-283082\t66\na4c628c-15553fba00f-13a6b7\t66\na4c6257-155112cabc1-439fa\t66\na4c628c-15524c4bea7-8d519\t66\na4c6257-154e21ee90f-e97a\t66\na4c62a6-154e38ed8df-1466b\t66\na4c62a6-15480d69e91-24672\t65\na4c62e4-1550ac0f9c2-3248b6\t65\na4c62a6-154fcdeed20-6046b\t65\na4c62e4-1550ba6b84f-37bc1f\t64\na4c62e4-1549ae00dde-521297\t64\na4c6350-1551e8d2573-4e8c22\t64\na4c6257-154bae93f53-e3c7b\t64\na4c62e4-1550cc4ace6-17d53\t64\na4c62a6-1550be1cd4c-2d53b\t64\na4c6257-154ca054499-1119ba\t64\na4c628c-154e4b96828-194fe\t64\na4c6257-154bc157d8a-e8195\t64\na4c637-154fb9fc4e6-133c2c\t64\na4c62a6-154e64bc109-1c20c\t64\na4c6257-1551272613c-49117\t64\na4c6350-15543484e98-38a0e9\t64\na4c62e4-154f3198d3f-45057e\t63\na4c62e4-15511fc63d8-1962e4\t63\na4c6257-15516323c8a-573d8\t63\na4c6350-155387d984e-e0fc8\t63\na4c62e4-15510fb8358-133ff6\t63\na4c823f-154ddc53e09-7735\t63\na4c62e4-1550af8d2f3-337554\t63\na4c62a6-15492149178-5a23e\t63\na4c62e8-15510970bc6-23477\t63\na4c628c-1550ad3fdfc-28351\t63\na4c6257-1550eda8623-39a45\t63\na4c62a6-154fe29060b-6517a\t62\na4c62e8-154fd41b702-ac04\t62\na4c6350-154fc9c5473-6d7f65\t62\na4c6257-1556d0b6b0c-434ec\t62\na4c6257-1551d643380-738ea\t62\na4c6257-1559b5840ce-ecb0e\t62\na4c637-154e8349361-86454\t62\na4c62a6-1550a527464-2642f\t62\na4c62a6-154b150abb1-c34df\t62\na4c6257-1550b336d05-2a6c0\t62\na4c62e4-15510315f9e-f1af3\t62\na4c62e8-1550c9454e7-1de2f\t62\na4c62a6-1556f769421-4d02d\t62\na4c6257-1551257c9c7-48a4d\t62\na4c62e4-1550c834bed-3de767\t61\na4c6257-1550adb5bd1-28951\t61\na4c628c-154f8ee50b4-54e4e\t61\na4c62a6-154c55aded0-104151\t61\na4c62a6-155103ba0d7-3ec69\t61\na4c62e8-15525ee7451-3e7f8\t61\na4c6350-15511fc5fa2-196075\t61\na4c62a6-151d3ab0b12-1c1c5\t61\na4c62a6-1550a52e9f2-26442\t60\na4c6350-1552cada227-2a01cf\t60\na4c62a6-154e48780be-18aed\t60\na4c6350-154b1bf6cf4-9923d8\t60\na4c6257-15507b1a866-1e499\t60\na4c62e8-1550b21ed13-1b82f\t60\na4c62e8-155109e03a7-23531\t60\na4c6257-154dca1820f-14cbe3\t60\na4c6257-15511a385a5-45b3a\t60\na4c62e4-1550ba0a6d1-3793c4\t60\na4c6255-1550daf2815-5a40cc\t60\na4c628c-154fbf37b3a-5ca3d\t60\na4c62e4-154d8cee20d-aa51e\t59\na4c6255-154df288a01-637fb\t59\na4c6257-154881b8bdb-3b4ec\t59\na4c62e4-154fca98b2a-6dcfe8\t59\na4c6256-1551a076ad9-67c884\t59\na4c62e4-1550bdd9581-393128\t59\na4c6350-155415e0a6a-34daa6\t59\na4c6291-1550f9adecd-5c3e41\t59\na4c62e4-1550d364057-4c216\t59\na4c62e4-15531065d30-3cae15\t59\na4c6257-1543090cb44-618c0\t59\na4c62e4-1550f64f8c4-c5718\t59\na4c62e4-15494966bd1-441f66\t59\na4c62e8-155450dd080-63a4d\t59\na4c6257-15502e4a0f6-a50b\t59\na4c62e4-1550a8f7ea3-3174f5\t59\na4c62a6-1550dd10db3-3620f\t59\na4c6257-154ff2d4f63-67bf1\t59\na4c62a6-15520bedf07-7d78e\t58\na4c628c-151e41eb8d7-4f0a9\t58\na4c628c-1550aaaa65d-27935\t58\na4c62a6-154e2a05048-108e3\t58\na4c6257-14e71e82495-fd61\t58\na4c62e4-15508baaf86-2d9e09\t58\na4c628c-154fd02da18-607c6\t58\na4c6255-14d0f0f1764-282bd1\t58\na4c628c-15506375659-17772\t58\na4c628c-15452fb89b7-11269\t58\na4c6257-154f968e037-56bd3\t58\na4c6256-15521f5ec23-74b805\t58\na4c628c-154fba70f8f-5bb18\t58\na4c6257-154f104da69-3c88a\t58\na4c6257-154ee7445b0-360b2\t57\na4c6257-15553aaf29b-1392cc\t57\na4c628c-1554ed364f6-125196\t57\na4c62a6-1545eb3fcfb-a8c4\t57\na4c6350-1550b132def-358591\t57\na4c628c-15548a8461b-10de53\t57\na4c637-154d8bbafae-38cc0e\t57\na4c62e4-15526e02e83-aeba3\t57\na4c62e8-1554edc246c-6f745\t57\na4c6256-150988789ec-11477bb\t57\na4c6291-1551224acf2-5fa6d4\t57\na4c62a6-154bd5309f0-e9ee5\t57\na4c6257-154f8c1c294-54ae2\t57\na4c6257-15507abae4c-1e341\t57\na4c62a6-154f0dd892c-3bfb5\t56\na4c62a6-1550d493a25-3370c\t56\na4c6255-15524ebbbee-780e45\t56\na4c6257-154df96a8c5-80b7\t56\na4c628c-15490bb2d05-5449e\t56\na4c628c-1552da27db0-af207\t56\na4c6350-1551313ad21-209da7\t56\na4c6350-155108907b1-10ef55\t56\na4c62a6-154e6f48cc2-1dde9\t56\na4c62e4-1551d17b807-4a5308\t56\na4c628c-15510217ccf-3e392\t56\na4c637-15512a358eb-1fd2ea\t56\na4c62e4-1550bb34931-381172\t56\na4c628c-15578de502d-7065b\t56\na4c62e4-155011ace05-15a59\t56\na4c6257-15421475387-2bbbb\t56\na4c62e4-1550d64d2c9-61ba6\t56\na4c6350-155112fa6d1-145e74\t56\na4c62a6-1550d00d1e2-325d2\t56\na4c62e8-154782c5cea-7c06\t56\na4c628c-1550cf7fa3b-3277a\t56\na4c6291-154ab521329-20761b\t56\na4c6256-154cdf256ca-8ee64c\t56\na4c62e4-154f2ac5183-42688e\t56\na4c628c-152e014d933-29b622\t55\na4c6255-155203ec0f6-70b610\t55\na4c6350-1550e1ecc69-a73b5\t55\na4c6350-15512451bb3-1b4f89\t55\na4c6350-15504c7efff-16e54e\t55\na4c62a6-15338d6aea8-88e57\t55\na4c6350-15501228b67-2f4f0\t55\na4c62a6-154cde81a0e-11c93d\t55\na4c6257-153955ab880-1ea7d2\t55\na4c62e8-1551c7ec21c-33178\t55\na4c62a6-154b9c3dff5-deb69\t55\na4c6350-1550d333519-4af3a\t55\na4c62e4-1547e0f618c-1c1784\t55\na4c6257-154f5bec8fa-4a9cc\t55\na4c62e4-1550fe55caf-dbb9f\t55\na4c62e4-1551801b555-34768f\t55\na4c6291-1552c0f05d6-a7fb5\t55\na4c6257-1551aa2b539-67fd8\t55\na4c6257-154dd0d0cfd-14ebd4\t54\na4c628c-154041297d6-89cd0\t54\na4c62e8-1555f9dcfa7-e33f\t54\na4c62e4-154f71594d0-54b8fd\t54\na4c6257-155151e4113-521bd\t54\na4c62e4-1557c325a41-7f058c\t54\na4c62e4-154aecdf7be-8bc0e3\t54\na4c62e4-1551623d75a-292b60\t54\na4c6257-1552f3224c1-b544b\t54\na4c6350-154b004ddb3-91c4f6\t54\na4c62e8-154ffac1662-d0ad\t54\na4c628c-154b53f9a7f-ce928\t54\na4c62e4-154aa74774b-7c620e\t54\na4c628c-155027edb56-840e\t54\na4c628c-154fe178b22-64a7a\t54\na4c6291-154e2384eee-bb844\t54\na4c62a6-15506f85be6-1af14\t54\na4c62a6-1551017d950-3dc95\t54\na4c6257-154eddd8be2-3375c\t53\na4c62a6-1551a375635-64c4c\t53\na4c628c-154fcc51d21-5f9ef\t53\na4c62e4-1550cadff4d-cfd4\t53\na4c62a6-15587ade179-a74f4\t53\na4c62a6-154fca9ad4f-5f841\t53\na4c6291-154c4744c40-71daae\t53\na4c6255-154cf1bb23d-91fb2a\t53\na4c62e4-15510f1f200-130d12\t53\na4c62a6-154679db20c-241e6\t53\na4c6350-1552998827a-1590fb\t53\na4c6255-15513d2a2b1-60c6b6\t53\na4c62e4-154ca8eedc9-138f0\t53\na4c62e4-15512029981-198e3b\t53\na4c628c-155178af970-5cc26\t53\na4c6256-1550835dbc7-51816f\t53\na4c628c-154d4c514ee-34dfd\t53\na4c62e4-1550bf8491b-39e65a\t53\na4c6291-15544f26b61-2ebaf6\t53\na4c628c-154fd5553a4-61c03\t53\na4c6291-154e2fc0604-e0a05\t53\na4c6257-154a41dee17-941c4\t52\na4c6350-154f75e89c9-5659a1\t52\na4c62a6-155038ee877-cc18\t52\na4c6257-155111f6a95-437b1\t52\na4c6257-154bd9df988-eb07b\t52\na4c62e4-1550814c139-283c38\t52\na4c6291-1551805db77-66f779\t52\na4c62a6-15510439ad5-3ef67\t52\na4c62a6-154aac38af5-ae351\t52\na4c62e8-154ed939a03-10d14\t52\na4c62a6-15513be7d58-4d8dc\t52\na4c6256-151c625884b-32c8b5\t52\na4c62a6-1554e38504e-1218dd\t52\na4c62a6-1550c8b551e-3076c\t52\na4c62e4-155361f8139-534da\t52\na4c62a6-15540558a2f-f379c\t51\na4c62a6-15460d8f6ad-e61e\t51\na4c6256-154b34addd8-3656f2\t51\na4c6350-1550fe4526c-dbbd7\t51\na4c628c-154fd57a836-61c80\t51\na4c6257-154dcd0035e-14da97\t51\na4c6350-1550cd1807e-1e161\t51\na4c628c-1550b379cb5-2a4d9\t51\na4c6257-15501cfb111-616c\t51\na4c62a6-155101ca81f-3dde1\t51\na4c6350-155179e1b86-31e30b\t51\na4c6257-155012ebfb2-362c\t51\na4c62e4-154b1e07ae0-996cf5\t51\na4c62e8-1550d284689-1ea7b\t51\na4c6350-155034427fa-1220c7\t51\na4c628c-154e735ebd1-1ebac\t51\na4c628c-154c438488f-ff68a\t51\na4c6257-1541e505255-1fbf7\t51\na4c62a6-15516feda4b-5a03e\t51\na4c62a6-155085a2ded-20877\t51\na4c628c-1549f1c3905-8413f\t50\na4c62e4-154c3d13b34-e2c4e8\t50\na4c628c-1545c5409e8-1aaf\t50\na4c6350-15545623a41-45c511\t50\na4c6256-152b2a1defa-4aebae\t50\na4c6255-15520e97dfa-720925\t50\na4c6350-154bffdd3cb-d2ef69\t50\na4c62e4-1555eeadc31-743383\t50\na4c6257-152efae0e11-2d8e51\t50\na4c62a6-154e69d9cde-1cad7\t50\na4c628c-15555a99eb8-141e0b\t50\na4c62a6-15506f3979a-1ada8\t50\na4c62e8-15157da4443-21738\t50\na4c628c-1551ff594a1-7a80d\t50\na4c6257-1552b2aea60-a557f\t50\na4c6257-1552fd36798-b7b63\t50\na4c62e4-155203c9aa5-550119\t50\na4c62a6-14ee61fafd3-45312\t50\na4c62e8-154da737a3b-d70e\t50\na4c8212-155748e68cf-184b\t50\na4c6350-155125a5bfb-1bdfca\t50\na4c6256-1550c92a07c-585bd0\t50\na4c6257-1550a242e60-2639f\t50\na4c6255-1550c98f49e-582d1e\t50\na4c6291-15525dab6da-7ad6b4\t50\na4c62e4-1550d052f19-366f3\t50\na4c628c-14b20d79851-5c0c0\t50\na4c6255-15512b3702c-5fc298\t50\na4c62e4-1550d22b24a-439dc\t50\na4c62e4-155153324bb-24a622\t50\na4c62e4-1551654adf8-2a35ec\t50\na4c62e8-1556285675f-10c5b\t50\na4c628c-153f79e9484-5e0e0\t49\na4c628c-154f3784a90-44fa0\t49\na4c6256-15503a0e927-495fc2\t49\na4c62a6-155059238f8-13ea4\t49\na4c6256-154c9c5e8a6-83b4c7\t49\na4c628c-1550a638985-26ae0\t49\na4c6350-155019cd2bc-640a8\t49\na4c6350-155175fed47-307532\t49\na4c6255-1552140df03-72cdd3\t49\na4c6291-154cbc38d92-8adfef\t49\na4c62a6-154bd5c1b0f-ea00a\t49\na4c6257-1550d2239a5-3354e\t49\na4c637-14f550d5b79-15a778\t49\na4c637-154ce78d42b-304b29\t49\na4c628c-1556e98ed7b-48f78\t49\na4c62e4-15511cdb6f1-181e0c\t49\na4c62e4-1550c3ae16d-3bc4ab\t49\na4c6257-154f1969926-3eef9\t49\na4c622a-151a6b61681-40e4ca\t49\na4c628c-1555dba37fe-1169e\t49\na4c6256-1550cf0381b-590382\t49\na4c628c-1556a9928ef-3dad4\t49\na4c628c-1550bbf9c88-2cc27\t49\na4c62e8-155039c28b0-11e4d\t48\na4c628c-154f36cdd9f-44d64\t48\na4c628c-1550c7d8f02-306ff\t48\na4c6257-154f17163e3-3e5b0\t48\na4c62a6-154be41f896-eda47\t48\na4c6350-154af2addf0-8d55c7\t48\na4c6291-1550e0d5b6f-5b96db\t48\na4c628c-154ca0fce7e-117ec\t48\na4c6350-154c90f8a09-ab66\t48\na4c6257-1552b94c422-a7567\t48\na4c628c-154de2bedad-1108\t48\na4c62a6-15536b2768e-d1d3e\t48\na4c6257-154efa0b621-3a393\t48\na4c6257-15560173843-1af5c\t48\na4c6255-15332cc19bc-305a08\t48\na4c6257-154b337eb79-c6036\t48\na4c62e4-1550bb9fe72-383f85\t48\na4c628c-15522e1a4e9-86f64\t47\na4c62e8-15523e648e4-3ba92\t47\na4c6350-1550ad6e16a-342d84\t47\na4c628c-152f152c7fd-2dfe89\t47\na4c6350-154e92b9f04-187837\t47\na4c6257-154bf401f7c-f0ab0\t47\na4c637-1550d8c6b36-1df01b\t47\na4c628c-1550c4678d0-2f626\t47\na4c6257-15500beeb32-1ae9\t47\na4c6350-1550cbd26c5-1426c\t47\na4c62a6-15505303f67-1248b\t47\na4c62a6-1550bd5f779-2cffb\t47\na4c6350-154d81a9202-9f824\t47\na4c62e8-154e9511f74-cbdb\t47\na4c62a6-15521b1afbd-81bc3\t47\na4c6257-152eb7044c0-2ca1b7\t47\na4c62a6-15511dbc05a-46382\t47\na4c6255-1556be2bc0a-5febd2\t47\na4c6257-15496405752-666fe\t47\na4c628c-15570c323d6-50730\t47\na4c6257-15526ae800f-952d1\t47\na4c6350-1554ac13dd4-60fcfa\t46\na4c628c-154d937086d-43005\t46\na4c62e8-1551857c3ea-2d981\t46\na4c6350-154b23a1140-9993c7\t46\na4c628c-154fe34d9af-6513f\t46\na4c628c-1558ace66bb-b1d8e\t46\na4c6350-1550e13b926-a4f94\t46\na4c62a6-153ec1d1a2a-3269a\t46\na4c6257-1550093270f-ec6\t46\na4c62a6-1550c2d126c-2eb5e\t46\na4c628c-1550367be0d-c462\t46\na4c62a6-154ec7584dd-2e462\t46\na4c6350-1551e97b5dd-4e9722\t46\na4c6291-1553c6187e3-2397e2\t46\na4c6256-154b752e5c0-44e863\t46\na4c628c-1550748b51a-1c6ff\t46\na4c6350-1550d0ffad0-3b4c6\t46\na4c6350-154e8030841-109877\t46\na4c62e4-155034893e8-10dfab\t46\na4c62a6-15515265662-51ab8\t46\na4c6255-15516cd4c88-639f13\t46\na4c6255-1551fd1791e-6ffd98\t46\na4c6257-1548810bf63-3b1d1\t46\na4c6257-154f3abcf13-45eb9\t46\na4c62e8-154ffe2d3aa-d24f\t46\na4c62a6-1556e5bdbaa-47e12\t45\na4c6350-15515f13daa-282631\t45\na4c628c-1550899c534-21d39\t45\na4c62e4-154f0b9fd20-387836\t45\na4c628c-1557f17e59a-89f68\t45\na4c628c-154b952c19c-dca50\t45\na4c6257-155692fdd1f-378cd\t45\na4c62a6-15549075e6e-10f5d3\t45\na4c62a6-154f645a5fc-4bd00\t45\na4c628c-1548a0d9082-3e835\t45\na4c6257-15526485f76-93949\t45\na4c6350-154f6b6bf47-52ba9a\t45\na4c6350-1552ebe1a8b-2ece3b\t45\na4c6256-15519e07be4-67a31c\t45\na4c62e4-1550b34fb36-34e43d\t45\na4c6257-150a662e3c2-59536\t45\na4c62a6-1552c112519-a8e8d\t45\na4c637-1551173d2cb-1f316f\t45\na4c62a6-154c04082df-f47c6\t45\na4c6291-1550e35bfa9-5bb7f3\t45\na4c6350-15517649f44-308fe9\t45\na4c62e4-155062f32fa-1abb6d\t45\na4c62a6-155078fad1a-1d54a\t45\na4c62e8-14c6178dacd-6ffc\t45\na4c6350-1550838b4a4-2af954\t45\na4c628c-155158511f1-54301\t45\na4c628c-154e87fad06-2323f\t45\na4c6255-15511b6e936-5e25e7\t45\na4c6227-12a08ff0d25-1086\t45\na4c6257-154c3a7f70d-fcf75\t45\na4c6350-155036b789b-136738\t45\na4c62e4-1552dcda6c0-2d0f18\t45\na4c6291-15365938bc2-842d6d\t44\na4c62a6-154853e3976-30ed5\t44\na4c62e8-155916cd1a1-11bdb\t44\na4c6257-154cfdd0b69-1253b5\t44\na4c62a6-1552a55135c-a1086\t44\na4c62e4-1551dd2b22b-4d9e07\t44\na4c628c-15510649494-3ff62\t44\na4c6350-155116b72c4-15b56f\t44\na4c8240-1556e07759f-6766\t44\na4c6291-15526980b65-ce3d\t44\na4c6257-1550dad3561-36158\t44\na4c6256-15582ef4279-10d594\t44\na4c62a6-154c5c83976-105a55\t44\na4c62e4-1550d004abf-343fd\t44\na4c62a6-155068a446d-18d05\t44\na4c6257-15507afab9e-1e41c\t44\na4c6291-14ffefac44a-e1a457\t44\na4c6350-155015eaebf-48648\t44\na4c6257-15506db6d57-1acf2\t44\na4c62a6-154434cf135-219ab\t44\na4c6257-1550da3942d-35f40\t44\na4c6257-154d9c38107-145855\t44\na4c62e4-155135b6fbe-21817c\t44\na4c6257-154e33fd051-134cc\t44\na4c62e8-1550549a3e9-13d0b\t44\na4c62e4-15510b03cc1-11b6f4\t44\na4c628c-154cdd49de9-1c2ea\t44\na4c62e4-154eda4e26a-2bf189\t44\na4c62e4-15510f0c10b-13069a\t44\na4c62e4-1550cc05f00-15ae5\t44\na4c62a6-1554ed7509f-2cfb\t44\na4c6350-1551ba148fa-4143a2\t44\na4c6257-155100c587f-3e19b\t44\na4c62a6-154ecfcaca4-301e0\t44\na4c6255-15510c62e36-5ccf8d\t44\na4c6350-155019e64a6-64bbe\t44\na4c6255-154f476774a-30c985\t44\na4c628c-155128b64f0-494b5\t44\na4c628c-155724ab405-56396\t44\na4c6350-15511b56683-177f7f\t44\na4c62a6-1550b50a5fb-2a981\t44\na4c628c-155054f1fa0-12e0f\t44\na4c628c-15506860d33-18e72\t44\na4c62a6-1549f528e62-84f30\t43\na4c6350-1551275a6d9-1c9e4d\t43\na4c6257-154fd9856c2-6301e\t43\na4c6257-15499bb436b-714ed\t43\na4c628c-154bbc0f0b4-e7618\t43\na4c62e8-15502976af9-1071b\t43\na4c62a6-1550e330def-379af\t43\na4c6350-1551a1819cf-395072\t43\na4c62a6-155053c52fb-12763\t43\na4c628c-15546b4eda5-10845a\t43\na4c6256-154259a7a94-222099\t43\na4c6257-154fc3a7aef-5df1e\t43\na4c6257-154fbcde4e4-5c748\t43\na4c6256-14df6799d06-41e9\t43\na4c62e4-15507f5f19c-273ca0\t43\na4c62a6-151a2706b9a-ad0e5\t43\na4c62e4-154d50db471-85f7d\t43\na4c62a6-154e235b44e-eeab\t43\na4c6255-15289fc7d20-aa1140\t43\na4c62e4-154f836bcbd-5b4b63\t43\na4c6257-15545f65135-105900\t43\na4c62a6-1550b22fa89-29ad5\t43\na4c6257-15559c43191-5e7d\t43\na4c6257-154f7aa1cac-50ebc\t43\na4c62e4-15516d5ffc6-2d1fbc\t43\na4c6350-154e79f1127-e3e9d\t42\na4c6257-1551060f5ed-40261\t42\na4c62a6-1545a0fa999-28c58\t42\na4c628c-155175f925d-5c240\t42\na4c6257-15507430506-1c97b\t42\na4c62e4-15491395a51-3ea03c\t42\na4c6350-155029c0e36-ccc22\t42\na4c62e8-1550b2a8271-1b93e\t42\na4c6350-1550c7ed43b-3f1f0d\t42\na4c6257-154b3a4f484-c7d32\t42\na4c6257-14edd18f1f5-2c107\t42\na4c6257-154fdcb67fc-63b4b\t42\na4c6350-15549d908ce-5ab37f\t42\na4c62a6-154e4536ff7-17d12\t42\na4c62e8-1553051cf30-4baba\t42\na4c6255-154ed9e2b48-260219\t42\na4c6257-1553201e1b9-c05c0\t42\na4c6257-154f1a1a010-3f102\t42\na4c62e4-1552bf86482-2420fb\t42\na4c6350-1551fc97d9d-525654\t42\na4c6350-1550c517e92-3dd49c\t42\na4c6257-15536e86fc0-d3014\t42\na4c62e4-15503f2f557-145e81\t42\na4c6255-153d6e3e68e-7e5c1d\t42\na4c62a6-155848e4f02-9cd64\t42\na4c628c-1546b9c9890-2fb51\t42\na4c628c-1555a895f5a-9137\t42\na4c628c-1543256b086-64a83\t42\na4c628c-1547febefab-212ca\t42\na4c628c-154ba31c8ee-e07b0\t42\na4c6350-154fe1c61f4-799cb8\t42\na4c62e4-1550d6bec51-651a0\t42\na4c62e8-154b3a83a00-47468\t42\na4c6257-1546301f36c-1609b\t42\na4c6257-1520867d239-cc097\t42\na4c8212-15501e6c828-205\t42\na4c6257-1549e4b8503-8114b\t42\na4c6255-15512706200-5f4dde\t42\na4c628c-155475b3748-109964\t41\na4c62e4-1550d9db210-7ca55\t41\na4c62a6-15527966c94-9846c\t41\na4c628c-1551136b721-43962\t41\na4c6256-1551212a0e4-5ee8dc\t41\na4c628c-1551db01ad3-74524\t41\na4c6256-154ed23b8e2-24a42b\t41\na4c628c-1550fc18a96-3c527\t41\na4c62e4-1550cbfb0ca-155b9\t41\na4c622b-1545eeefe23-81718f\t41\na4c62a6-1505c7a860d-76e69\t41\na4c6350-1550c7d6dd8-3f14af\t41\na4c628c-1555f22ed50-171a3\t41\na4c62e8-154f6aab4be-4036\t41\na4c6257-15571dcb59d-53e8a\t41\na4c6257-154fc6ba40d-5ea9c\t41\na4c6256-15348089682-54c863\t41\na4c62a6-154f2833912-41f6c\t41\na4c6350-154c2a18c87-dc2c43\t41\na4c62a6-155061d3313-16d41\t41\na4c62a6-1554e695d9b-a52\t41\na4c62a6-154a6267a50-9cf0a\t41\na4c62a6-15502d9f5e7-9bf0\t41\na4c62e4-1550c6a54e8-3d192a\t41\na4c6291-15467660404-39f330\t41\na4c62a6-154e7ec0a71-214f0\t41\na4c62a6-1549e91c7c0-81d36\t41\na4c6350-155273c0933-df700\t41\na4c628c-1550a7218e4-26dc5\t41\na4c628c-154c84684ac-ab9a\t41\na4c6257-154e401f54d-16649\t41\na4c628c-1541f9c9c3a-24b98\t41\na4c62e4-154eba80e52-20ebb4\t41\na4c722a-146b418df38-104a516\t41\na4c6255-15530ee93f3-125aae\t41\na4c6350-154fc0e593f-6a05ad\t41\na4c628c-154d2b9fef5-2cd3d\t41\na4c6255-154ebeef1c2-214f6c\t41\na4c628c-1552f71cca4-b638a\t41\na4c62a6-1551f5a205c-77043\t41\na4c62a6-155081703ab-1f563\t41\na4c6257-1548725d7c5-37f27\t41\na4c628c-15514c85a69-50d36\t41\na4c6257-15597134f02-dfc08\t41\na4c62a6-1534db59252-e7353\t41\na4c6256-154a1dac868-91bed\t41\na4c6256-1551ade7e2f-690aba\t41\na4c628c-154fdf56c27-641e8\t41\na4c6257-1552d591e03-aeaa5\t41\na4c62a6-1551d6fdc48-72f04\t41\na4c6256-14b97e872b2-5703d6\t41\na4c6257-15158fda217-54629\t41\na4c62e8-154f07dbec9-13f4f\t41\na4c6257-1550b15f6d8-29cf6\t40\na4c6350-155051743d3-174ad9\t40\na4c6350-15515a36ac4-26abcc\t40\na4c628c-154fbad78d1-5bc30\t40\na4c62e4-154813f757f-212df6\t40\na4c6350-155215c57d5-5c5306\t40\na4c6257-1551c1eea3b-6eff5\t40\na4c6257-15515614800-53889\t40\na4c628c-154df598b16-7134\t40\na4c62cc-14705f8d498-c27\t40\na4c6257-15536ecb369-d311f\t40\na4c628c-155214dce15-807f6\t40\na4c62e4-1550a403fb2-3090d1\t40\na4c62e4-1550da0ed65-7e23c\t40\na4c6257-1549f197a81-84004\t40\na4c6256-15503f55448-49cec2\t40\na4c6257-153d2416aa0-101d8\t40\na4c6255-155111ea395-5d48c1\t40\na4c628c-154bdf1b76a-ec732\t40\na4c62a6-1551fd7d749-798a4\t40\na4c6350-15490dbdc7c-3d5a5d\t40\na4c8257-1557375251e-820\t40\na4c62e4-1550cc6e524-18e2a\t40\na4c6255-1548d12e802-944970\t40\na4c6350-1550cdced49-23ba4\t40\na4c62e8-152fe2f395f-9e69a\t40\na4c6256-1550e0fac39-5b06b1\t40\na4c6256-1550cdcbe20-58df8a\t40\na4c62a6-154e121e914-b077\t40\na4c62e4-1549f09417e-5a75c9\t40\na4c62e4-1550d92d136-777d4\t40\na4c628c-154399edf66-2f32\t40\na4c6257-154cc54866b-117c2f\t40\na4c6256-15511f4c26b-5eb97a\t40\na4c628c-154f1067b85-3c65c\t40\na4c62e8-1552003d053-36980\t40\na4c6257-154c5b5cea7-10580d\t40\na4c628c-154969959e5-67f1f\t40\na4c62e4-1550d235f63-43e62\t40\na4c6350-1550c7a19f2-3efc1c\t40\na4c628c-155395e45f3-da45f\t40\na4c6350-15512bedd44-1eb293\t39\na4c6257-155000e78a2-69393\t39\na4c62a6-1551c0fbc0a-6e22c\t39\na4c62e4-1550aa81a0e-31d738\t39\na4c628c-15531727c03-be367\t39\na4c62a6-1550a22ccbb-25ca1\t39\na4c628c-154eda8d1d0-32608\t39\na4c62e4-1551cb7e1c0-47e8ff\t39\na4c628c-15524b2ddc3-8ce59\t39\na4c628c-152a340df43-199383\t39\na4c628c-154d509f2eb-35e01\t39\na4c62e4-15533baddaf-4673eb\t39\na4c62a6-14c11ec3b2c-8db4\t39\na4c628c-154d9471f78-43688\t39\na4c628c-1503ca51901-162\t39\na4c6350-1549eabebc4-596832\t39\na4c62a6-15508069768-1f0d1\t39\na4c62a6-154700e8855-3edd6\t39\na4c62a6-154add7bb59-b6123\t39\na4c62e4-1552110915d-5a45f7\t39\na4c6255-1541708d0d1-6208c\t39\na4c6257-155595a9339-4115\t39\na4c6350-15508e6cdcf-2fe274\t39\na4c637-154d560e037-365113\t39\na4c62a6-1550ba2e765-2c172\t39\na4c62a6-1513fe4b0ad-12211d\t39\na4c6291-1550e9d99c3-5be7ed\t39\na4c62a6-155276e1f43-97b41\t39\na4c637-1521160010e-3b92e5\t39\na4c622b-1559c79e682-395fc0\t39\na4c62e8-1550dfa40d9-1fe32\t39\na4c62a6-154fb4ef862-5aa1a\t39\na4c628c-1550ab7843c-27bfd\t39\na4c62a6-15527c77281-98fb2\t39\na4c62a6-14ee9bdc026-4e93c\t39\na4c6256-14c000bb6f0-672af1\t39\na4c628c-15507eb1aa7-1ee6c\t39\na4c637-154a62c4e1a-65009\t39\na4c6350-1550f62c4a6-c5655\t38\na4c6257-154b5e0e843-d1a6c\t38\na4c62a6-155550a5e87-1ccda\t38\na4c6291-15428841e62-2787dc\t38\na4c62a6-1551bab57f0-6c7fd\t38\na4c6257-154a0d00e63-8af7c\t38\na4c62a6-1553699c57c-d160d\t38\na4c628c-154d0238361-2609d\t38\na4c62e4-154e7f22aa6-1031ad\t38\na4c6350-1550d6a192b-643af\t38\na4c62a6-1551fe52cd5-79bd9\t38\na4c62a6-155780a30fc-6c2f6\t38\na4c637-149c4cc0d75-ce3ec\t38\na4c628c-1550710a86d-1b830\t38\na4c62a6-1510efce26e-64a1c\t38\na4c6257-154e25f73d9-fb08\t38\na4c62e4-155158f09e5-2645d7\t38\na4c62a6-154fda5f39f-631be\t38\na4c62a6-1554afeb553-1172b0\t38\na4c62a6-15502830bd3-83a1\t38\na4c62a6-15517e0dcf9-5d8f9\t38\na4c6257-15502d86f28-a1b8\t38\na4c62a6-1557dc80907-846ee\t38\na4c6350-1553e9da753-24db3f\t38\na4c6255-1543b939850-1d0404\t38\na4c6291-14ff142160f-bab0dd\t38\na4c6350-1550ca872e9-a544\t38\na4c62e4-1551c6eeb83-463983\t38\na4c62a6-15552f37c28-13705\t38\na4c62e8-1549ef4d2c3-3067c\t38\na4c62a6-15505ad9553-1471b\t38\na4c6257-154c3eade42-fe349\t38\na4c6350-154f1f22e1b-3e4004\t38\na4c62a6-15563a443bf-253d9\t38\na4c628c-15384f9c412-1b0e1b\t38\na4c6350-1550cd4cc96-1fa74\t38\na4c628c-155176a9b9e-5c4b2\t38\na4c62a6-154f5947503-4a393\t38\na4c6257-15566515e89-2e2a3\t38\na4c62a6-154bd7ed36c-ea55b\t38\na4c6350-1550cd3f783-1f425\t38\na4c637-1551bfa3d57-239968\t38\na4c6257-154c915e872-10dc87\t38\na4c622a-1550dd8aed0-58c524\t38\na4c6350-15427ec13e4-18c02\t38\na4c6291-154d9346f50-acc694\t38\na4c6350-1553b30800b-195e51\t38\na4c6291-14b16bf4124-e0682\t38\na4c6350-1550bb80134-39a381\t38\na4c62e8-1554b10b878-6afeb\t38\na4c6350-1550ce501fe-27b08\t38\na4c6257-1552b440d49-a5dc3\t38\na4c6291-15521527f82-73db3d\t38\na4c6257-1552d02f7c3-adbaa\t38\na4c62a6-1554b6eeae8-119016\t38\na4c628c-155182bae86-5f2df\t38\na4c62a6-155002599c7-69553\t38\na4c6350-15508d02e5a-2f81e6\t38\na4c62a6-1550bed3b05-2d90b\t38\na4c6256-15526acdc06-10290\t37\na4c6257-1554acef2b3-116e81\t37\na4c6257-15505a3cc3d-149d2\t37\na4c8257-15471d68df9-168\t37\na4c62e4-1550cd412a7-1f419\t37\na4c6291-15526dda75f-17a7f\t37\na4c628c-155057322a5-137c1\t37\na4c62e4-1551579aaee-25dcfc\t37\na4c6256-153a943387b-1010b0\t37\na4c6350-154f61421b8-4fae5c\t37\na4c62a6-154fcfa872a-609b1\t37\na4c62e4-154fd19d872-7101a4\t37\na4c6255-1551ff2d82f-70375a\t37\na4c6350-1550b6bf884-37b5f1\t37\na4c6256-155129cd693-5fcc59\t37\na4c62e4-154fccd7af4-6ec6c1\t37\na4c628c-154d81bf7d1-3e191\t37\na4c628c-1550be9f33f-2da97\t37\na4c6256-1550c656901-5803d7\t37\na4c622b-1555f0a8bd8-7d937b\t37\na4c62e8-154f864d921-616f\t37\na4c6291-1548eae0e4f-979cef\t37\na4c6257-1551dc94d7b-74dbf\t37\na4c62e8-15511762e69-2495b\t37\na4c6257-1545c6e8ddc-20ef\t37\na4c62a6-155286f40b0-9a46f\t37\na4c6350-1554a659c49-5e5c5e\t37\na4c6291-1542eac4b50-126e4\t37\na4c6350-1550cf75eca-302cd\t37\na4c8258-1556e06e260-a25\t37\na4c62a6-154b75fd122-d60de\t37\na4c628c-154f3a20076-4592f\t37\na4c62a6-1553f23b179-ee1ff\t37\na4c62a6-15552bdd6e0-1297c\t37\na4c6291-1557c89715f-a832f\t37\na4c62e8-15460b35abf-9866\t37\na4c637-15213f6a10e-3e56f6\t37\na4c6257-154c6952e4c-1075fd\t37\na4c62e4-1550bca6c84-38af3e\t37\na4c628c-154e8352b80-223ca\t37\na4c628c-1554b27bf1e-118386\t37\na4c6257-154e879dc9f-23633\t37\na4c62e8-1548a3f5621-199e1\t37\na4c62e4-154e1f62c5f-39a4a\t37\na4c6257-1550639f6e7-17c29\t37\na4c62e8-1548899fd00-18999\t37\na4c62a6-154bb89a9b3-e6b77\t37\na4c62a6-1555fe912ac-1a2a5\t37\na4c62e4-15508dad7f1-2e41df\t37\na4c6255-154d865dd2d-a806a0\t37\na4c6291-153129f79f2-11124b1\t37\na4c62e4-1550d117435-3bf69\t37\na4c62e4-15524575e9c-68e724\t37\na4c62a6-1545bdf8e55-2c39f\t37\na4c6350-15510b085d5-11bcc0\t37\na4c6350-1550b81b55a-383d9f\t37\na4c6291-1551630a5ec-6380f2\t37\na4c62a6-1552b7fb94c-a658f\t37\na4c6256-15107c826a1-1df04c\t37\na4c628c-14cae948228-316d8\t36\na4c6256-155086b9668-522835\t36\na4c62a6-154fc2e3adf-5db85\t36\na4c62a6-1550b0339be-28e8d\t36\na4c62a6-1556458bf62-2843b\t36\na4c62e4-1552c60b46f-277872\t36\na4c628c-1544e8effee-22f1\t36\na4c6350-1551009a146-e5d34\t36\na4c6350-154ee746f87-31874a\t36\na4c628c-1552a5acd38-a18fa\t36\na4c637-154e40421ca-59bf4\t36\na4c62e4-1550dfdb8f0-9f9c2\t36\na4c62e8-154f7ccba37-5604\t36\na4c6255-1552c77c926-b9d3e\t36\na4c62a6-154163ebdf8-65a9\t36\na4c6350-155117c41a8-1618a8\t36\na4c62a6-15516065c64-55e40\t36\na4c8255-14f6a958036-5f806\t36\na4c62e4-1550cb33d77-f681\t36\na4c628c-1550cb189a2-31479\t36\na4c62e4-1550ce8a86b-295a5\t36\na4c62e4-1552665df59-775d0\t36\na4c6291-152190efe32-c4d835\t36\na4c62e4-15510831898-10c91d\t36\na4c62e4-1550e626e3c-b167f\t36\na4c628c-152b2d29aae-1de38e\t36\na4c62a6-154ad800254-b5a02\t36\na4c6291-154d1ee7d42-98dc92\t36\na4c62a6-154a8b3be42-a3743\t36\n\n\u003cfont color\u003dred\u003eResults are limited by 1000.\u003c/font\u003e"
      },
      "dateCreated": "Feb 21, 2017 2:56:44 PM",
      "dateStarted": "Feb 21, 2017 3:05:21 PM",
      "dateFinished": "Feb 21, 2017 3:05:38 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "//number of users and offers which clicked/were clicked at least once\nval parquetFileClick \u003d sqlContext.read.parquet(\"/home/ama/sidana/calypso_kk_june_data/click/*/2016/*/*/*.parquet\")\nval clicksWithoutKFS \u003d  parquetFileClick.filter(!($\"offerViewId\".isNull))\nval uniqueUsers \u003d clicksWithoutKFS.select(\"userId\").distinct\nval uniqueOffers \u003d clicksWithoutKFS.select(substring_index(clicksWithoutKFS(\"offerViewId\"),\"-\",1)).distinct\nuniqueUsers.count\nuniqueOffers.count",
      "authenticationInfo": {},
      "dateUpdated": "Feb 2, 2017 2:00:36 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1479227067813_1274815957",
      "id": "20161115-172427_2002222346",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "parquetFileClick: org.apache.spark.sql.DataFrame \u003d [userId: string, ip: string, userAgent: struct\u003cdeviceType:string,operatingSystem:string,browser:string,rawUserAgent:string\u003e, geolocation: struct\u003ccountry:string,countryCode:string,state:string,city:string,timeZone:string\u003e, siteDomain: struct\u003ccountryCode:string,domainName:string\u003e, dataCenter: string, utcDate: timestamp, offerTitle: string, category: array\u003cstring\u003e, price: decimal(38,18), merchant: string, source: string, keywords: array\u003cstring\u003e, offerViewId: string, clickId: string, earning: decimal(38,18)]\nclicksWithoutKFS: org.apache.spark.sql.DataFrame \u003d [userId: string, ip: string, userAgent: struct\u003cdeviceType:string,operatingSystem:string,browser:string,rawUserAgent:string\u003e, geolocation: struct\u003ccountry:string,countryCode:string,state:string,city:string,timeZone:string\u003e, siteDomain: struct\u003ccountryCode:string,domainName:string\u003e, dataCenter: string, utcDate: timestamp, offerTitle: string, category: array\u003cstring\u003e, price: decimal(38,18), merchant: string, source: string, keywords: array\u003cstring\u003e, offerViewId: string, clickId: string, earning: decimal(38,18)]\nuniqueUsers: org.apache.spark.sql.DataFrame \u003d [userId: string]\nuniqueOffers: org.apache.spark.sql.DataFrame \u003d [substring_index(offerViewId,-,1): string]\nres1: Long \u003d 9275273\nres2: Long \u003d 4730568\n"
      },
      "dateCreated": "Nov 15, 2016 5:24:27 PM",
      "dateStarted": "Nov 15, 2016 6:56:08 PM",
      "dateFinished": "Nov 15, 2016 7:49:17 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "//Compute overall offer Stats\n\nval parquetFileOffer \u003d sqlContext.read.parquet(\"/home/ama/sidana/calypso_kk_june_data/offerView/*/2016/*/*/*.parquet\")\nval uniqueUsers \u003d parquetFileOffer.select(\"userId\").distinct\nval uniqueOfferViews \u003d parquetFileOffer.select(\"offerViewId\").distinct\nval uniqueOfferCategories \u003d parquetFileOffer.select(\"category\").distinct\n\nparquetFileOffer.count\nuniqueUsers.count\nuniqueOfferViews.count\nuniqueOfferCategories.count\n\n\nval offerId \u003d parquetFileOffer.select(substring_index(parquetFileOffer(\"offerViewId\"),\"-\",1))\nval uniqueOfferId \u003d offerId.select(\"substring_index(offerViewId,-,1)\").distinct\n\nuniqueOfferId.count\nval groupedOffers \u003d parquetFileOffer.groupBy(\"userId\").count.sort(desc(\"count\"))\ngroupedOffers.select(avg($\"count\")).show",
      "authenticationInfo": {},
      "dateUpdated": "Sep 26, 2016 1:47:13 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 177.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1467641051630_1207529635",
      "id": "20160704-160411_1287336823",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "parquetFileOffer: org.apache.spark.sql.DataFrame \u003d [eventType: string, userId: string, ip: string, userAgent: struct\u003cdeviceType:string,operatingSystem:string,browser:string,rawUserAgent:string\u003e, geolocation: struct\u003ccountry:string,countryCode:string,state:string,city:string,timeZone:string\u003e, siteDomain: struct\u003ccountryCode:string,domainName:string\u003e, dataCenter: string, utcDate: timestamp, offerTitle: string, category: array\u003cstring\u003e, price: decimal(38,18), merchant: string, source: string, keywords: array\u003cstring\u003e, adType: string, offerRank: int, searchId: string, offerViewId: string, contentPageType: string, adPlacement: string, adViewability: string, adSize: string]\nofferId: org.apache.spark.sql.DataFrame \u003d [substring_index(offerViewId,-,1): string]\nuniqueOfferId: org.apache.spark.sql.DataFrame \u003d [substring_index(offerViewId,-,1): string]\nres0: Long \u003d 56667919\n"
      },
      "dateCreated": "Jul 4, 2016 4:04:11 PM",
      "dateStarted": "Jul 7, 2016 3:48:31 PM",
      "dateFinished": "Jul 7, 2016 3:59:46 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val parquetFileOffer \u003d sqlContext.read.parquet(\"/home/ama/sidana/calypso_kk_june_data/offerView/*/2016/*/*/*.parquet\")\nval uniqueOfferCategories \u003d parquetFileOffer.select(\"category\").distinct\nuniqueOfferCategories.count",
      "authenticationInfo": {},
      "dateUpdated": "Aug 8, 2018 6:48:00 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1533746858422_1652068542",
      "id": "20180808-184738_1079840965",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "parquetFileOffer: org.apache.spark.sql.DataFrame \u003d [eventType: string, userId: string, ip: string, userAgent: struct\u003cdeviceType:string,operatingSystem:string,browser:string,rawUserAgent:string\u003e, geolocation: struct\u003ccountry:string,countryCode:string,state:string,city:string,timeZone:string\u003e, siteDomain: struct\u003ccountryCode:string,domainName:string\u003e, dataCenter: string, utcDate: timestamp, offerTitle: string, category: array\u003cstring\u003e, price: decimal(38,18), merchant: string, source: string, keywords: array\u003cstring\u003e, adType: string, offerRank: int, searchId: string, offerViewId: string, contentPageType: string, adPlacement: string, adViewability: string, adSize: string]\nuniqueOfferCategories: org.apache.spark.sql.DataFrame \u003d [category: array\u003cstring\u003e]\nres4: Long \u003d 680\n"
      },
      "dateCreated": "Aug 8, 2018 6:47:38 PM",
      "dateStarted": "Aug 8, 2018 6:48:00 PM",
      "dateFinished": "Aug 8, 2018 6:51:55 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "//Computes click stats by country\n\nimport java.nio.file.{ Files, Paths }\nimport scala.collection.mutable.ListBuffer\nimport java.io.FileWriter\nval fw \u003d new FileWriter(\"/home/ama/sidana/kelkoo_june_stats/clickStats.txt\", true)\nval countryCodes \u003d Array(\"at\",\"be\",\"br\",\"ch\",\"cz\",\"de\",\"dk\",\"es\",\"fi\",\"ie\",\"nb\",\"nl\",\"no\",\"pl\",\"pt\",\"ru\",\"se\",\"uk\",\"it\",\"fr\")\nfor (code \u003c- countryCodes){\n    val parquetFileClick \u003d sqlContext.read.parquet(\"/home/ama/sidana/calypso_kk_june_data/click/\"+code+\"/2016/*/*/\")\n    val clicksWithoutKFS \u003d parquetFileClick.filter(!($\"source\".contains(\"kfs\")))\n    val uniqueUsers \u003d clicksWithoutKFS.select(\"userId\").distinct.count\n    val uniqueOffers \u003d clicksWithoutKFS.select(\"offerViewId\").distinct.count\n    val observedNumberOfRatings \u003d clicksWithoutKFS.select(\"userId\",\"offerViewId\").distinct.count\n    val uniqueOfferCategories \u003d clicksWithoutKFS.select(\"category\").distinct.count\n    val numClicks \u003d clicksWithoutKFS.count\n    fw.write(code+\",\"+ numClicks +\",\"+uniqueUsers+\",\"+uniqueOffers+\",\"+observedNumberOfRatings+\",\"+uniqueOfferCategories+\"\\n\")\n}\nfw.close()",
      "authenticationInfo": {},
      "dateUpdated": "Oct 25, 2016 9:47:02 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1467920880236_-782776005",
      "id": "20160707-214800_1526770949",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import java.nio.file.{Files, Paths}\nimport scala.collection.mutable.ListBuffer\nimport java.io.FileWriter\nfw: java.io.FileWriter \u003d java.io.FileWriter@38fd21b5\ncountryCodes: Array[String] \u003d Array(at, be, br, ch, cz, de, dk, es, fi, ie, nb, nl, no, pl, pt, ru, se, uk, it, fr)\n"
      },
      "dateCreated": "Jul 7, 2016 9:48:00 PM",
      "dateStarted": "Oct 26, 2016 12:33:45 AM",
      "dateFinished": "Oct 26, 2016 12:41:17 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1533748004666_-732213291",
      "id": "20180808-190644_1639401940",
      "dateCreated": "Aug 8, 2018 7:06:44 PM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import java.nio.file.{ Files, Paths }\nimport scala.collection.mutable.ListBuffer\nimport java.io.FileWriter\nval fw \u003d new FileWriter(\"/home/ama/sidana/kelkoo_june_stats/country_merchants.txt\", true)\nval countryCodes \u003d Array(\"at\",\"be\",\"br\",\"ch\",\"cz\",\"de\",\"dk\",\"es\",\"fi\",\"ie\",\"nb\",\"nl\",\"no\",\"pl\",\"pt\",\"ru\",\"se\",\"uk\",\"it\",\"fr\")\nfor (code \u003c- countryCodes){\n    val parquetFileClick \u003d sqlContext.read.parquet(\"/home/ama/sidana/calypso_kk_june_data/click/\"+code+\"/2016/*/*/\")\n    val clicksWithoutKFS \u003d parquetFileClick.filter(!($\"source\".contains(\"kfs\")))\n    val uniqueOfferMerchants \u003d clicksWithoutKFS.select(\"merchant\").distinct.count\n    val numClicks \u003d clicksWithoutKFS.count\n    fw.write(code+\",\"+ uniqueOfferMerchants+\"\\n\")\n}\nfw.close()",
      "authenticationInfo": {},
      "dateUpdated": "Aug 8, 2018 7:06:50 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1533747881378_1042694159",
      "id": "20180808-190441_1767953326",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "import java.nio.file.{Files, Paths}\nimport scala.collection.mutable.ListBuffer\nimport java.io.FileWriter\nfw: java.io.FileWriter \u003d java.io.FileWriter@6379f3ef\ncountryCodes: Array[String] \u003d Array(at, be, br, ch, cz, de, dk, es, fi, ie, nb, nl, no, pl, pt, ru, se, uk, it, fr)\n"
      },
      "dateCreated": "Aug 8, 2018 7:04:41 PM",
      "dateStarted": "Aug 8, 2018 7:06:50 PM",
      "dateFinished": "Aug 8, 2018 9:44:44 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "//compute users by country\n\nimport java.nio.file.{ Files, Paths }\nimport scala.collection.mutable.ListBuffer\nimport java.io.FileWriter\nval fw \u003d new FileWriter(\"/home/ama/sidana/kelkoo_june_stats/userStats.txt\", true)\nval countryCodes \u003d Array(\"at\",\"be\",\"br\",\"ch\",\"cz\",\"de\",\"dk\",\"es\",\"fi\",\"ie\",\"nb\",\"nl\",\"no\",\"pl\",\"pt\",\"ru\",\"se\",\"uk\",\"it\",\"fr\")\nfor (code \u003c- countryCodes){\n    val parquetFileClick \u003d sqlContext.read.parquet(\"/home/ama/sidana/calypso_kk_june_data/offerView/\"+code+\"/2016/*/*/\")\n    val clicksWithoutKFS \u003d parquetFileClick.filter(!($\"source\".contains(\"kfs\")))\n    val uniqueUsers \u003d clicksWithoutKFS.select(\"userId\").distinct.count\n    val uniqueOffers \u003d clicksWithoutKFS.select(\"offerViewId\").distinct.count\n    val observedNumberOfRatings \u003d clicksWithoutKFS.select(\"userId\",\"offerViewId\").distinct.count\n    val uniqueOfferCategories \u003d clicksWithoutKFS.select(\"category\").distinct.count\n    val numClicks \u003d clicksWithoutKFS.count\n    fw.write(code+\",\"+ numClicks +\",\"+uniqueUsers+\",\"+uniqueOffers+\",\"+observedNumberOfRatings+\",\"+uniqueOfferCategories+\"\\n\")\n}\nfw.close()",
      "dateUpdated": "Jul 25, 2018 9:56:12 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1532505308815_-1117286570",
      "id": "20180725-095508_2051679965",
      "dateCreated": "Jul 25, 2018 9:55:08 AM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "//clicks per country\n\nval parquetFileClick \u003d sqlContext.read.parquet(\"/home/ama/sidana/calypso_kk_june_data/click/*/2016/*/*/*.parquet\")\nval clicksWithoutKFS \u003d parquetFileClick.filter(!($\"source\".contains(\"kfs\")))\nval clicksbyCountry \u003d clicksWithoutKFS.groupBy($\"siteDomain\".getItem(\"countryCode\")).count.sort(desc(\"count\"))\nclicksbyCountry.rdd.coalesce(1, false).saveAsTextFile(\"/data/sidana/recsysBaselines/numClicksByCountry.csv\")",
      "authenticationInfo": {},
      "dateUpdated": "Oct 25, 2016 9:44:13 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1467905639918_1614570240",
      "id": "20160707-173359_1825269003",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "parquetFileClick: org.apache.spark.sql.DataFrame \u003d [userId: string, ip: string, userAgent: struct\u003cdeviceType:string,operatingSystem:string,browser:string,rawUserAgent:string\u003e, geolocation: struct\u003ccountry:string,countryCode:string,state:string,city:string,timeZone:string\u003e, siteDomain: struct\u003ccountryCode:string,domainName:string\u003e, dataCenter: string, utcDate: timestamp, offerTitle: string, category: array\u003cstring\u003e, price: decimal(38,18), merchant: string, source: string, keywords: array\u003cstring\u003e, offerViewId: string, clickId: string, earning: decimal(38,18)]\nclicksWithoutKFS: org.apache.spark.sql.DataFrame \u003d [userId: string, ip: string, userAgent: struct\u003cdeviceType:string,operatingSystem:string,browser:string,rawUserAgent:string\u003e, geolocation: struct\u003ccountry:string,countryCode:string,state:string,city:string,timeZone:string\u003e, siteDomain: struct\u003ccountryCode:string,domainName:string\u003e, dataCenter: string, utcDate: timestamp, offerTitle: string, category: array\u003cstring\u003e, price: decimal(38,18), merchant: string, source: string, keywords: array\u003cstring\u003e, offerViewId: string, clickId: string, earning: decimal(38,18)]\nclicksbyCountry: org.apache.spark.sql.DataFrame \u003d [siteDomain[countryCode]: string, count: bigint]\n"
      },
      "dateCreated": "Jul 7, 2016 5:33:59 PM",
      "dateStarted": "Oct 25, 2016 11:50:05 PM",
      "dateFinished": "Oct 26, 2016 12:34:56 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "//users (who clicked at least once) by country\n\nval parquetFileClick \u003d sqlContext.read.parquet(\"/home/ama/sidana/calypso_kk_june_data/click/*/2016/*/*/*.parquet\")\n//val clicksWithoutKFS \u003d parquetFileClick.filter(!($\"source\".contains(\"kfs\")))\nval clicksWithoutKFS \u003d parquetFileClick.filter(!($\"offerViewId\".isNull))\nval clicksbyCountry \u003d clicksWithoutKFS.groupBy($\"siteDomain\".getItem(\"countryCode\"),parquetFileClick(\"userId\")).count\nval usersbyCountry \u003d clicksbyCountry.groupBy(clicksbyCountry(\"siteDomain[countryCode]\")).count.sort(desc(\"count\"))\nusersbyCountry.rdd.coalesce(1, true).saveAsTextFile(\"/data/sidana/recsysBaselines/numUsers_C_ByCountry.csv\")",
      "authenticationInfo": {},
      "dateUpdated": "Nov 15, 2016 4:09:21 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1467925564786_-168147303",
      "id": "20160707-230604_2140429207",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "parquetFileClick: org.apache.spark.sql.DataFrame \u003d [userId: string, ip: string, userAgent: struct\u003cdeviceType:string,operatingSystem:string,browser:string,rawUserAgent:string\u003e, geolocation: struct\u003ccountry:string,countryCode:string,state:string,city:string,timeZone:string\u003e, siteDomain: struct\u003ccountryCode:string,domainName:string\u003e, dataCenter: string, utcDate: timestamp, offerTitle: string, category: array\u003cstring\u003e, price: decimal(38,18), merchant: string, source: string, keywords: array\u003cstring\u003e, offerViewId: string, clickId: string, earning: decimal(38,18)]\nclicksWithoutKFS: org.apache.spark.sql.DataFrame \u003d [userId: string, ip: string, userAgent: struct\u003cdeviceType:string,operatingSystem:string,browser:string,rawUserAgent:string\u003e, geolocation: struct\u003ccountry:string,countryCode:string,state:string,city:string,timeZone:string\u003e, siteDomain: struct\u003ccountryCode:string,domainName:string\u003e, dataCenter: string, utcDate: timestamp, offerTitle: string, category: array\u003cstring\u003e, price: decimal(38,18), merchant: string, source: string, keywords: array\u003cstring\u003e, offerViewId: string, clickId: string, earning: decimal(38,18)]\nclicksbyCountry: org.apache.spark.sql.DataFrame \u003d [siteDomain[countryCode]: string, userId: string, count: bigint]\nusersbyCountry: org.apache.spark.sql.DataFrame \u003d [siteDomain[countryCode]: string, count: bigint]\n"
      },
      "dateCreated": "Jul 7, 2016 11:06:04 PM",
      "dateStarted": "Nov 15, 2016 4:09:22 PM",
      "dateFinished": "Nov 15, 2016 4:47:30 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "//offers (which were clicked at least once) by country\n\nval parquetFileClick \u003d sqlContext.read.parquet(\"/home/ama/sidana/calypso_kk_june_data/click/*/2016/*/*/*.parquet\")\n//val clicksWithoutKFS \u003d parquetFileClick.filter(!($\"source\".contains(\"kfs\")))\nval clicksWithoutKFS \u003d parquetFileClick.filter(!($\"offerViewId\".isNull))\nval clicksbyCountry \u003d clicksWithoutKFS.select($\"siteDomain\".getItem(\"countryCode\"),substring_index(clicksWithoutKFS(\"offerViewId\"),\"-\",1)).distinct\nval offersbyCountry \u003d clicksbyCountry.groupBy(clicksbyCountry(\"siteDomain[countryCode]\")).count.sort(desc(\"count\"))\noffersbyCountry.rdd.coalesce(1, true).saveAsTextFile(\"/data/sidana/recsysBaselines/numOffers_C_ByCountry.csv\")\n",
      "authenticationInfo": {},
      "dateUpdated": "Nov 15, 2016 5:14:24 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1479225386811_-1629278011",
      "id": "20161115-165626_1477539610",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "parquetFileClick: org.apache.spark.sql.DataFrame \u003d [userId: string, ip: string, userAgent: struct\u003cdeviceType:string,operatingSystem:string,browser:string,rawUserAgent:string\u003e, geolocation: struct\u003ccountry:string,countryCode:string,state:string,city:string,timeZone:string\u003e, siteDomain: struct\u003ccountryCode:string,domainName:string\u003e, dataCenter: string, utcDate: timestamp, offerTitle: string, category: array\u003cstring\u003e, price: decimal(38,18), merchant: string, source: string, keywords: array\u003cstring\u003e, offerViewId: string, clickId: string, earning: decimal(38,18)]\nclicksWithoutKFS: org.apache.spark.sql.DataFrame \u003d [userId: string, ip: string, userAgent: struct\u003cdeviceType:string,operatingSystem:string,browser:string,rawUserAgent:string\u003e, geolocation: struct\u003ccountry:string,countryCode:string,state:string,city:string,timeZone:string\u003e, siteDomain: struct\u003ccountryCode:string,domainName:string\u003e, dataCenter: string, utcDate: timestamp, offerTitle: string, category: array\u003cstring\u003e, price: decimal(38,18), merchant: string, source: string, keywords: array\u003cstring\u003e, offerViewId: string, clickId: string, earning: decimal(38,18)]\nclicksbyCountry: org.apache.spark.sql.DataFrame \u003d [siteDomain[countryCode]: string, substring_index(offerViewId,-,1): string]\noffersbyCountry: org.apache.spark.sql.DataFrame \u003d [siteDomain[countryCode]: string, count: bigint]\n"
      },
      "dateCreated": "Nov 15, 2016 4:56:26 PM",
      "dateStarted": "Nov 15, 2016 5:14:25 PM",
      "dateFinished": "Nov 15, 2016 5:54:01 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// users (who were shown at least one offer)by country\nval parquetFileOffer \u003d sqlContext.read.parquet(\"/home/ama/sidana/calypso_kk_june_data/offerView/*/2016/*/*/*.parquet\")\nval offersbyCountry \u003d parquetFileOffer.groupBy($\"siteDomain\".getItem(\"countryCode\"),parquetFileOffer(\"userId\")).count\nval usersbyCountry \u003d offersbyCountry.groupBy(offersbyCountry(\"siteDomain[countryCode]\")).count.sort(desc(\"count\"))\nusersbyCountry.rdd.coalesce(1, false).saveAsTextFile(\"/data/sidana/recsysBaselines/numUsersByCountry.csv\")",
      "authenticationInfo": {},
      "dateUpdated": "Oct 25, 2016 9:43:40 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1468185406808_-617015197",
      "id": "20160710-231646_105447849",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "parquetFileOffer: org.apache.spark.sql.DataFrame \u003d [eventType: string, userId: string, ip: string, userAgent: struct\u003cdeviceType:string,operatingSystem:string,browser:string,rawUserAgent:string\u003e, geolocation: struct\u003ccountry:string,countryCode:string,state:string,city:string,timeZone:string\u003e, siteDomain: struct\u003ccountryCode:string,domainName:string\u003e, dataCenter: string, utcDate: timestamp, offerTitle: string, category: array\u003cstring\u003e, price: decimal(38,18), merchant: string, source: string, keywords: array\u003cstring\u003e, adType: string, offerRank: int, searchId: string, offerViewId: string, contentPageType: string, adPlacement: string, adViewability: string, adSize: string]\noffersbyCountry: org.apache.spark.sql.DataFrame \u003d [siteDomain[countryCode]: string, userId: string, count: bigint]\nusersbyCountry: org.apache.spark.sql.DataFrame \u003d [siteDomain[countryCode]: string, count: bigint]\n"
      },
      "dateCreated": "Jul 10, 2016 11:16:46 PM",
      "dateStarted": "Oct 25, 2016 9:43:40 PM",
      "dateFinished": "Oct 26, 2016 12:33:45 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "//offerViews per country\n\nval parquetFileOffer \u003d sqlContext.read.parquet(\"/home/ama/sidana/calypso_kk_june_data/offerView/*/2016/*/*/*.parquet\")\nval uniqueOffers \u003d parquetFileOffer.groupBy($\"siteDomain\".getItem(\"countryCode\")).count\nval uniqueOffersSorted \u003d uniqueOffers.sort($\"count\".desc)\nuniqueOffersSorted.rdd.coalesce(1, false).saveAsTextFile(\"/data/sidana/recsysBaselines/numOfferViewsByCountry.csv\")",
      "authenticationInfo": {},
      "dateUpdated": "Oct 25, 2016 9:43:32 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1467925838857_-173353710",
      "id": "20160707-231038_1126126236",
      "result": "org.apache.thrift.transport.TTransportException",
      "dateCreated": "Jul 7, 2016 11:10:38 PM",
      "dateStarted": "Oct 25, 2016 9:42:30 PM",
      "dateFinished": "Oct 25, 2016 9:43:04 PM",
      "status": "FINISHED",
      "errorMessage": "org.apache.thrift.transport.TTransportException\n\tat org.apache.thrift.transport.TIOStreamTransport.read(TIOStreamTransport.java:132)\n\tat org.apache.thrift.transport.TTransport.readAll(TTransport.java:86)\n\tat org.apache.thrift.protocol.TBinaryProtocol.readAll(TBinaryProtocol.java:429)\n\tat org.apache.thrift.protocol.TBinaryProtocol.readI32(TBinaryProtocol.java:318)\n\tat org.apache.thrift.protocol.TBinaryProtocol.readMessageBegin(TBinaryProtocol.java:219)\n\tat org.apache.thrift.TServiceClient.receiveBase(TServiceClient.java:69)\n\tat org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.recv_interpret(RemoteInterpreterService.java:232)\n\tat org.apache.zeppelin.interpreter.thrift.RemoteInterpreterService$Client.interpret(RemoteInterpreterService.java:216)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreter.interpret(RemoteInterpreter.java:240)\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:93)\n\tat org.apache.zeppelin.notebook.Paragraph.jobRun(Paragraph.java:242)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:171)\n\tat org.apache.zeppelin.scheduler.RemoteScheduler$JobRunner.run(RemoteScheduler.java:328)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val kasandr \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \"\\t\")\n        .load(\"/data/sidana/recsysBaselines/calypsodata/files/anonymized/kasandr.csv.anon\")\n\nval groupByCategory \u003d kasandr.groupBy(\"category\").count.sort(desc(\"count\"))\n\nz.show(groupByCategory)\n\n\n\n",
      "authenticationInfo": {},
      "dateUpdated": "Apr 13, 2018 10:14:06 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1479328132932_319933936",
      "id": "20161116-212852_1399066278",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "category\tcount\n100020213\t1199779\n108101\t947482\n108301\t879588\n125801\t879034\n100354123\t848450\n113501\t493571\n100232023\t375041\n100567813\t332858\n100091613\t323887\n142101\t315704\n109401\t308153\n100332323\t306928\n168001\t286563\n100372023\t260560\n138201\t255938\n108501\t254982\n134101\t238372\n143401\t235716\n100334223\t216511\n130401\t216255\n100434023\t213718\n164401\t191857\n100544223\t191383\n100010713\t187036\n107401\t180481\n100564713\t175520\n133301\t154220\n136901\t147603\n138001\t141409\n100389523\t140917\n137001\t140590\n133501\t140002\n109301\t136372\n100342923\t128304\n100332223\t126553\n108701\t122734\n100046613\t122120\n100565013\t119522\n100384023\t118153\n129801\t111621\n108801\t108697\n5101\t102347\n137701\t100706\n154001\t99134\n100565213\t98295\n138301\t96630\n135901\t95452\n100007613\t92182\n141601\t90674\n164901\t82988\n100282123\t82915\n100291623\t82471\n100484623\t82278\n100564913\t79942\n100483023\t76707\n100566313\t76372\n100392423\t71297\n100544023\t71063\n165101\t70692\n6513\t69991\n117001\t69328\n152401\t68776\n100332423\t68065\n100317323\t66721\n134001\t63821\n100323123\t62986\n100302923\t62933\n100322923\t62019\n173801\t61821\n100392523\t60463\n100371523\t59335\n100001\t58775\n137901\t58692\n100201\t56785\n136201\t56592\n108901\t55074\n100566213\t54283\n120901\t54265\n100567613\t53185\n7113\t52350\n100438023\t51817\n138701\t51490\n116901\t50810\n100314123\t49173\n141901\t48838\n100233223\t48701\n100356623\t47813\n100568013\t46837\n122701\t45953\n100567513\t45848\n100441023\t45111\n100346323\t44351\n100014313\t44139\n124901\t43287\n134501\t43197\n170101\t42809\n140001\t42525\n100005613\t42377\n143101\t42113\n100360623\t36684\n100450823\t36523\n100462723\t36404\n143501\t36296\n100311823\t32812\n100477023\t31488\n128601\t31411\n116501\t29235\n100316423\t28275\n111801\t28197\n147101\t27847\n100119813\t26417\n140401\t26356\n100572513\t26236\n114901\t25777\n100376523\t25576\n100512823\t25371\n112101\t25192\n100450223\t24451\n100508823\t24212\n100508923\t23362\n146501\t23353\n100361423\t23261\n146801\t22922\n100565113\t22577\n168301\t22374\n100310723\t22156\n173101\t22060\n122301\t21796\n124501\t21407\n100327723\t20864\n100052213\t20499\n113301\t20077\n100367723\t19090\n114401\t18712\n139401\t18599\n174201\t18159\n111601\t18137\n146401\t17655\n100260023\t17633\n149201\t17545\n128801\t17500\n126001\t16593\n164501\t16461\n100278823\t16181\n100291823\t15904\n150701\t15836\n122801\t15230\n145101\t14944\n100008213\t14928\n123501\t14807\n100250023\t14622\n166501\t14425\n113201\t14308\n146601\t13474\n100440723\t13403\n133901\t13392\n165701\t13335\n110401\t13209\n100239223\t12700\n132601\t12335\n145801\t12267\n100332523\t11959\n146901\t11515\n100472023\t11403\n100014113\t11172\n100358623\t11098\n146001\t10647\n100270423\t10476\n127201\t10324\n100283023\t9433\n100570713\t9331\n100066413\t9148\n115401\t8945\n147701\t8927\n145701\t8779\n146201\t8721\n100282623\t8654\n115701\t8654\n100158013\t8574\n100563013\t8419\n100052013\t8333\n145001\t7980\n100008013\t7922\n100299223\t7859\n163801\t7830\n100146713\t7726\n100216323\t7260\n127701\t7214\n4513\t7212\n146301\t7200\n100270223\t6660\n172201\t6416\n111101\t6386\n100282723\t6258\n100082113\t5599\n110801\t5558\n100293223\t5546\n123201\t5421\n148301\t5342\n100005813\t5137\n100340423\t5135\n100426223\t5133\n114601\t4881\n145401\t4831\n100283323\t4812\n100066813\t4589\n112201\t4511\n147801\t4293\n133201\t4059\n166401\t4017\n100310423\t3966\n100496023\t3766\n100282023\t3742\n100356423\t3507\n100567413\t3387\n100229323\t3309\n100066613\t3218\n126701\t3167\n116001\t3163\n172301\t3064\n100444023\t2995\n113101\t2897\n123601\t2791\n110901\t2788\n100043413\t2710\n111501\t2588\n126901\t2500\n100294523\t2190\n173701\t2143\n110601\t2012\n115901\t1934\n121601\t1923\n121301\t1819\n100014413\t1808\n128401\t1670\n100340223\t1609\n122501\t1604\n100345923\t1603\n147201\t1599\n147901\t1477\n100304323\t1461\n100007713\t1427\n165201\t1356\n125601\t1266\n100239623\t1231\n100331323\t1185\n148001\t1174\n147301\t998\n100014713\t809\n100311523\t513\n116401\t504\n100327223\t483\n100270523\t418\n100232923\t415\n135001\t407\n100295823\t404\n100278923\t380\n100345823\t378\n166201\t356\n100333423\t337\n100485423\t315\n100345723\t286\n133101\t284\n100472123\t267\n100556113\t226\n124401\t199\n121201\t103\n100020813\t91\n100270123\t91\n128101\t20\n109101\t15\n170701\t1\n"
      },
      "dateCreated": "Nov 16, 2016 9:28:52 PM",
      "dateStarted": "Apr 13, 2018 10:14:06 AM",
      "dateFinished": "Apr 13, 2018 10:14:26 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val parquetFileOfferView \u003d sqlContext.read.parquet(\"/home/ama/sidana/calypso_kk_june_data/offerView/*/2016/*/*/*.parquet\")\nval parquetFileOffer \u003d parquetFileOfferView.select(substring_index(parquetFileOfferView(\"offerViewId\"),\"-\",1),$\"siteDomain\".getItem(\"countryCode\"))\nval offerCountryGroup \u003d parquetFileOffer.groupBy(\"siteDomain[countryCode]\",\"substring_index(offerViewId,-,1)\").count\nval uniqueOffers \u003d offerCountryGroup.groupBy(\"siteDomain[countryCode]\").count.sort(desc(\"count\"))\nuniqueOffers.rdd.coalesce(1, false).saveAsTextFile(\"/data/sidana/recsysBaselines/numOffersByCountry.csv\")",
      "authenticationInfo": {},
      "dateUpdated": "Oct 25, 2016 9:43:32 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1467926080577_-1837440320",
      "id": "20160707-231440_144476891",
      "result": {
        "code": "ERROR",
        "type": "TEXT",
        "msg": "parquetFileOfferView: org.apache.spark.sql.DataFrame \u003d [eventType: string, userId: string, ip: string, userAgent: struct\u003cdeviceType:string,operatingSystem:string,browser:string,rawUserAgent:string\u003e, geolocation: struct\u003ccountry:string,countryCode:string,state:string,city:string,timeZone:string\u003e, siteDomain: struct\u003ccountryCode:string,domainName:string\u003e, dataCenter: string, utcDate: timestamp, offerTitle: string, category: array\u003cstring\u003e, price: decimal(38,18), merchant: string, source: string, keywords: array\u003cstring\u003e, adType: string, offerRank: int, searchId: string, offerViewId: string, contentPageType: string, adPlacement: string, adViewability: string, adSize: string]\nparquetFileOffer: org.apache.spark.sql.DataFrame \u003d [substring_index(offerViewId,-,1): string, siteDomain[countryCode]: string]\nofferCountryGroup: org.apache.spark.sql.DataFrame \u003d [siteDomain[countryCode]: string, substring_index(offerViewId,-,1): string, count: bigint]\nuniqueOffers: org.apache.spark.sql.DataFrame \u003d [siteDomain[countryCode]: string, count: bigint]\norg.apache.hadoop.mapred.FileAlreadyExistsException: Output directory file:/data/sidana/recsysBaselines/numOffersByCountry.csv already exists\n\tat org.apache.hadoop.mapred.FileOutputFormat.checkOutputSpecs(FileOutputFormat.java:132)\n\tat org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1.apply$mcV$sp(PairRDDFunctions.scala:1179)\n\tat org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1.apply(PairRDDFunctions.scala:1156)\n\tat org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1.apply(PairRDDFunctions.scala:1156)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:150)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:111)\n\tat org.apache.spark.rdd.RDD.withScope(RDD.scala:316)\n\tat org.apache.spark.rdd.PairRDDFunctions.saveAsHadoopDataset(PairRDDFunctions.scala:1156)\n\tat org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopFile$4.apply$mcV$sp(PairRDDFunctions.scala:1060)\n\tat org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopFile$4.apply(PairRDDFunctions.scala:1026)\n\tat org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopFile$4.apply(PairRDDFunctions.scala:1026)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:150)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:111)\n\tat org.apache.spark.rdd.RDD.withScope(RDD.scala:316)\n\tat org.apache.spark.rdd.PairRDDFunctions.saveAsHadoopFile(PairRDDFunctions.scala:1026)\n\tat org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopFile$1.apply$mcV$sp(PairRDDFunctions.scala:952)\n\tat org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopFile$1.apply(PairRDDFunctions.scala:952)\n\tat org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopFile$1.apply(PairRDDFunctions.scala:952)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:150)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:111)\n\tat org.apache.spark.rdd.RDD.withScope(RDD.scala:316)\n\tat org.apache.spark.rdd.PairRDDFunctions.saveAsHadoopFile(PairRDDFunctions.scala:951)\n\tat org.apache.spark.rdd.RDD$$anonfun$saveAsTextFile$1.apply$mcV$sp(RDD.scala:1457)\n\tat org.apache.spark.rdd.RDD$$anonfun$saveAsTextFile$1.apply(RDD.scala:1436)\n\tat org.apache.spark.rdd.RDD$$anonfun$saveAsTextFile$1.apply(RDD.scala:1436)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:150)\n\tat org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:111)\n\tat org.apache.spark.rdd.RDD.withScope(RDD.scala:316)\n\tat org.apache.spark.rdd.RDD.saveAsTextFile(RDD.scala:1436)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:36)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:41)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:43)\n\tat $iwC$$iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:45)\n\tat $iwC$$iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:47)\n\tat $iwC$$iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:49)\n\tat $iwC$$iwC.\u003cinit\u003e(\u003cconsole\u003e:51)\n\tat $iwC.\u003cinit\u003e(\u003cconsole\u003e:53)\n\tat \u003cinit\u003e(\u003cconsole\u003e:55)\n\tat .\u003cinit\u003e(\u003cconsole\u003e:59)\n\tat .\u003cclinit\u003e(\u003cconsole\u003e)\n\tat .\u003cinit\u003e(\u003cconsole\u003e:7)\n\tat .\u003cclinit\u003e(\u003cconsole\u003e)\n\tat $print(\u003cconsole\u003e)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat org.apache.spark.repl.SparkIMain$ReadEvalPrint.call(SparkIMain.scala:1065)\n\tat org.apache.spark.repl.SparkIMain$Request.loadAndRun(SparkIMain.scala:1346)\n\tat org.apache.spark.repl.SparkIMain.loadAndRunReq$1(SparkIMain.scala:840)\n\tat org.apache.spark.repl.SparkIMain.interpret(SparkIMain.scala:871)\n\tat org.apache.spark.repl.SparkIMain.interpret(SparkIMain.scala:819)\n\tat org.apache.zeppelin.spark.SparkInterpreter.interpretInput(SparkInterpreter.java:812)\n\tat org.apache.zeppelin.spark.SparkInterpreter.interpret(SparkInterpreter.java:755)\n\tat org.apache.zeppelin.spark.SparkInterpreter.interpret(SparkInterpreter.java:748)\n\tat org.apache.zeppelin.interpreter.ClassloaderInterpreter.interpret(ClassloaderInterpreter.java:57)\n\tat org.apache.zeppelin.interpreter.LazyOpenInterpreter.interpret(LazyOpenInterpreter.java:93)\n\tat org.apache.zeppelin.interpreter.remote.RemoteInterpreterServer$InterpretJob.jobRun(RemoteInterpreterServer.java:331)\n\tat org.apache.zeppelin.scheduler.Job.run(Job.java:171)\n\tat org.apache.zeppelin.scheduler.FIFOScheduler$1.run(FIFOScheduler.java:139)\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:262)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178)\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n\tat java.lang.Thread.run(Thread.java:745)\n\n"
      },
      "dateCreated": "Jul 7, 2016 11:14:40 PM",
      "dateStarted": "Oct 25, 2016 9:43:33 PM",
      "dateFinished": "Oct 25, 2016 11:50:05 PM",
      "status": "ERROR",
      "progressUpdateIntervalMs": 500
    },
    {
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1468331373947_1146700090",
      "id": "20160712-154933_312720961",
      "dateCreated": "Jul 12, 2016 3:49:33 PM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "kelkooBaselines: kelkooDataStats_June",
  "id": "2BQPWFCNT",
  "angularObjects": {
    "2BJGSXM37": [],
    "2BGHSKCA7": [],
    "2BHKKP27G": [],
    "2BGVG5JP4": [],
    "2BFMBPKAB": [],
    "2BF969NNB": [],
    "2BJAQG5W4": [],
    "2BJHJDBK6": [],
    "2BHKAE8WK": [],
    "2BG8QQJNC": [],
    "2BJ7KKX85": [],
    "2BH9AVVKH": [],
    "2BJ6HN5AY": [],
    "2BFEDXCTE": [],
    "2BJ5FCP57": [],
    "2BJ8AEWCT": [],
    "2BFXEV5XZ": [],
    "2BG77RV7M": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}