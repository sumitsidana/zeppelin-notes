{
  "paragraphs": [
    {
      "text": "val dfEvents \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \",\")\n    .load(\"/home/ama/spark/outbrain/Data/events.csv\")\n\nval train \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \",\")\n    .load(\"/home/ama/spark/outbrain/Data/clicks_train.csv\")\n    \nval train_event_join \u003d dfEvents.join(train,dfEvents(\"display_id\")\u003d\u003d\u003dtrain(\"display_id\")).drop(train(\"display_id\"))\nval distinctdisplays \u003d train_event_join.select(\"display_id\").distinct.count\nval distinctuserdisplays \u003d train_event_join.select(\"uuid\",\"display_id\").distinct.count\n",
      "authenticationInfo": {},
      "dateUpdated": "Jan 10, 2017 12:02:43 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1476723528732_-355780693",
      "id": "20161017-185848_2119384276",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "dfEvents: org.apache.spark.sql.DataFrame \u003d [display_id: int, uuid: string, document_id: int, timestamp: int, platform: string, geo_location: string]\ntrain: org.apache.spark.sql.DataFrame \u003d [display_id: int, ad_id: int, clicked: int]\ntrain_event_join: org.apache.spark.sql.DataFrame \u003d [display_id: int, uuid: string, document_id: int, timestamp: int, platform: string, geo_location: string, ad_id: int, clicked: int]\ndistinctdisplays: Long \u003d 16874593\ndistinctuserdisplays: Long \u003d 16874593\n"
      },
      "dateCreated": "Oct 17, 2016 6:58:48 PM",
      "dateStarted": "Jan 10, 2017 12:02:43 PM",
      "dateFinished": "Jan 10, 2017 12:05:30 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "//val train_event_join \u003d dfEvents.join(train,dfEvents(\"display_id\")\u003d\u003d\u003dtrain(\"display_id\")).drop(train(\"display_id\"))\nval distinctdisplays \u003d train_event_join.select(\"display_id\").distinct.count\nval distinctuserdisplays \u003d train_event_join.select(\"uuid\",\"display_id\").distinct.count",
      "authenticationInfo": {},
      "dateUpdated": "Jan 10, 2017 12:02:51 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1482392719039_-1242741485",
      "id": "20161222-084519_845329734",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "train_event_join: org.apache.spark.sql.DataFrame \u003d [display_id: int, uuid: string, document_id: int, timestamp: int, platform: string, geo_location: string, ad_id: int, clicked: int]\ndistinctdisplays: Long \u003d 15472837\ndistinctuserdisplays: Long \u003d 15472837\n"
      },
      "dateCreated": "Dec 22, 2016 8:45:19 AM",
      "dateStarted": "Dec 22, 2016 9:13:06 AM",
      "dateFinished": "Dec 22, 2016 9:14:41 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val goodTrain \u003d train.filter($\"clicked\"\u003d\u003d\u003d\"1\")",
      "authenticationInfo": {},
      "dateUpdated": "Jan 9, 2017 10:54:58 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1482394269632_927833376",
      "id": "20161222-091109_1099734884",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "goodTrain: org.apache.spark.sql.DataFrame \u003d [display_id: int, ad_id: int, clicked: int]\n"
      },
      "dateCreated": "Dec 22, 2016 9:11:09 AM",
      "dateStarted": "Jan 9, 2017 10:54:59 PM",
      "dateFinished": "Jan 9, 2017 10:55:00 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val groupedByUsersandOffers \u003d goodTrain.groupBy(goodTrain(\"display_id\"),goodTrain(\"ad_id\")).count.sort(desc(\"count\"))\nval groupedByOffers \u003d groupedByUsersandOffers.groupBy(\"ad_id\").count.sort(desc(\"count\"))\nval topItems \u003d groupedByUsersandOffers.select(groupedByUsersandOffers(\"display_id\"),groupedByUsersandOffers(\"ad_id\")).rdd.map(r \u003d\u003e r(0)).take(12)\nimport java.nio.file.{ Files, Paths }\nimport scala.collection.mutable.ListBuffer\nimport java.io.FileWriter\nvar items \u003d new ListBuffer[String]()\nval fw \u003d new FileWriter(\"/data/sidana/outbrain/popularity/mostpopularitems.txt\", true)\nfor( a \u003c- 1 to 12){\nval firstval \u003d topItems(a-1)\nitems +\u003d firstval.toString.toString\nfw.write(firstval.toString.toString+\" \")\n}\nfw.close()",
      "authenticationInfo": {},
      "dateUpdated": "Jan 9, 2017 11:05:52 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1482394704256_-398784121",
      "id": "20161222-091824_62565244",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "groupedByUsersandOffers: org.apache.spark.sql.DataFrame \u003d [display_id: int, ad_id: int, count: bigint]\ngroupedByOffers: org.apache.spark.sql.DataFrame \u003d [ad_id: int, count: bigint]\ntopItems: Array[Any] \u003d Array(322, 549, 594, 630, 852, 920, 1095, 1143, 1261, 1460, 1464, 1968)\nimport java.nio.file.{Files, Paths}\nimport scala.collection.mutable.ListBuffer\nimport java.io.FileWriter\nitems: scala.collection.mutable.ListBuffer[String] \u003d ListBuffer()\nfw: java.io.FileWriter \u003d java.io.FileWriter@393470f0\n"
      },
      "dateCreated": "Dec 22, 2016 9:18:24 AM",
      "dateStarted": "Jan 9, 2017 11:05:52 PM",
      "dateFinished": "Jan 9, 2017 11:07:12 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val fw \u003d new FileWriter(\"/data/sidana/outbrain/popularity/mostpopularitems.txt\", true)\nfor( a \u003c- 1 to 12){\nval firstval \u003d topItems(a-1)\nitems +\u003d firstval.toString.toString\nfw.write(firstval.toString.toString+\" \")\n}\nfw.close()",
      "authenticationInfo": {},
      "dateUpdated": "Jan 9, 2017 10:57:57 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1482394965513_867595244",
      "id": "20161222-092245_63406251",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "fw: java.io.FileWriter \u003d java.io.FileWriter@187881ec\n"
      },
      "dateCreated": "Dec 22, 2016 9:22:45 AM",
      "dateStarted": "Jan 9, 2017 10:57:57 PM",
      "dateFinished": "Jan 9, 2017 10:57:58 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1483999052282_-222837247",
      "id": "20170109-225732_198444264",
      "dateCreated": "Jan 9, 2017 10:57:32 PM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "outbrain: Popularity",
  "id": "2C15JBADW",
  "angularObjects": {
    "2BGHSKCA7": [],
    "2BFMBPKAB": [],
    "2BHKKP27G": [],
    "2BJHJDBK6": [],
    "2BJAQG5W4": [],
    "2BJGSXM37": [],
    "2BFXEV5XZ": [],
    "2BG77RV7M": [],
    "2BF969NNB": [],
    "2BG8QQJNC": [],
    "2BGVG5JP4": [],
    "2BJ5FCP57": [],
    "2BFEDXCTE": [],
    "2BJ8AEWCT": [],
    "2BH9AVVKH": [],
    "2BJ7KKX85": [],
    "2BHKAE8WK": [],
    "2BJ6HN5AY": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}