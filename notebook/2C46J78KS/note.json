{
  "paragraphs": [
    {
      "text": "import java.io.FileWriter\nval countryCodes \u003d Array(\"at\",\"be\",\"br\",\"ch\",\"cz\",\"de\",\"dk\",\"es\",\"fi\",\"ie\",\"nb\",\"nl\",\"no\",\"pl\",\"pt\",\"ru\",\"se\",\"uk\",\"it\",\"fr\")\n\n\tval fw \u003d new FileWriter(\"/data/sidana/recsysBaselines/experiments/inputffm/createffmfeatures.txt\", true)\n\t\t\t\t\tfor (code \u003c- countryCodes){\n\t\t\t\t\t    val t1 \u003d System.currentTimeMillis\n\t\t\t\t\t    \tval inputfile \u003d sqlContext.read\n\t\t\t\t\t\t\t.format(\"com.databricks.spark.csv\") \n\t\t\t\t\t\t\t.option(\"header\", \"true\") // Use first line of all files as header\n\t\t\t\t\t\t\t.option(\"inferSchema\", \"true\") // Automatically infer data types\n\t\t\t\t\t\t\t.option(\"delimiter\", \",\")\n\t\t\t\t\t\t\t.load(\"/data/sidana/recsysBaselines/experiments/tsplitfiles/train_\"+code+\".csv\")\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tval interactions  \u003d  inputfile.filter(!($\"useridclicks\" \u003d\u003d\u003d \"null\"))\n\t\t\t\t\t\t\tval groupbyUser \u003d interactions.groupBy(\"useridclicks\").count.sort(desc(\"count\"))\n\t\t\t\t\t\t\tval groupbyOffer \u003d interactions.groupBy(\"offeridclicks\").count.sort(desc(\"count\"))\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tgroupbyUser.rdd.coalesce(1,false).saveAsTextFile(\"/data/sidana/recsysBaselines/experiments/stats/userClicks_\"+code+\".train\")\n\t\t\t\t\t\t\tgroupbyOffer.rdd.coalesce(1,false).saveAsTextFile(\"/data/sidana/recsysBaselines/experiments/stats/offerClicks_\"+code+\".train\")\n\t\t\t\t\t\t\tval t2 \u003d System.currentTimeMillis\n\t\t\t\t\t\t\tfw.write(\"code,\"+(t2 - t1) + \" msecs\")\n\t\t\t\t\t\t\t\n\t\t\t\t\t}",
      "authenticationInfo": {},
      "dateUpdated": "Feb 14, 2017 9:41:26 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1481387275320_-1453902845",
      "id": "20161210-172755_25920863",
      "dateCreated": "Dec 10, 2016 5:27:55 PM",
      "dateStarted": "Dec 10, 2016 11:50:12 PM",
      "dateFinished": "Dec 10, 2016 11:50:35 PM",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import java.io.FileWriter\nval countryCodes \u003d Array(\"at\",\"be\",\"br\",\"ch\",\"cz\",\"de\",\"dk\",\"es\",\"fi\",\"ie\",\"nb\",\"nl\",\"no\",\"pl\",\"pt\",\"ru\",\"se\",\"uk\",\"it\",\"fr\")\nval fw \u003d new FileWriter(\"/data/sidana/recsysBaselines/experiments/inputffm/createffmfeatures.txt\", true)\nfor (code \u003c- countryCodes){\n    \t\t\t\t\t    \t\t\t\t\t\t\tval inputfile \u003d sqlContext.read\n\t\t\t\t\t\t\t.format(\"com.databricks.spark.csv\") \n\t\t\t\t\t\t\t.option(\"header\", \"true\") // Use first line of all files as header\n\t\t\t\t\t\t\t.option(\"inferSchema\", \"true\") // Automatically infer data types\n\t\t\t\t\t\t\t.option(\"delimiter\", \",\")\n\t\t\t\t\t\t\t.load(\"/data/sidana/recsysBaselines/experiments/tsplitfiles/train_\"+code+\".csv\").withColumn(\"utcdate\",unix_timestamp($\"utcdate\",\"yyyy-MM-dd HH:mm:ss\").cast(\"timestamp\")).withColumnRenamed(\"cast(unixtimestamp(utcdate,yyyy-MM-dd HH:mm:ss) as timestamp)\",\"utcdate\")\n\t\t\t\t\t\t\t\n    \t\t\t\t\t    \t\t\t\t\t\t\tval groupbyUser \u003d sqlContext.read\n\t\t\t\t\t\t\t.format(\"com.databricks.spark.csv\") \n\t\t\t\t\t\t\t.option(\"header\", \"true\") // Use first line of all files as header\n\t\t\t\t\t\t\t.option(\"inferSchema\", \"true\") // Automatically infer data types\n\t\t\t\t\t\t\t.option(\"delimiter\", \",\")\n\t\t\t\t\t\t\t.load(\"/data/sidana/recsysBaselines/experiments/stats/userClicks_\"+code+\".train\")\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tval inputusercount \u003d inputfile.join(groupbyUser,inputfile(\"useridoffers\")\u003c\u003d\u003egroupbyUser(\"userid\"),\"left_outer\")\n\t\t\t\t\t\t\tval ordered \u003d inputusercount.orderBy(\"utcdate\")\n\t\t\t\t\t\t\tordered.rdd.coalesce(1,false).saveAsTextFile(\"/data/sidana/recsysBaselines/experiments/inputffm/ffminput_\"+code+\".csv\")\n}",
      "authenticationInfo": {},
      "dateUpdated": "Dec 11, 2016 1:26:24 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1481390456263_-357466479",
      "id": "20161210-182056_1708326205",
      "dateCreated": "Dec 10, 2016 6:20:56 PM",
      "dateStarted": "Dec 11, 2016 1:26:24 AM",
      "dateFinished": "Dec 11, 2016 1:26:49 AM",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import java.io.FileWriter\nval countryCodes \u003d Array(\"at\",\"be\",\"br\",\"ch\",\"cz\",\"de\",\"dk\",\"es\",\"fi\",\"ie\",\"nb\",\"nl\",\"no\",\"pl\",\"pt\",\"ru\",\"se\",\"uk\",\"it\",\"fr\")\nval fw \u003d new FileWriter(\"/data/sidana/recsysBaselines/experiments/inputffm/createffmfeatures.txt\", true)\nfor (code \u003c- countryCodes){\n    \t\t\t\t\t    \t\t\t\t\t\t\tval inputfile \u003d sqlContext.read\n\t\t\t\t\t\t\t.format(\"com.databricks.spark.csv\") \n\t\t\t\t\t\t\t.option(\"header\", \"true\") // Use first line of all files as header\n\t\t\t\t\t\t\t.option(\"inferSchema\", \"true\") // Automatically infer data types\n\t\t\t\t\t\t\t.option(\"delimiter\", \",\")\n\t\t\t\t\t\t\t.load(\"/data/sidana/recsysBaselines/experiments/inputffm/ffminput_\"+code+\".csv\").withColumn(\"utcdate\",unix_timestamp($\"utcdate\",\"yyyy-MM-dd HH:mm:ss\").cast(\"timestamp\")).withColumnRenamed(\"cast(unixtimestamp(utcdate,yyyy-MM-dd HH:mm:ss) as timestamp)\",\"utcdate\")\n\t\t\t\t\t\t\t\n    \t\t\t\t\t    \t\t\t\t\t\t\tval groupbyOffer \u003d sqlContext.read\n\t\t\t\t\t\t\t.format(\"com.databricks.spark.csv\") \n\t\t\t\t\t\t\t.option(\"header\", \"true\") // Use first line of all files as header\n\t\t\t\t\t\t\t.option(\"inferSchema\", \"true\") // Automatically infer data types\n\t\t\t\t\t\t\t.option(\"delimiter\", \",\")\n\t\t\t\t\t\t\t.load(\"/data/sidana/recsysBaselines/experiments/stats/offerClicks_\"+code+\".train\")\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tval inputuseroffercount \u003d inputfile.join(groupbyOffer,inputfile(\"offeridoffers\")\u003c\u003d\u003egroupbyOffer(\"offerid\"),\"left_outer\")\n\t\t\t\t\t\t\tval ordered \u003d inputuseroffercount.orderBy(\"utcdate\")\n\t\t\t\t\t\t\tordered.rdd.coalesce(1,false).saveAsTextFile(\"/data/sidana/recsysBaselines/experiments/inputffm/temp/ffminput_\"+code+\".csv\")\n}",
      "dateUpdated": "Dec 11, 2016 9:08:49 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1481411709025_1129539658",
      "id": "20161211-001509_405277783",
      "dateCreated": "Dec 11, 2016 12:15:09 AM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import java.io.FileWriter\nval countryCodes \u003d Array(\"at\",\"be\",\"br\",\"ch\",\"cz\",\"de\",\"dk\",\"es\",\"fi\",\"ie\",\"nb\",\"nl\",\"no\",\"pl\",\"pt\",\"ru\",\"se\",\"uk\",\"it\",\"fr\")\n\n\tval fw \u003d new FileWriter(\"/data/sidana/recsysBaselines/experiments/inputffm/createffmfeatures.txt\", true)\n\t\t\t\t\tfor (code \u003c- countryCodes){\n\t\t\t\t\t    val t1 \u003d System.currentTimeMillis\n\t\t\t\t\t    \t\t\t\t\t\t\tval inputfile \u003d sqlContext.read\n\t\t\t\t\t\t\t.format(\"com.databricks.spark.csv\") \n\t\t\t\t\t\t\t.option(\"header\", \"true\") // Use first line of all files as header\n\t\t\t\t\t\t\t.option(\"inferSchema\", \"true\") // Automatically infer data types\n\t\t\t\t\t\t\t.option(\"delimiter\", \",\")\n\t\t\t\t\t\t\t.load(\"/data/sidana/recsysBaselines/experiments/tsplitfiles/test_\"+code+\".csv\")\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tval interactions  \u003d  inputfile.filter(!($\"useridclicks\" \u003d\u003d\u003d \"null\"))\n\t\t\t\t\t\t\tval groupbyUser \u003d interactions.groupBy(\"useridclicks\").count.sort(desc(\"count\"))\n\t\t\t\t\t\t\tval groupbyOffer \u003d interactions.groupBy(\"offeridclicks\").count.sort(desc(\"count\"))\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tgroupbyUser.rdd.coalesce(1,false).saveAsTextFile(\"/data/sidana/recsysBaselines/experiments/stats/userClicks_\"+code+\".test\")\n\t\t\t\t\t\t\tgroupbyOffer.rdd.coalesce(1,false).saveAsTextFile(\"/data/sidana/recsysBaselines/experiments/stats/offerClicks_\"+code+\".test\")\n\t\t\t\t\t\t\tval t2 \u003d System.currentTimeMillis\n\t\t\t\t\t\t\tfw.write(\"code,\"+(t2 - t1) + \" msecs\")\n\t\t\t\t\t\t\t\n\t\t\t\t\t}",
      "dateUpdated": "Dec 11, 2016 6:43:14 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1481478163811_-1293076218",
      "id": "20161211-184243_1783146248",
      "dateCreated": "Dec 11, 2016 6:42:43 PM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import java.io.FileWriter\nval countryCodes \u003d Array(\"at\",\"be\",\"br\",\"ch\",\"cz\",\"de\",\"dk\",\"es\",\"fi\",\"ie\",\"nb\",\"nl\",\"no\",\"pl\",\"pt\",\"ru\",\"se\",\"uk\",\"it\",\"fr\")\nfor (code \u003c- countryCodes){\n    \t\t\t\t\t    \t\t\t\t\t\t\tval inputfile \u003d sqlContext.read\n\t\t\t\t\t\t\t.format(\"com.databricks.spark.csv\") \n\t\t\t\t\t\t\t.option(\"header\", \"true\") // Use first line of all files as header\n\t\t\t\t\t\t\t.option(\"inferSchema\", \"true\") // Automatically infer data types\n\t\t\t\t\t\t\t.option(\"delimiter\", \",\")\n\t\t\t\t\t\t\t.load(\"/data/sidana/recsysBaselines/experiments/tsplitfiles/test_\"+code+\".csv\").withColumn(\"utcdate\",unix_timestamp($\"utcdate\",\"yyyy-MM-dd HH:mm:ss\").cast(\"timestamp\")).withColumnRenamed(\"cast(unixtimestamp(utcdate,yyyy-MM-dd HH:mm:ss) as timestamp)\",\"utcdate\")\n\t\t\t\t\t\t\t\n    \t\t\t\t\t    \t\t\t\t\t\t\tval groupbyUser \u003d sqlContext.read\n\t\t\t\t\t\t\t.format(\"com.databricks.spark.csv\") \n\t\t\t\t\t\t\t.option(\"header\", \"true\") // Use first line of all files as header\n\t\t\t\t\t\t\t.option(\"inferSchema\", \"true\") // Automatically infer data types\n\t\t\t\t\t\t\t.option(\"delimiter\", \",\")\n\t\t\t\t\t\t\t.load(\"/data/sidana/recsysBaselines/experiments/stats/userClicks_\"+code+\".test\")\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tval inputusercount \u003d inputfile.join(groupbyUser,inputfile(\"useridoffers\")\u003c\u003d\u003egroupbyUser(\"userid\"),\"left_outer\")\n\t\t\t\t\t\t\tval ordered \u003d inputusercount.orderBy(\"utcdate\")\n\t\t\t\t\t\t\tordered.rdd.coalesce(1,false).saveAsTextFile(\"/data/sidana/recsysBaselines/experiments/inputffm/test/userclicks/ffminput_\"+code+\".csv\")\n}",
      "dateUpdated": "Dec 11, 2016 9:11:46 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1481479363489_988292942",
      "id": "20161211-190243_702058311",
      "dateCreated": "Dec 11, 2016 7:02:43 PM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "import java.io.FileWriter\nval countryCodes \u003d Array(\"at\",\"be\",\"br\",\"ch\",\"cz\",\"de\",\"dk\",\"es\",\"fi\",\"ie\",\"nb\",\"nl\",\"no\",\"pl\",\"pt\",\"ru\",\"se\",\"uk\",\"it\",\"fr\")\nfor (code \u003c- countryCodes){\n    \t\t\t\t\t    val inputfile \u003d sqlContext.read\n\t\t\t\t\t\t\t.format(\"com.databricks.spark.csv\") \n\t\t\t\t\t\t\t.option(\"header\", \"true\") // Use first line of all files as header\n\t\t\t\t\t\t\t.option(\"inferSchema\", \"true\") // Automatically infer data types\n\t\t\t\t\t\t\t.option(\"delimiter\", \",\")\n\t\t\t\t\t\t\t.load(\"/data/sidana/recsysBaselines/experiments/inputffm/test/userclicks/ffminput_\"+code+\".csv\").withColumn(\"utcdate\",unix_timestamp($\"utcdate\",\"yyyy-MM-dd HH:mm:ss\").cast(\"timestamp\")).withColumnRenamed(\"cast(unixtimestamp(utcdate,yyyy-MM-dd HH:mm:ss) as timestamp)\",\"utcdate\")\n\t\t\t\t\t\t\t\n    \t\t\t\t\t    val groupbyOffer \u003d sqlContext.read\n\t\t\t\t\t\t\t.format(\"com.databricks.spark.csv\") \n\t\t\t\t\t\t\t.option(\"header\", \"true\") // Use first line of all files as header\n\t\t\t\t\t\t\t.option(\"inferSchema\", \"true\") // Automatically infer data types\n\t\t\t\t\t\t\t.option(\"delimiter\", \",\")\n\t\t\t\t\t\t\t.load(\"/data/sidana/recsysBaselines/experiments/stats/offerClicks_\"+code+\".test\")\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tval inputuseroffercount \u003d inputfile.join(groupbyOffer,inputfile(\"offeridoffers\")\u003c\u003d\u003egroupbyOffer(\"offerid\"),\"left_outer\")\n\t\t\t\t\t\t\tval ordered \u003d inputuseroffercount.orderBy(\"utcdate\")\n\t\t\t\t\t\t\tordered.rdd.coalesce(1,false).saveAsTextFile(\"/data/sidana/recsysBaselines/experiments/inputffm/test/userofferclicks/ffminput_\"+code+\".csv\")\n}",
      "dateUpdated": "Feb 14, 2017 5:45:53 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1481479402249_1580867545",
      "id": "20161211-190322_29976756",
      "dateCreated": "Dec 11, 2016 7:03:22 PM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "kelkooBaselines: createFFMFeatures",
  "id": "2C46J78KS",
  "angularObjects": {
    "2BGHSKCA7": [],
    "2BFMBPKAB": [],
    "2BHKKP27G": [],
    "2BJHJDBK6": [],
    "2BJAQG5W4": [],
    "2BJGSXM37": [],
    "2BFXEV5XZ": [],
    "2BG77RV7M": [],
    "2BF969NNB": [],
    "2BG8QQJNC": [],
    "2BGVG5JP4": [],
    "2BJ5FCP57": [],
    "2BFEDXCTE": [],
    "2BJ8AEWCT": [],
    "2BH9AVVKH": [],
    "2BJ7KKX85": [],
    "2BHKAE8WK": [],
    "2BJ6HN5AY": []
  },
  "config": {
    "looknfeel": "default"
  },
  "info": {}
}