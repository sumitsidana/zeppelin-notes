{
  "paragraphs": [
    {
      "text": "//write distinct users\n\nval test \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \"\\t\")\n    .load(\"/data/sidana/recnet_draft/cold_start/data/ml1m/inputdata.headers\")\nval usersTemp \u003d test.select(\"userid\").distinct\nval header \u003d \"userid\"\nval users\u003dusersTemp.rdd.map(_.mkString(\",\")).mapPartitionsWithIndex((i, iter) \u003d\u003e if (i\u003d\u003d0) (List(header).toIterator ++ iter) else iter)\nusers.coalesce(1,false).saveAsTextFile(\"/data/sidana/recnet_draft/data/ml1m/cold_start/dat.ml1m.users\")",
      "authenticationInfo": {},
      "dateUpdated": "Jul 23, 2017 7:23:41 PM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1500825605418_-735033601",
      "id": "20170723-180005_1681313610",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "test: org.apache.spark.sql.DataFrame \u003d [userid: int, itemid: int, rating: int, timestamp: int]\nusersTemp: org.apache.spark.sql.DataFrame \u003d [userid: int]\nheader: String \u003d userid\nusers: org.apache.spark.rdd.RDD[String] \u003d MapPartitionsRDD[101] at mapPartitionsWithIndex at \u003cconsole\u003e:33\n"
      },
      "dateCreated": "Jul 23, 2017 6:00:05 PM",
      "dateStarted": "Jul 23, 2017 6:46:41 PM",
      "dateFinished": "Jul 23, 2017 6:46:51 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val test \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \"\\t\")\n    .load(\"/data/sidana/recnet_draft/cold_start/inputdata.headers\")\nval itemsTemp \u003d test.select(\"itemid\").distinct\nval header \u003d \"itemid\"\nval items \u003d itemsTemp.rdd.map(_.mkString(\",\")).mapPartitionsWithIndex((i, iter) \u003d\u003e if (i\u003d\u003d0) (List(header).toIterator ++ iter) else iter)\nitems.coalesce(1,false).saveAsTextFile(\"/data/sidana/recnet_draft/cold_start/dat.ml1m.items\")",
      "authenticationInfo": {},
      "dateUpdated": "Jul 23, 2017 6:46:42 PM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1500825605418_-735033601",
      "id": "20170723-180005_1248016044",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "test: org.apache.spark.sql.DataFrame \u003d [userid: int, itemid: int, rating: int, timestamp: int]\nitemsTemp: org.apache.spark.sql.DataFrame \u003d [itemid: int]\nheader: String \u003d itemid\nitems: org.apache.spark.rdd.RDD[String] \u003d MapPartitionsRDD[121] at mapPartitionsWithIndex at \u003cconsole\u003e:33\n"
      },
      "dateCreated": "Jul 23, 2017 6:00:05 PM",
      "dateStarted": "Jul 23, 2017 6:46:42 PM",
      "dateFinished": "Jul 23, 2017 6:47:02 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val test \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \"\\t\")\n    .load(\"/data/sidana/recnet_draft/cold_start/inputdata.headers\")\n    \nval sample \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \"\\t\")\n    .load(\"/data/sidana/recnet_draft/cold_start/dat.ml1m.users.old\")\n    \nval newusersTemp \u003d test.select(\"userid\").except(sample.select(\"userid\")).distinct\n\nval header \u003d \"userId\"\n\nval newusers \u003d newusersTemp.rdd.map(_.mkString(\",\")).mapPartitionsWithIndex((i, iter) \u003d\u003e if (i\u003d\u003d0) (List(header).toIterator ++ iter) else iter)\n\nnewusers.coalesce(1,false).saveAsTextFile(\"/data/sidana/embColdStart/ml_1m/dat.ml1m.users.new.temp\")\n",
      "dateUpdated": "Jul 23, 2017 8:49:49 PM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1500825605419_-735418350",
      "id": "20170723-180005_932871259",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "test: org.apache.spark.sql.DataFrame \u003d [userid: int, itemid: int, rating: int, timestamp: int]\nsample: org.apache.spark.sql.DataFrame \u003d [userid: int]\nnewusers: org.apache.spark.sql.DataFrame \u003d [userid: int]\n"
      },
      "dateCreated": "Jul 23, 2017 6:00:05 PM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val test \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \"\\t\")\n    .load(\"/data/sidana/embColdStart/ml_1m/input_data/inputdata.headers\")\n\nval sample \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \"\\t\")\n    .load(\"/data/sidana/embColdStart/ml_1m/dat.ml_1m.items.old\")\n\nval newitems \u003d test.select(\"itemid\").except(sample.select(\"itemid\")).distinct\n\nnewitems.rdd.coalesce(1,false).saveAsTextFile(\"/data/sidana/embColdStart/ml_1m/dat.ml1m.items.new.temp\")\n\n",
      "dateUpdated": "Jul 23, 2017 7:51:19 PM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1500825605419_-735418350",
      "id": "20170723-180005_2136626913",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "test: org.apache.spark.sql.DataFrame \u003d [userid: int, itemid: int, rating: int, timestamp: int]\nsample: org.apache.spark.sql.DataFrame \u003d [itemid: int]\nnewitems: org.apache.spark.sql.DataFrame \u003d [itemid: int]\n"
      },
      "dateCreated": "Jul 23, 2017 6:00:05 PM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "//old users old items\nval test \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \"\\t\")\n    .load(\"/data/sidana/embColdStart/ml_1m/input_data/inputdata.headers\")\n\nval oldUsers \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \"\\t\")\n    .load(\"/data/sidana/embColdStart/ml_1m/dat.ml_1m.users.old\")\n\nval oldItems \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \"\\t\")\n    .load(\"/data/sidana/embColdStart/ml_1m/dat.ml_1m.items.old\")\n\n\n\n    \nval trainUsers \u003d test.join(oldUsers,test(\"userid\")\u003d\u003d\u003doldUsers(\"userid\")).drop(oldUsers(\"userid\"))\nval trainUsersItems \u003d trainUsers.join(oldItems,trainUsers(\"itemid\")\u003d\u003d\u003doldItems(\"itemId\")).drop(oldItems(\"itemid\"))\n\nval distinctUsersRating \u003d trainUsersItems.select(\"userId\",\"rating\").distinct\nval groupByUsers \u003d  groupByUsers.groupBy(\"userId\").count\nval goodUsers  \u003d groupByUsers.filter($\"count\"\u003e\u003d2)\n\nval filetobewrittentemp \u003d trainUsersItems.join(goodUsers,trainUsersItems(\"userId\")\u003d\u003d\u003dgoodUsers(\"userId\")).drop(goodUsers(\"userId\")).drop(goodUsers(\"count\"))\n\nval header \u003d \"userId,movieId,rating,timestamp\"\n\nval filetobewritten \u003dfiletobewrittentemp.map(_.mkString(\",\")).mapPartitionsWithIndex((i, iter) \u003d\u003e if (i\u003d\u003d0) (List(header).toIterator ++ iter) else iter)\n\nfiletobewritten.coalesce(1,false).saveAsTextFile(\"/data/sidana/embColdStart/ml_1m/dat.ml_1m.oldusersolditems\")",
      "dateUpdated": "Jul 23, 2017 8:57:16 PM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1500825605419_-735418350",
      "id": "20170723-180005_66981657",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "test: org.apache.spark.sql.DataFrame \u003d [userid: int, itemid: int, rating: int, timestamp: int]\noldUsers: org.apache.spark.sql.DataFrame \u003d [userid: int]\noldItems: org.apache.spark.sql.DataFrame \u003d [itemid: int]\ntrainUsers: org.apache.spark.sql.DataFrame \u003d [userid: int, itemid: int, rating: int, timestamp: int]\ntrainUsersItems: org.apache.spark.sql.DataFrame \u003d [userid: int, itemid: int, rating: int, timestamp: int]\n"
      },
      "dateCreated": "Jul 23, 2017 6:00:05 PM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "//new users old items\n\nval test \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \"\\t\")\n    .load(\"/data/sidana/embColdStart/ml_1m/input_data/inputdata.headers\")\n\nval newUsers \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \"\\t\")\n    .load(\"/data/sidana/embColdStart/ml_1m/dat.ml_1m.users.new\")\n\nval oldItems \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \"\\t\")\n    .load(\"/data/sidana/embColdStart/ml_1m/dat.ml_1m.items.old\")\n\n\n\n    \nval trainUsers \u003d test.join(newUsers,test(\"userid\")\u003d\u003d\u003dnewUsers(\"userid\")).drop(newUsers(\"userid\"))\n\nval trainUsersItems \u003d trainUsers.join(oldItems,trainUsers(\"itemid\")\u003d\u003d\u003doldItems(\"itemId\")).drop(oldItems(\"itemid\"))\n\ntrainUsersItems.rdd.coalesce(1,false).saveAsTextFile(\"/data/sidana/embColdStart/ml_1m/dat.ml_1m.newusersolditems\")",
      "dateUpdated": "Jul 23, 2017 6:00:05 PM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1500825605419_-735418350",
      "id": "20170723-180005_479278171",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "test: org.apache.spark.sql.DataFrame \u003d [userid: int, itemid: int, rating: int, timestamp: int]\nnewUsers: org.apache.spark.sql.DataFrame \u003d [userid: int]\noldItems: org.apache.spark.sql.DataFrame \u003d [itemid: int]\ntrainUsers: org.apache.spark.sql.DataFrame \u003d [userid: int, itemid: int, rating: int, timestamp: int]\ntrainUsersItems: org.apache.spark.sql.DataFrame \u003d [userid: int, itemid: int, rating: int, timestamp: int]\n"
      },
      "dateCreated": "Jul 23, 2017 6:00:05 PM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "//old users new items\n\nval test \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \"\\t\")\n    .load(\"/data/sidana/embColdStart/ml_1m/input_data/inputdata.headers\")\n\nval oldUsers \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \"\\t\")\n    .load(\"/data/sidana/embColdStart/ml_1m/dat.ml_1m.users.old\")\n\nval newItems \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \"\\t\")\n    .load(\"/data/sidana/embColdStart/ml_1m/dat.ml_1m.items.new\")\n\n\n\n    \nval trainUsers \u003d test.join(oldUsers,test(\"userid\")\u003d\u003d\u003doldUsers(\"userid\")).drop(oldUsers(\"userid\"))\n\nval trainUsersItems \u003d trainUsers.join(newItems,trainUsers(\"itemid\")\u003d\u003d\u003dnewItems(\"itemId\")).drop(newItems(\"itemid\")) \n\ntrainUsersItems.rdd.coalesce(1,false).saveAsTextFile(\"/data/sidana/embColdStart/ml_1m/dat.ml_1m.oldusersnewitems\")\n",
      "dateUpdated": "Jul 23, 2017 6:00:05 PM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1500825605420_-737342095",
      "id": "20170723-180005_17060100",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "test: org.apache.spark.sql.DataFrame \u003d [userid: int, itemid: int, rating: int, timestamp: int]\noldUsers: org.apache.spark.sql.DataFrame \u003d [userid: int]\nnewItems: org.apache.spark.sql.DataFrame \u003d [itemid: int]\ntrainUsers: org.apache.spark.sql.DataFrame \u003d [userid: int, itemid: int, rating: int, timestamp: int]\ntrainUsersItems: org.apache.spark.sql.DataFrame \u003d [userid: int, itemid: int, rating: int, timestamp: int]\n"
      },
      "dateCreated": "Jul 23, 2017 6:00:05 PM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "//new users new items\n\nval test \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \"\\t\")\n    .load(\"/data/sidana/embColdStart/ml_1m/input_data/inputdata.headers\")\n\nval newUsers \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \"\\t\")\n    .load(\"/data/sidana/embColdStart/ml_1m/dat.ml_1m.users.new\")\n\nval newItems \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \"\\t\")\n    .load(\"/data/sidana/embColdStart/ml_1m/dat.ml_1m.items.new\")\n\n\n    \nval trainUsers \u003d test.join(newUsers,test(\"userid\")\u003d\u003d\u003dnewUsers(\"userid\")).drop(newUsers(\"userid\"))\nval trainUsersItems \u003d trainUsers.join(newItems,trainUsers(\"itemid\")\u003d\u003d\u003dnewItems(\"itemId\")).drop(newItems(\"itemid\"))\ntrainUsersItems.rdd.coalesce(1,false).saveAsTextFile(\"/data/sidana/embColdStart/ml_1m/dat.ml_1m.newusersnewitems\")",
      "dateUpdated": "Jul 23, 2017 6:00:05 PM",
      "config": {
        "enabled": true,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "editorMode": "ace/mode/scala",
        "colWidth": 12.0
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1500825605420_-737342095",
      "id": "20170723-180005_1113775649",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "test: org.apache.spark.sql.DataFrame \u003d [userid: int, itemid: int, rating: int, timestamp: int]\nnewUsers: org.apache.spark.sql.DataFrame \u003d [userid: int]\nnewItems: org.apache.spark.sql.DataFrame \u003d [itemid: int]\ntrainUsers: org.apache.spark.sql.DataFrame \u003d [userid: int, itemid: int, rating: int, timestamp: int]\ntrainUsersItems: org.apache.spark.sql.DataFrame \u003d [userid: int, itemid: int, rating: int, timestamp: int]\n"
      },
      "dateCreated": "Jul 23, 2017 6:00:05 PM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val test \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \",\")\n    .load(\"/data/sidana/recnet_draft/cold_start/data/ml1m/inputdata.headers\")\n\nval oldUsers \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \",\")\n    .load(\"/data/sidana/recnet_draft/cold_start/data/ml1m/dat.ml1m.users.old\")\n\nval oldItems \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \",\")\n    .load(\"/data/sidana/recnet_draft/cold_start/data/ml1m/dat.ml1m.items.old\")\n\n\n\n    \nval trainUsers \u003d test.join(oldUsers,test(\"userId\")\u003d\u003d\u003doldUsers(\"userId\")).drop(oldUsers(\"userId\"))\nval trainUsersItems \u003d trainUsers.join(oldItems,trainUsers(\"movieId\")\u003d\u003d\u003doldItems(\"movieId\")).drop(oldItems(\"movieId\"))\n\nval distinctUsersRating \u003d trainUsersItems.select(\"userId\",\"rating\").distinct\nval groupByUsers \u003d  distinctUsersRating.groupBy(\"userId\").count\nval goodUsers  \u003d groupByUsers.filter($\"count\"\u003e\u003d2)\n\nval filetobewrittentemp \u003d trainUsersItems.join(goodUsers,trainUsersItems(\"userId\")\u003d\u003d\u003dgoodUsers(\"userId\")).sort(asc(\"count\"))\nz.show(filetobewrittentemp)\n",
      "authenticationInfo": {},
      "dateUpdated": "Jul 24, 2017 12:59:43 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "userId",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "count",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "userId",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "count",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1500825605420_-737342095",
      "id": "20170723-180005_1759865491",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "userId\tmovieId\trating\ttimestamp\tuserId\tcount\n34\t2432\t4\t978102800\t34\t2\n34\t838\t4\t978104466\t34\t2\n34\t39\t4\t978103198\t34\t2\n34\t1641\t4\t978103303\t34\t2\n34\t3253\t1\t978103229\t34\t2\n34\t2858\t4\t978102938\t34\t2\n34\t3264\t1\t978103517\t34\t2\n34\t2795\t4\t978103241\t34\t2\n34\t2396\t4\t978104329\t34\t2\n34\t597\t4\t978104399\t34\t2\n34\t1197\t4\t978103077\t34\t2\n34\t1997\t4\t978103417\t34\t2\n34\t3868\t4\t978104050\t34\t2\n34\t2000\t4\t978103138\t34\t2\n34\t1\t4\t978102970\t34\t2\n34\t2406\t4\t978103265\t34\t2\n34\t2469\t1\t978104169\t34\t2\n34\t2471\t1\t978104253\t34\t2\n34\t2671\t4\t978103265\t34\t2\n34\t1479\t4\t978104619\t34\t2\n34\t2081\t4\t978103324\t34\t2\n34\t3481\t1\t978103038\t34\t2\n34\t2485\t4\t978104678\t34\t2\n34\t3087\t4\t978103368\t34\t2\n34\t3088\t4\t978103010\t34\t2\n34\t1091\t4\t978104190\t34\t2\n34\t2291\t4\t978104371\t34\t2\n34\t3499\t4\t978103444\t34\t2\n34\t1500\t4\t978103166\t34\t2\n34\t2100\t1\t978104105\t34\t2\n34\t2302\t4\t978103216\t34\t2\n34\t1704\t4\t978103690\t34\t2\n34\t1307\t4\t978103052\t34\t2\n34\t2109\t4\t978103198\t34\t2\n34\t2710\t4\t978103455\t34\t2\n34\t3712\t1\t978103368\t34\t2\n34\t1717\t1\t978103517\t34\t2\n34\t318\t4\t978103631\t34\t2\n34\t2918\t4\t978102970\t34\t2\n34\t919\t4\t978103710\t34\t2\n34\t933\t4\t978103077\t34\t2\n34\t2735\t1\t978104150\t34\t2\n34\t3536\t4\t978103849\t34\t2\n34\t539\t4\t978104371\t34\t2\n34\t543\t4\t978104549\t34\t2\n34\t2145\t4\t978104134\t34\t2\n34\t1350\t1\t978103487\t34\t2\n34\t3358\t1\t978104491\t34\t2\n34\t2160\t1\t978103487\t34\t2\n34\t163\t1\t978104384\t34\t2\n34\t1968\t4\t978103106\t34\t2\n34\t2369\t1\t978104169\t34\t2\n34\t2371\t4\t978104050\t34\t2\n34\t2174\t4\t978104068\t34\t2\n34\t380\t1\t978104435\t34\t2\n34\t1381\t1\t978104264\t34\t2\n34\t2382\t1\t978104290\t34\t2\n34\t1784\t4\t978103166\t34\t2\n34\t587\t4\t978104399\t34\t2\n34\t3387\t1\t978104212\t34\t2\n34\t1188\t1\t978104414\t34\t2\n34\t3591\t4\t978104081\t34\t2\n34\t1994\t4\t978103444\t34\t2\n34\t2794\t4\t978104238\t34\t2\n34\t3594\t4\t978103990\t34\t2\n34\t1207\t4\t978103631\t34\t2\n34\t3408\t4\t978103898\t34\t2\n34\t3608\t1\t978103303\t34\t2\n34\t2413\t4\t978104190\t34\t2\n34\t2416\t4\t978104169\t34\t2\n34\t17\t4\t978104339\t34\t2\n34\t222\t4\t978104384\t34\t2\n34\t2423\t1\t978104105\t34\t2\n34\t3623\t1\t978103932\t34\t2\n34\t3424\t4\t978104034\t34\t2\n34\t1028\t4\t978103198\t34\t2\n1034\t2031\t1\t975093319\t1034\t2\n1034\t2431\t1\t975018723\t1034\t2\n1034\t2432\t4\t975019236\t1034\t2\n1034\t1035\t4\t974995660\t1034\t2\n1034\t2035\t1\t975094511\t1034\t2\n1034\t2037\t4\t975095165\t1034\t2\n1034\t3638\t4\t975017464\t1034\t2\n1034\t1242\t4\t975972571\t1034\t2\n1034\t2043\t4\t975013348\t1034\t2\n1034\t3844\t4\t975015711\t1034\t2\n1034\t2846\t1\t975018003\t1034\t2\n1034\t2447\t1\t975016810\t1034\t2\n1034\t3447\t4\t975197284\t1034\t2\n1034\t2048\t4\t975814229\t1034\t2\n1034\t3649\t1\t975018101\t1034\t2\n1034\t2051\t1\t975111010\t1034\t2\n1034\t3251\t1\t975016158\t1034\t2\n1034\t1254\t4\t974996434\t1034\t2\n1034\t2858\t4\t974995660\t1034\t2\n1034\t2059\t4\t975813741\t1034\t2\n1034\t1066\t4\t974999226\t1034\t2\n1034\t2066\t4\t974999662\t1034\t2\n1034\t2396\t4\t974997009\t1034\t2\n1034\t597\t4\t975014661\t1034\t2\n1034\t1198\t4\t974996744\t1034\t2\n1034\t2000\t4\t975013319\t1034\t2\n1034\t3\t4\t974996010\t1034\t2\n1034\t2205\t1\t975017170\t1034\t2\n1034\t2805\t1\t975018288\t1034\t2\n1034\t2406\t4\t975014793\t1034\t2\n1034\t2870\t4\t975014177\t1034\t2\n1034\t2872\t4\t975015711\t1034\t2\n1034\t3072\t4\t974995543\t1034\t2\n1034\t73\t1\t974997790\t1034\t2\n1034\t480\t1\t974995458\t1034\t2\n1034\t2081\t4\t975813912\t1034\t2\n1034\t3081\t1\t975016480\t1034\t2\n1034\t1083\t1\t975013830\t1034\t2\n1034\t3685\t4\t974997945\t1034\t2\n1034\t1286\t4\t975015931\t1034\t2\n1034\t3086\t1\t975012616\t1034\t2\n1034\t2087\t4\t975814076\t1034\t2\n1034\t1088\t4\t975014375\t1034\t2\n1034\t3089\t4\t974996498\t1034\t2\n1034\t1894\t1\t975015901\t1034\t2\n1034\t2095\t1\t975018820\t1034\t2\n1034\t3095\t4\t974996639\t1034\t2\n1034\t2496\t4\t975015143\t1034\t2\n1034\t2297\t1\t975094707\t1034\t2\n1034\t1299\t4\t974998240\t1034\t2\n1034\t900\t4\t974999423\t1034\t2\n1034\t2100\t4\t975012616\t1034\t2\n1034\t2701\t1\t975111504\t1034\t2\n1034\t3301\t1\t975729631\t1034\t2\n1034\t902\t1\t974996952\t1034\t2\n1034\t904\t4\t974996498\t1034\t2\n1034\t3705\t1\t975097751\t1034\t2\n1034\t2906\t1\t975094193\t1034\t2\n1034\t3506\t4\t975014793\t1034\t2\n1034\t1307\t4\t975972605\t1034\t2\n1034\t1907\t4\t975813741\t1034\t2\n1034\t3111\t4\t975012646\t1034\t2\n1034\t3512\t1\t974995976\t1034\t2\n1034\t913\t4\t975197387\t1034\t2\n1034\t3114\t4\t974996768\t1034\t2\n1034\t915\t4\t974998154\t1034\t2\n1034\t2115\t1\t975197771\t1034\t2\n1034\t3515\t1\t974995822\t1034\t2\n1034\t2917\t1\t974996952\t1034\t2\n1034\t3717\t1\t975018898\t1034\t2\n1034\t919\t4\t975197265\t1034\t2\n1034\t1919\t1\t975018723\t1034\t2\n1034\t920\t4\t974995495\t1034\t2\n1034\t2720\t1\t975814352\t1034\t2\n1034\t1925\t4\t975197623\t1034\t2\n1034\t2126\t1\t975093526\t1034\t2\n1034\t3528\t1\t975017886\t1034\t2\n1034\t2530\t1\t975095675\t1034\t2\n1034\t1932\t4\t975014031\t1034\t2\n1034\t933\t4\t974997790\t1034\t2\n1034\t934\t4\t974999054\t1034\t2\n1034\t2935\t4\t975197430\t1034\t2\n1034\t3736\t1\t974998035\t1034\t2\n1034\t2937\t4\t974996897\t1034\t2\n1034\t539\t4\t975013019\t1034\t2\n1034\t940\t4\t974996867\t1034\t2\n1034\t942\t4\t975197387\t1034\t2\n1034\t944\t4\t974998933\t1034\t2\n1034\t1944\t4\t974997971\t1034\t2\n1034\t3345\t4\t975017133\t1034\t2\n1034\t3546\t1\t975014291\t1034\t2\n1034\t2947\t4\t974997889\t1034\t2\n1034\t3147\t4\t974997755\t1034\t2\n1034\t948\t4\t975014954\t1034\t2\n1034\t1348\t1\t974997945\t1034\t2\n1034\t2948\t4\t974995697\t1034\t2\n1034\t3148\t1\t974999029\t1034\t2\n1034\t949\t1\t974997108\t1034\t2\n1034\t2550\t1\t974999706\t1034\t2\n1034\t951\t4\t974996977\t1034\t2\n1034\t953\t4\t974998240\t1034\t2\n1034\t3753\t4\t974995853\t1034\t2\n1034\t3354\t1\t974996040\t1034\t2\n1034\t3755\t1\t975729502\t1034\t2\n1034\t956\t4\t975197476\t1034\t2\n1034\t3156\t1\t975012616\t1034\t2\n1034\t1957\t4\t974997421\t1034\t2\n1034\t1958\t4\t975014485\t1034\t2\n1034\t3159\t4\t975813912\t1034\t2\n1034\t3359\t4\t974997108\t1034\t2\n1034\t2160\t1\t974995697\t1034\t2\n1034\t1961\t4\t974998621\t1034\t2\n1034\t1962\t4\t974998769\t1034\t2\n1034\t2763\t4\t975012238\t1034\t2\n1034\t1964\t4\t974998335\t1034\t2\n1034\t965\t4\t974997108\t1034\t2\n1034\t2366\t4\t974999635\t1034\t2\n1034\t973\t4\t974999029\t1034\t2\n1034\t1374\t1\t975016423\t1034\t2\n1034\t2574\t1\t975019236\t1034\t2\n1034\t1375\t1\t975017287\t1034\t2\n1034\t3175\t1\t975012524\t1034\t2\n1034\t978\t1\t974997396\t1034\t2\n1034\t2180\t1\t975019087\t1034\t2\n1034\t2183\t4\t975014455\t1034\t2\n1034\t1784\t1\t974998431\t1034\t2\n1034\t3384\t4\t975012238\t1034\t2\n1034\t3185\t4\t975014001\t1034\t2\n1034\t587\t4\t975014404\t1034\t2\n1034\t2987\t4\t975197749\t1034\t2\n1034\t2990\t4\t975016158\t1034\t2\n1034\t3591\t4\t975015334\t1034\t2\n1034\t3792\t4\t975197535\t1034\t2\n1034\t2394\t4\t975013970\t1034\t2\n1034\t3194\t4\t974997130\t1034\t2\n1034\t1408\t4\t974998999\t1034\t2\n1034\t1608\t1\t975016756\t1034\t2\n1034\t3408\t4\t974997971\t1034\t2\n1034\t2409\t1\t975019203\t1034\t2\n1034\t1010\t1\t975814076\t1034\t2\n1034\t2410\t1\t975095459\t1034\t2\n1034\t1011\t1\t975019429\t1034\t2\n1034\t1012\t4\t974999848\t1034\t2\n1034\t3414\t4\t975016978\t1034\t2\n1034\t3615\t1\t975017170\t1034\t2\n1034\t1617\t1\t974996528\t1034\t2\n1034\t2417\t1\t975017491\t1034\t2\n1034\t2617\t4\t975015143\t1034\t2\n1034\t3217\t4\t975012754\t1034\t2\n1034\t1018\t1\t975096413\t1034\t2\n1034\t2018\t4\t974999308\t1034\t2\n1034\t1019\t4\t975014573\t1034\t2\n1034\t3821\t1\t975017768\t1034\t2\n1034\t3623\t1\t975015990\t1034\t2\n1034\t1025\t1\t975014177\t1034\t2\n1034\t1225\t4\t975972549\t1034\t2\n1034\t3825\t1\t975729840\t1034\t2\n1034\t1226\t4\t974998267\t1034\t2\n1034\t2628\t1\t975016510\t1034\t2\n1034\t3428\t1\t975111010\t1034\t2\n2034\t1244\t4\t974668966\t2034\t2\n2034\t1446\t4\t974669034\t2034\t2\n2034\t52\t1\t974669320\t2034\t2\n2034\t2064\t4\t974669034\t2034\t2\n2034\t1066\t4\t974669204\t2034\t2\n2034\t2599\t4\t974669077\t2034\t2\n2034\t1077\t4\t974669285\t2034\t2\n2034\t3083\t4\t974669077\t2034\t2\n2034\t3685\t4\t974669320\t2034\t2\n2034\t3097\t4\t974668937\t2034\t2\n2034\t2300\t4\t974669320\t2034\t2\n2034\t2926\t4\t974669346\t2034\t2\n2034\t2349\t4\t974668788\t2034\t2\n2034\t357\t1\t974668467\t2034\t2\n2034\t1188\t4\t974669204\t2034\t2\n2034\t1394\t4\t974669243\t2034\t2\n2034\t1617\t1\t974668467\t2034\t2\n2034\t3424\t4\t974669077\t2034\t2\n2434\t836\t1\t974223593\t2434\t2\n2434\t2395\t1\t974223025\t2434\t2\n2434\t599\t4\t974223025\t2434\t2\n2434\t1307\t4\t974225093\t2434\t2\n2434\t110\t4\t974223754\t2434\t2\n2434\t3717\t1\t974224160\t2434\t2\n2434\t555\t4\t974223210\t2434\t2\n2434\t3755\t1\t974224160\t2434\t2\n2434\t1968\t4\t974223025\t2434\t2\n2434\t1370\t1\t974223659\t2434\t2\n2434\t1394\t4\t974223414\t2434\t2\n2434\t3623\t4\t974224132\t2434\t2\n2434\t2628\t1\t974223531\t2434\t2\n2834\t3801\t4\t972585495\t2834\t2\n2834\t3872\t4\t972585469\t2834\t2\n2834\t926\t4\t972585469\t2834\t2\n2834\t2731\t4\t972585469\t2834\t2\n2834\t2937\t4\t972585606\t2834\t2\n2834\t1944\t4\t972585495\t2834\t2\n2834\t948\t4\t972585552\t2834\t2\n2834\t951\t4\t972585606\t2834\t2\n2834\t2362\t4\t972585563\t2834\t2\n2834\t1968\t1\t972585343\t2834\t2\n2834\t17\t4\t972585405\t2834\t2\n3034\t838\t4\t970285483\t3034\t2\n3034\t39\t4\t970285353\t3034\t2\n3034\t3844\t4\t970285730\t3034\t2\n3034\t2858\t4\t970286337\t3034\t2\n3034\t2396\t4\t970285521\t3034\t2\n3034\t3083\t4\t970286209\t3034\t2\n3034\t3285\t1\t970286405\t3034\t2\n3034\t288\t1\t970285892\t3034\t2\n3034\t2694\t4\t970286450\t3034\t2\n3034\t1704\t4\t970285353\t3034\t2\n3034\t2706\t4\t970286359\t3034\t2\n3034\t1307\t4\t970285766\t3034\t2\n3034\t920\t4\t970285326\t3034\t2\n3034\t926\t4\t970285794\t3034\t2\n3034\t380\t4\t970286081\t3034\t2\n3034\t3408\t4\t970286151\t3034\t2\n3034\t1617\t4\t970285308\t3034\t2\n3034\t2020\t4\t970285625\t3034\t2\n3234\t1251\t4\t968366196\t3234\t2\n3234\t3072\t1\t968366012\t3234\t2\n3234\t3089\t4\t968366196\t3234\t2\n3234\t123\t4\t968366465\t3234\t2\n3234\t3134\t4\t968366397\t3234\t2\n3234\t154\t4\t968366196\t3234\t2\n3234\t1958\t1\t968366012\t3234\t2\n3234\t2990\t1\t968366012\t3234\t2\n3234\t1809\t4\t968366070\t3234\t2\n3834\t231\t4\t966402868\t3834\t2\n3834\t1431\t4\t966405977\t3834\t2\n3834\t832\t4\t966404209\t3834\t2\n3834\t1032\t4\t966371669\t3834\t2\n3834\t835\t4\t966403511\t3834\t2\n3834\t1035\t1\t966397936\t3834\t2\n3834\t239\t4\t966371669\t3834\t2\n3834\t3439\t4\t966406206\t3834\t2\n3834\t1240\t4\t965928311\t3834\t2\n3834\t1641\t1\t965928311\t3834\t2\n3834\t243\t1\t966406509\t3834\t2\n3834\t44\t1\t966406206\t3834\t2\n3834\t2846\t1\t966396281\t3834\t2\n3834\t47\t4\t965928532\t3834\t2\n3834\t2447\t4\t966404583\t3834\t2\n3834\t648\t4\t966404541\t3834\t2\n3834\t2048\t1\t966371853\t3834\t2\n3834\t3248\t4\t966406150\t3834\t2\n3834\t250\t1\t966406580\t3834\t2\n3834\t450\t4\t966403980\t3834\t2\n3834\t2052\t4\t966404426\t3834\t2\n3834\t3253\t4\t966402474\t3834\t2\n3834\t454\t4\t966403533\t3834\t2\n3834\t1855\t4\t966406333\t3834\t2\n3834\t256\t4\t966405040\t3834\t2\n3834\t258\t4\t966406373\t3834\t2\n3834\t3258\t4\t966404779\t3834\t2\n3834\t2460\t1\t966400137\t3834\t2\n3834\t661\t4\t966371669\t3834\t2\n3834\t1461\t4\t966405758\t3834\t2\n3834\t63\t4\t966402983\t3834\t2\n3834\t2463\t4\t966399772\t3834\t2\n3834\t2664\t4\t966397525\t3834\t2\n3834\t3264\t4\t966395782\t3834\t2\n3834\t65\t4\t966406623\t3834\t2\n3834\t2395\t4\t965929018\t3834\t2\n3834\t596\t4\t966371725\t3834\t2\n3834\t2596\t4\t966396625\t3834\t2\n3834\t597\t4\t966404870\t3834\t2\n3834\t1997\t4\t966398395\t3834\t2\n3834\t2997\t4\t965927688\t3834\t2\n3834\t798\t4\t966406071\t3834\t2\n3834\t998\t4\t966403229\t3834\t2\n3834\t1198\t4\t966398919\t3834\t2\n3834\t2398\t4\t966397273\t3834\t2\n3834\t2798\t4\t966406509\t3834\t2\n3834\t3268\t1\t966406653\t3834\t2\n3834\t3868\t4\t966399158\t3834\t2\n3834\t2799\t4\t966406689\t3834\t2\n3834\t1200\t4\t965928177\t3834\t2\n3834\t2800\t1\t966371822\t3834\t2\n3834\t1\t4\t965928844\t3834\t2\n3834\t2003\t4\t966399607\t3834\t2\n3834\t1805\t4\t966403551\t3834\t2\n3834\t2606\t4\t966406227\t3834\t2\n3834\t2269\t4\t966405758\t3834\t2\n3834\t3669\t4\t966404994\t3834\t2\n3834\t70\t4\t966404090\t3834\t2\n3834\t2470\t4\t966399927\t3834\t2\n3834\t671\t4\t966403268\t3834\t2\n3834\t2471\t4\t966400539\t3834\t2\n3834\t473\t4\t966404325\t3834\t2\n3834\t673\t4\t966371822\t3834\t2\n3834\t1673\t4\t965928656\t3834\t2\n3834\t1274\t4\t966371602\t3834\t2\n3834\t1474\t4\t966406023\t3834\t2\n3834\t276\t4\t966406124\t3834\t2\n3834\t1676\t4\t966403795\t3834\t2\n3834\t3477\t4\t966395818\t3834\t2\n3834\t1678\t1\t966403287\t3834\t2\n3834\t1479\t4\t966405139\t3834\t2\n3834\t480\t4\t966403795\t3834\t2\n3834\t881\t4\t966406275\t3834\t2\n3834\t2081\t4\t966371725\t3834\t2\n3834\t3081\t4\t965926901\t3834\t2\n3834\t3481\t1\t993853004\t3834\t2\n3834\t1682\t4\t966402180\t3834\t2\n3834\t1483\t1\t966405921\t3834\t2\n3834\t1883\t4\t966403196\t3834\t2\n3834\t484\t1\t966406373\t3834\t2\n3834\t2485\t4\t966404508\t3834\t2\n3834\t1687\t4\t966396484\t3834\t2\n3834\t1887\t1\t966406653\t3834\t2\n3834\t2087\t4\t966397546\t3834\t2\n3834\t3087\t4\t966399634\t3834\t2\n3834\t1689\t4\t966404239\t3834\t2\n3834\t2889\t1\t965926870\t3834\t2\n3834\t2291\t4\t966401699\t3834\t2\n3834\t2092\t4\t966371853\t3834\t2\n3834\t93\t1\t966396043\t3834\t2\n3834\t2694\t4\t966403877\t3834\t2\n3834\t3095\t1\t965927540\t3834\t2\n3834\t2496\t4\t966404167\t3834\t2\n3834\t2297\t4\t966395442\t3834\t2\n3834\t2498\t4\t965928239\t3834\t2\n3834\t3499\t4\t965928370\t3834\t2\n3834\t3699\t4\t966399379\t3834\t2\n3834\t500\t4\t966404325\t3834\t2\n3834\t1500\t4\t965928844\t3834\t2\n3834\t2300\t1\t965927540\t3834\t2\n3834\t2701\t4\t966406307\t3834\t2\n3834\t3301\t4\t965926901\t3834\t2\n3834\t502\t4\t966406467\t3834\t2\n3834\t1702\t4\t966406250\t3834\t2\n3834\t2302\t4\t966403702\t3834\t2\n3834\t2502\t4\t966402513\t3834\t2\n3834\t104\t4\t965929018\t3834\t2\n3834\t2706\t4\t966395782\t3834\t2\n3834\t1907\t4\t966371695\t3834\t2\n3834\t3107\t4\t966404167\t3834\t2\n3834\t509\t1\t966395902\t3834\t2\n3834\t709\t4\t966371822\t3834\t2\n3834\t2109\t4\t966398502\t3834\t2\n3834\t110\t4\t966401699\t3834\t2\n3834\t2111\t4\t966399503\t3834\t2\n3834\t112\t4\t966403490\t3834\t2\n3834\t312\t1\t966405678\t3834\t2\n3834\t1912\t4\t965927855\t3834\t2\n3834\t2513\t4\t966399927\t3834\t2\n3834\t1515\t4\t966405678\t3834\t2\n3834\t2115\t4\t966399607\t3834\t2\n3834\t516\t4\t966403196\t3834\t2\n3834\t1917\t4\t966405064\t3834\t2\n3834\t3717\t4\t965927094\t3834\t2\n3834\t318\t4\t965927539\t3834\t2\n3834\t2918\t4\t965928599\t3834\t2\n3834\t519\t4\t966406719\t3834\t2\n3834\t719\t4\t966404726\t3834\t2\n3834\t919\t4\t966396961\t3834\t2\n3834\t520\t4\t966404625\t3834\t2\n3834\t2720\t4\t966405977\t3834\t2\n3834\t3120\t4\t966403490\t3834\t2\n3834\t2723\t4\t966404297\t3834\t2\n3834\t524\t4\t966404135\t3834\t2\n3834\t2124\t4\t966396230\t3834\t2\n3834\t3324\t1\t965926851\t3834\t2\n3834\t325\t4\t966406373\t3834\t2\n3834\t2126\t4\t966404870\t3834\t2\n3834\t527\t4\t965926733\t3834\t2\n3834\t1527\t4\t966403702\t3834\t2\n3834\t3527\t4\t966399584\t3834\t2\n3834\t2728\t4\t966397798\t3834\t2\n3834\t3328\t4\t993853144\t3834\t2\n3834\t329\t4\t966404845\t3834\t2\n3834\t1729\t1\t965926733\t3834\t2\n3834\t2529\t4\t966397904\t3834\t2\n3834\t1135\t4\t966399927\t3834\t2\n3834\t2335\t4\t966405725\t3834\t2\n3834\t2735\t4\t966400218\t3834\t2\n3834\t1136\t4\t965927781\t3834\t2\n3834\t737\t4\t966405837\t3834\t2\n3834\t2137\t1\t966371753\t3834\t2\n3834\t539\t1\t966404017\t3834\t2\n3834\t2542\t4\t965927870\t3834\t2\n3834\t543\t4\t966403196\t3834\t2\n3834\t344\t4\t966396230\t3834\t2\n3834\t1544\t4\t966405703\t3834\t2\n3834\t546\t4\t966406250\t3834\t2\n3834\t3146\t4\t966406150\t3834\t2\n3834\t747\t4\t966396043\t3834\t2\n3834\t1947\t1\t966397904\t3834\t2\n3834\t3147\t4\t965926851\t3834\t2\n3834\t3949\t4\t993853565\t3834\t2\n3834\t150\t4\t966402924\t3834\t2\n3834\t2550\t1\t965928928\t3834\t2\n3834\t553\t4\t966402409\t3834\t2\n3834\t953\t4\t965928457\t3834\t2\n3834\t1753\t4\t966403592\t3834\t2\n3834\t2354\t4\t966371853\t3834\t2\n3834\t3354\t4\t993853437\t3834\t2\n3834\t1356\t4\t966403747\t3834\t2\n3834\t3156\t4\t965926901\t3834\t2\n3834\t158\t4\t966404625\t3834\t2\n3834\t558\t1\t966371822\t3834\t2\n3834\t3158\t4\t966404701\t3834\t2\n3834\t1359\t4\t966406176\t3834\t2\n3834\t2959\t4\t965927781\t3834\t2\n3834\t160\t1\t966406176\t3834\t2\n3834\t3160\t4\t979587741\t3834\t2\n3834\t2161\t4\t966399633\t3834\t2\n3834\t362\t1\t966403702\t3834\t2\n3834\t762\t4\t966406150\t3834\t2\n3834\t2762\t4\t966396427\t3834\t2\n3834\t165\t4\t966404090\t3834\t2\n3834\t765\t4\t966406176\t3834\t2\n3834\t1566\t4\t966371753\t3834\t2\n3834\t2366\t4\t966396982\t3834\t2\n3834\t368\t4\t966404112\t3834\t2\n3834\t1968\t4\t965928510\t3834\t2\n3834\t169\t1\t966406373\t3834\t2\n3834\t2169\t4\t966406227\t3834\t2\n3834\t370\t4\t966405021\t3834\t2\n3834\t1370\t4\t966403533\t3834\t2\n3834\t2371\t4\t966399831\t3834\t2\n3834\t3571\t4\t993853075\t3834\t2\n3834\t172\t1\t966405897\t3834\t2\n3834\t374\t4\t966406124\t3834\t2\n3834\t2174\t4\t966399210\t3834\t2\n3834\t3174\t4\t965926851\t3834\t2\n3834\t778\t4\t966402247\t3834\t2\n3834\t379\t4\t966405999\t3834\t2\n3834\t1580\t4\t966403229\t3834\t2\n3834\t2580\t4\t965928797\t3834\t2\n3834\t3180\t4\t965926915\t3834\t2\n3834\t2382\t4\t966400749\t3834\t2\n3834\t1385\t4\t966404135\t3834\t2\n3834\t2386\t4\t966406023\t3834\t2\n3834\t3186\t4\t966402642\t3834\t2\n3834\t587\t4\t966403900\t3834\t2\n3834\t2387\t4\t966405897\t3834\t2\n3834\t2987\t4\t966371695\t3834\t2\n3834\t1588\t4\t966404061\t3834\t2\n3834\t589\t4\t965928076\t3834\t2\n3834\t1391\t4\t966404325\t3834\t2\n3834\t1792\t4\t966404017\t3834\t2\n3834\t3392\t4\t966400185\t3834\t2\n3834\t193\t4\t966406333\t3834\t2\n3834\t393\t1\t966406653\t3834\t2\n3834\t1193\t4\t965928006\t3834\t2\n3834\t1593\t1\t966395902\t3834\t2\n3834\t2393\t4\t966404426\t3834\t2\n3834\t594\t4\t966371669\t3834\t2\n3834\t1207\t4\t965927962\t3834\t2\n3834\t1407\t4\t966403229\t3834\t2\n3834\t3208\t4\t966405808\t3834\t2\n3834\t3608\t4\t966399173\t3834\t2\n3834\t1409\t4\t966404845\t3834\t2\n3834\t2409\t4\t966398580\t3834\t2\n3834\t410\t4\t966396230\t3834\t2\n3834\t2410\t4\t966399949\t3834\t2\n3834\t1011\t1\t966398647\t3834\t2\n3834\t12\t1\t966406206\t3834\t2\n3834\t2412\t4\t966406536\t3834\t2\n3834\t1614\t4\t966404426\t3834\t2\n3834\t415\t4\t966406095\t3834\t2\n3834\t1615\t4\t966403657\t3834\t2\n3834\t3615\t1\t965927094\t3834\t2\n3834\t16\t4\t966402474\t3834\t2\n3834\t1616\t4\t966404426\t3834\t2\n3834\t818\t4\t966404182\t3834\t2\n3834\t1018\t1\t966398116\t3834\t2\n3834\t2018\t4\t966371695\t3834\t2\n3834\t419\t4\t966406405\t3834\t2\n3834\t2421\t4\t966400352\t3834\t2\n3834\t2422\t4\t966400673\t3834\t2\n3834\t3623\t1\t993853179\t3834\t2\n3834\t24\t4\t966404112\t3834\t2\n3834\t1824\t4\t965927625\t3834\t2\n3834\t25\t4\t965928566\t3834\t2\n3834\t1025\t4\t966371725\t3834\t2\n3834\t2026\t1\t966406071\t3834\t2\n3834\t2027\t4\t966404508\t3834\t2\n3834\t1028\t4\t966395856\t3834\t2\n3834\t2628\t4\t966396043\t3834\t2\n3834\t1029\t4\t966371669\t3834\t2\n3834\t1429\t4\t966402817\t3834\t2\n4034\t36\t4\t965512899\t4034\t2\n4034\t1240\t1\t965510662\t4034\t2\n4034\t3041\t1\t965509284\t4034\t2\n4034\t1242\t4\t965510682\t4034\t2\n4034\t2858\t4\t965512803\t4034\t2\n4034\t1262\t4\t965511625\t4034\t2\n4034\t1663\t4\t965510560\t4034\t2\n4034\t2463\t1\t965510818\t4034\t2\n4034\t1267\t4\t965511686\t4034\t2\n4034\t2396\t4\t965510169\t4034\t2\n4034\t1197\t4\t965510596\t4034\t2\n4034\t1997\t4\t965511324\t4034\t2\n4034\t1198\t4\t965510435\t4034\t2\n4034\t268\t1\t965509284\t4034\t2\n4034\t3203\t4\t965510855\t4034\t2\n4034\t1674\t1\t965510662\t4034\t2\n4034\t3476\t4\t965510359\t4034\t2\n4034\t1090\t4\t965512929\t4034\t2\n4034\t2692\t4\t965509994\t4034\t2\n4034\t94\t4\t965512856\t4034\t2\n4034\t1297\t4\t965510855\t4034\t2\n4034\t3702\t4\t965511514\t4034\t2\n4034\t1307\t4\t965510534\t4034\t2\n4034\t910\t4\t965511978\t4034\t2\n4034\t714\t4\t965512899\t4034\t2\n4034\t914\t4\t965511860\t4034\t2\n4034\t318\t4\t965509901\t4034\t2\n4034\t921\t1\t965510662\t4034\t2\n4034\t527\t4\t965509994\t4034\t2\n4034\t3735\t4\t965511324\t4034\t2\n4034\t1136\t4\t965510916\t4034\t2\n4034\t2136\t4\t965511883\t4034\t2\n4034\t3543\t4\t965510662\t4034\t2\n4034\t3745\t1\t965509635\t4034\t2\n4034\t3551\t4\t965511289\t4034\t2\n4034\t553\t4\t965509994\t4034\t2\n4034\t155\t4\t965509868\t4034\t2\n4034\t1961\t4\t965510505\t4034\t2\n4034\t2762\t1\t965510147\t4034\t2\n4034\t1968\t4\t965510855\t4034\t2\n4034\t2174\t4\t965510750\t4034\t2\n4034\t2580\t4\t965510147\t4034\t2\n4034\t1185\t4\t965510596\t4034\t2\n4034\t1186\t4\t965510818\t4034\t2\n4034\t2987\t4\t965510750\t4034\t2\n4034\t589\t4\t965510215\t4034\t2\n4034\t1193\t1\t965509284\t4034\t2\n4034\t1394\t4\t965510616\t4034\t2\n4034\t1994\t4\t965510560\t4034\t2\n4034\t1213\t4\t965509743\t4034\t2\n4034\t1218\t4\t965510435\t4034\t2\n4034\t3019\t4\t965510872\t4034\t2\n4034\t2020\t4\t965510682\t4034\t2\n4034\t1221\t4\t965510916\t4034\t2\n4034\t3424\t4\t965510596\t4034\t2\n4034\t25\t4\t965510107\t4034\t2\n4034\t428\t4\t965510107\t4034\t2\n4034\t1028\t4\t965511860\t4034\t2\n4834\t1231\t4\t1009662912\t4834\t2\n4834\t232\t4\t981136199\t4834\t2\n4834\t2236\t4\t990758253\t4834\t2\n4834\t39\t4\t962930426\t4834\t2\n4834\t1641\t4\t981136349\t4834\t2\n4834\t3044\t4\t962930173\t4834\t2\n4834\t3844\t4\t990758537\t4834\t2\n4834\t2045\t4\t1003771718\t4834\t2\n4834\t1446\t1\t1028490790\t4834\t2\n4834\t648\t1\t962930268\t4834\t2\n4834\t50\t4\t995650380\t4834\t2\n4834\t3251\t4\t1028490840\t4834\t2\n4834\t2858\t1\t962929710\t4834\t2\n4834\t60\t4\t979094972\t4834\t2\n4834\t2395\t4\t986181624\t4834\t2\n4834\t2396\t4\t962930355\t4834\t2\n4834\t2596\t1\t1020428141\t4834\t2\n4834\t1197\t4\t985628640\t4834\t2\n4834\t1997\t4\t980389150\t4834\t2\n4834\t1198\t4\t962896302\t4834\t2\n4834\t1799\t1\t996424841\t4834\t2\n4834\t2599\t4\t981136117\t4834\t2\n4834\t1200\t1\t981154060\t4834\t2\n4834\t1\t1\t979094751\t4834\t2\n4834\t2805\t1\t986181465\t4834\t2\n4834\t1674\t4\t1009662978\t4834\t2\n4834\t2076\t1\t1028490840\t4834\t2\n4834\t1678\t4\t1032359260\t4834\t2\n4834\t480\t4\t990758731\t4834\t2\n4834\t1080\t1\t979065624\t4834\t2\n4834\t3481\t1\t992617269\t4834\t2\n4834\t2283\t1\t1032359276\t4834\t2\n4834\t1089\t4\t1003765615\t4834\t2\n4834\t2291\t4\t962930426\t4834\t2\n4834\t2692\t4\t982000856\t4834\t2\n4834\t2293\t1\t1020428111\t4834\t2\n4834\t3893\t1\t1037200347\t4834\t2\n4834\t2694\t4\t986181153\t4834\t2\n4834\t1096\t4\t1009662912\t4834\t2\n4834\t500\t4\t962895913\t4834\t2\n4834\t2100\t4\t979094938\t4834\t2\n4834\t2501\t4\t990758228\t4834\t2\n4834\t902\t4\t962895913\t4834\t2\n4834\t3903\t1\t995649231\t4834\t2\n4834\t3504\t4\t962929731\t4834\t2\n4834\t2706\t1\t996426192\t4834\t2\n4834\t2906\t1\t986181558\t4834\t2\n4834\t1307\t4\t979094779\t4834\t2\n4834\t2908\t1\t986181203\t4834\t2\n4834\t110\t4\t1003771591\t4834\t2\n4834\t910\t4\t1009661889\t4834\t2\n4834\t2710\t1\t986181153\t4834\t2\n4834\t3111\t4\t1009662558\t4834\t2\n4834\t2712\t1\t986181312\t4834\t2\n4834\t3114\t4\t1003765668\t4834\t2\n4834\t517\t4\t962930296\t4834\t2\n4834\t2917\t4\t990758342\t4834\t2\n4834\t3317\t4\t986180561\t4834\t2\n4834\t3717\t1\t979065241\t4834\t2\n4834\t318\t4\t986180928\t4834\t2\n4834\t2918\t4\t979094813\t4834\t2\n4834\t2919\t4\t979065423\t4834\t2\n4834\t2720\t1\t986181406\t4834\t2\n4834\t527\t4\t1009662769\t4834\t2\n4834\t1527\t4\t962930607\t4834\t2\n4834\t3730\t1\t1003757535\t4834\t2\n4834\t1132\t4\t1009662855\t4834\t2\n4834\t2333\t4\t986181375\t4834\t2\n4834\t1136\t4\t1009662509\t4834\t2\n4834\t541\t4\t1009662820\t4834\t2\n4834\t1544\t1\t990758731\t4834\t2\n4834\t2944\t4\t980388770\t4834\t2\n4834\t3746\t4\t1028491275\t4834\t2\n4834\t3147\t4\t1003765577\t4834\t2\n4834\t3949\t1\t996423031\t4834\t2\n4834\t750\t4\t990019154\t4834\t2\n4834\t951\t1\t995649311\t4834\t2\n4834\t1953\t4\t1009661996\t4834\t2\n4834\t3753\t4\t980389111\t4834\t2\n4834\t1355\t1\t1003623161\t4834\t2\n4834\t3755\t4\t982000233\t4834\t2\n4834\t357\t4\t962930426\t4834\t2\n4834\t2357\t1\t962896103\t4834\t2\n4834\t2757\t4\t986181342\t4834\t2\n4834\t2359\t1\t981136244\t4834\t2\n4834\t2959\t1\t986181342\t4834\t2\n4834\t160\t1\t962930317\t4834\t2\n4834\t3160\t1\t979065209\t4834\t2\n4834\t362\t1\t990758444\t4834\t2\n4834\t2762\t4\t986181624\t4834\t2\n4834\t2763\t1\t986181669\t4834\t2\n4834\t2369\t1\t986181258\t4834\t2\n4834\t2769\t1\t1028491189\t4834\t2\n4834\t3175\t4\t962930574\t4834\t2\n4834\t1179\t4\t1003771869\t4834\t2\n4834\t380\t4\t1003771658\t4834\t2\n4834\t780\t4\t962930645\t4834\t2\n4834\t1580\t4\t962930625\t4834\t2\n4834\t1784\t4\t981136244\t4834\t2\n4834\t1193\t4\t1031150470\t4834\t2\n4834\t594\t4\t1009662584\t4834\t2\n4834\t1394\t1\t1009662912\t4834\t2\n4834\t3794\t1\t985628715\t4834\t2\n4834\t1207\t4\t962896103\t4834\t2\n4834\t8\t4\t1003771718\t4834\t2\n4834\t1408\t4\t962930455\t4834\t2\n4834\t1608\t4\t1009661996\t4834\t2\n4834\t3408\t4\t986181312\t4834\t2\n4834\t1610\t4\t962896458\t4834\t2\n4834\t1213\t4\t962896585\t4834\t2\n4834\t17\t4\t962930388\t4834\t2\n4834\t1217\t4\t1009662912\t4834\t2\n4834\t1617\t4\t1003765437\t4834\t2\n4834\t2018\t4\t962929501\t4834\t2\n4834\t2019\t4\t962896172\t4834\t2\n4834\t3019\t1\t1009662978\t4834\t2\n4834\t2020\t4\t1009662944\t4834\t2\n4834\t1221\t4\t962896270\t4834\t2\n4834\t3821\t1\t979065574\t4834\t2\n4834\t223\t1\t1043722223\t4834\t2\n4834\t3623\t1\t986181501\t4834\t2\n4834\t24\t4\t962930607\t4834\t2\n4834\t3424\t1\t990019445\t4834\t2\n4834\t25\t1\t962930388\t4834\t2\n4834\t1225\t4\t1009662820\t4834\t2\n4834\t3825\t1\t996423987\t4834\t2\n4834\t628\t1\t995650306\t4834\t2\n4834\t2628\t1\t979095001\t4834\t2\n4834\t3429\t1\t996423092\t4834\t2\n5034\t1240\t4\t962559091\t5034\t2\n5034\t446\t1\t962559450\t5034\t2\n5034\t1049\t4\t965358342\t5034\t2\n5034\t50\t4\t962559692\t5034\t2\n5034\t653\t1\t965358156\t5034\t2\n5034\t2858\t4\t962559421\t5034\t2\n5034\t1262\t4\t982187631\t5034\t2\n5034\t1066\t4\t962559391\t5034\t2\n5034\t1267\t4\t982187727\t5034\t2\n5034\t2396\t4\t982187690\t5034\t2\n5034\t1197\t4\t962559450\t5034\t2\n5034\t2997\t1\t962559491\t5034\t2\n5034\t1198\t4\t965357610\t5034\t2\n5034\t1200\t4\t965357646\t5034\t2\n5034\t2000\t4\t965357825\t5034\t2\n5034\t1\t4\t996342562\t5034\t2\n5034\t1203\t4\t962559516\t5034\t2\n5034\t2406\t1\t965358197\t5034\t2\n5034\t480\t4\t962560609\t5034\t2\n5034\t3081\t1\t962630531\t5034\t2\n5034\t1690\t1\t975371277\t5034\t2\n5034\t1296\t4\t962559935\t5034\t2\n5034\t1299\t4\t982187727\t5034\t2\n5034\t904\t4\t982187690\t5034\t2\n5034\t3704\t1\t965358082\t5034\t2\n5034\t1307\t4\t996342428\t5034\t2\n5034\t110\t4\t962559111\t5034\t2\n5034\t910\t4\t962559560\t5034\t2\n5034\t3111\t4\t962559533\t5034\t2\n5034\t914\t4\t962559778\t5034\t2\n5034\t2115\t1\t965358290\t5034\t2\n5034\t916\t4\t962559801\t5034\t2\n5034\t1917\t1\t975371358\t5034\t2\n5034\t318\t4\t982187706\t5034\t2\n5034\t919\t4\t982187727\t5034\t2\n5034\t926\t4\t982187666\t5034\t2\n5034\t527\t4\t962631386\t5034\t2\n5034\t1527\t4\t962560946\t5034\t2\n5034\t3527\t1\t962560947\t5034\t2\n5034\t2728\t1\t982187745\t5034\t2\n5034\t1136\t4\t962559648\t5034\t2\n5034\t541\t4\t962559560\t5034\t2\n5034\t543\t4\t963895097\t5034\t2\n5034\t1544\t4\t975371333\t5034\t2\n5034\t2944\t4\t965357691\t5034\t2\n5034\t2948\t4\t965357727\t5034\t2\n5034\t1949\t4\t962559560\t5034\t2\n5034\t2949\t4\t965357691\t5034\t2\n5034\t750\t4\t982187570\t5034\t2\n5034\t2959\t1\t962630482\t5034\t2\n5034\t3359\t4\t982187761\t5034\t2\n5034\t160\t1\t975371400\t5034\t2\n5034\t2762\t4\t962630482\t5034\t2\n5034\t2763\t4\t962561213\t5034\t2\n5034\t2366\t4\t965357691\t5034\t2\n5034\t2370\t1\t965358156\t5034\t2\n5034\t1573\t4\t962561030\t5034\t2\n5034\t380\t4\t965358483\t5034\t2\n5034\t780\t4\t965358483\t5034\t2\n5034\t1580\t1\t962560969\t5034\t2\n5034\t589\t4\t962560507\t5034\t2\n5034\t1591\t4\t975371333\t5034\t2\n5034\t3791\t1\t962559091\t5034\t2\n5034\t1193\t4\t962559168\t5034\t2\n5034\t1207\t4\t982187570\t5034\t2\n5034\t3809\t1\t963676194\t5034\t2\n5034\t17\t4\t962559648\t5034\t2\n5034\t2617\t1\t965358342\t5034\t2\n5034\t3623\t1\t965358197\t5034\t2\n5034\t1225\t4\t962559352\t5034\t2\n5034\t2827\t4\t975371378\t5034\t2\n5034\t2628\t1\t962559850\t5034\t2\n5434\t231\t1\t960044402\t5434\t2\n5434\t232\t4\t960043302\t5434\t2\n5434\t1834\t4\t960043196\t5434\t2\n5434\t1237\t4\t960045678\t5434\t2\n5434\t39\t4\t960043355\t5434\t2\n5434\t1240\t4\t960044549\t5434\t2\n5434\t1643\t1\t960043776\t5434\t2\n5434\t3044\t4\t960045450\t5434\t2\n5434\t1446\t1\t960044996\t5434\t2\n5434\t47\t4\t960043691\t5434\t2\n5434\t1049\t1\t960044312\t5434\t2\n5434\t52\t4\t960043642\t5434\t2\n5434\t454\t1\t960044040\t5434\t2\n5434\t3260\t4\t960043104\t5434\t2\n5434\t3261\t1\t960043776\t5434\t2\n5434\t1663\t4\t960044688\t5434\t2\n5434\t3263\t1\t960044216\t5434\t2\n5434\t2064\t4\t960044516\t5434\t2\n5434\t1865\t4\t960043925\t5434\t2\n5434\t2065\t4\t960044688\t5434\t2\n5434\t2395\t4\t960042728\t5434\t2\n5434\t1198\t4\t960044452\t5434\t2\n5434\t2398\t4\t960045591\t5434\t2\n5434\t2206\t4\t960045581\t5434\t2\n5434\t3072\t4\t960044635\t5434\t2\n5434\t1875\t1\t960043752\t5434\t2\n5434\t1676\t4\t960045192\t5434\t2\n5434\t3476\t4\t960043475\t5434\t2\n5434\t1279\t4\t960044015\t5434\t2\n5434\t480\t1\t960044040\t5434\t2\n5434\t1682\t1\t960043475\t5434\t2\n5434\t1288\t4\t960044496\t5434\t2\n5434\t1089\t4\t960043122\t5434\t2\n5434\t1293\t4\t960044635\t5434\t2\n5434\t3094\t4\t960044516\t5434\t2\n5434\t1095\t4\t960043271\t5434\t2\n5434\t1296\t4\t960044651\t5434\t2\n5434\t1896\t1\t960043415\t5434\t2\n5434\t300\t1\t960043175\t5434\t2\n5434\t1500\t4\t960045018\t5434\t2\n5434\t2302\t1\t960043803\t5434\t2\n5434\t3503\t4\t960045070\t5434\t2\n5434\t104\t1\t960043946\t5434\t2\n5434\t904\t4\t960045694\t5434\t2\n5434\t1704\t1\t960043373\t5434\t2\n5434\t305\t1\t960044360\t5434\t2\n5434\t3105\t1\t960043845\t5434\t2\n5434\t906\t4\t960045565\t5434\t2\n5434\t1307\t4\t960044720\t5434\t2\n5434\t910\t4\t960045678\t5434\t2\n5434\t312\t1\t960044108\t5434\t2\n5434\t3712\t4\t960043539\t5434\t2\n5434\t913\t4\t960045526\t5434\t2\n5434\t515\t4\t960043008\t5434\t2\n5434\t318\t4\t960042955\t5434\t2\n5434\t2918\t1\t960044577\t5434\t2\n5434\t1120\t1\t960043558\t5434\t2\n5434\t1922\t4\t960043271\t5434\t2\n5434\t2124\t4\t960043845\t5434\t2\n5434\t926\t4\t960045678\t5434\t2\n5434\t329\t1\t960045253\t5434\t2\n5434\t929\t4\t960045565\t5434\t2\n5434\t1129\t1\t960045103\t5434\t2\n5434\t1729\t4\t960043245\t5434\t2\n5434\t3129\t4\t960043827\t5434\t2\n5434\t933\t4\t960045731\t5434\t2\n5434\t535\t4\t960043318\t5434\t2\n5434\t543\t4\t960043803\t5434\t2\n5434\t3543\t4\t960044516\t5434\t2\n5434\t1747\t1\t960043877\t5434\t2\n5434\t150\t4\t960043431\t5434\t2\n5434\t750\t4\t960045070\t5434\t2\n5434\t2551\t4\t960044593\t5434\t2\n5434\t1356\t4\t960045181\t5434\t2\n5434\t357\t4\t960043877\t5434\t2\n5434\t1957\t1\t960044593\t5434\t2\n5434\t2757\t4\t960042728\t5434\t2\n5434\t2762\t4\t960042783\t5434\t2\n5434\t3163\t4\t960043104\t5434\t2\n5434\t1968\t1\t960042728\t5434\t2\n5434\t1171\t4\t960043373\t5434\t2\n5434\t1372\t1\t960045181\t5434\t2\n5434\t1573\t4\t960044003\t5434\t2\n5434\t2973\t4\t960044516\t5434\t2\n5434\t1374\t1\t960044651\t5434\t2\n5434\t1375\t4\t960045207\t5434\t2\n5434\t1376\t4\t960045139\t5434\t2\n5434\t1179\t4\t960043048\t5434\t2\n5434\t1580\t1\t960043860\t5434\t2\n5434\t2580\t4\t960043475\t5434\t2\n5434\t1784\t4\t960044075\t5434\t2\n5434\t785\t4\t960044088\t5434\t2\n5434\t1186\t4\t960044576\t5434\t2\n5434\t187\t1\t960044402\t5434\t2\n5434\t2987\t4\t960045399\t5434\t2\n5434\t589\t4\t960045450\t5434\t2\n5434\t1189\t4\t960044452\t5434\t2\n5434\t190\t4\t960045434\t5434\t2\n5434\t1391\t1\t960045226\t5434\t2\n5434\t2393\t1\t960045264\t5434\t2\n5434\t194\t4\t960043302\t5434\t2\n5434\t1394\t4\t960044434\t5434\t2\n5434\t3608\t1\t960044516\t5434\t2\n5434\t2009\t4\t960045181\t5434\t2\n5434\t1610\t1\t960045465\t5434\t2\n5434\t1810\t1\t960043983\t5434\t2\n5434\t2010\t4\t960045090\t5434\t2\n5434\t1611\t1\t960043500\t5434\t2\n5434\t1213\t4\t960042995\t5434\t2\n5434\t1614\t1\t960044075\t5434\t2\n5434\t216\t4\t960043066\t5434\t2\n5434\t17\t4\t960043149\t5434\t2\n5434\t2019\t4\t960045654\t5434\t2\n5434\t2020\t1\t960044476\t5434\t2\n5434\t222\t1\t960043946\t5434\t2\n5434\t223\t4\t960043612\t5434\t2\n5434\t1624\t1\t960044390\t5434\t2\n5434\t1225\t4\t960044452\t5434\t2\n5434\t2628\t4\t960045226\t5434\t2\n5634\t3438\t1\t959009379\t5634\t2\n5634\t3439\t1\t959009397\t5634\t2\n5634\t1240\t4\t959007454\t5634\t2\n5634\t1641\t4\t959009768\t5634\t2\n5634\t2841\t1\t959007454\t5634\t2\n5634\t442\t4\t959008957\t5634\t2\n5634\t44\t4\t959008622\t5634\t2\n5634\t2046\t4\t959008202\t5634\t2\n5634\t2247\t1\t959011202\t5634\t2\n5634\t3247\t1\t959010272\t5634\t2\n5634\t648\t4\t959008411\t5634\t2\n5634\t2448\t4\t959009038\t5634\t2\n5634\t3048\t4\t959011365\t5634\t2\n5634\t1049\t1\t959008303\t5634\t2\n5634\t50\t4\t959011897\t5634\t2\n5634\t252\t4\t959010272\t5634\t2\n5634\t653\t4\t959008464\t5634\t2\n5634\t3054\t1\t959007867\t5634\t2\n5634\t256\t1\t959008999\t5634\t2\n5634\t1257\t4\t959011465\t5634\t2\n5634\t258\t1\t959008622\t5634\t2\n5634\t1663\t4\t959010654\t5634\t2\n5634\t1863\t4\t959010414\t5634\t2\n5634\t3263\t4\t959010186\t5634\t2\n5634\t464\t1\t959008544\t5634\t2\n5634\t3264\t1\t959010223\t5634\t2\n5634\t2795\t4\t959011100\t5634\t2\n5634\t597\t4\t959009823\t5634\t2\n5634\t1197\t4\t959010461\t5634\t2\n5634\t1997\t1\t959011002\t5634\t2\n5634\t798\t1\t959008464\t5634\t2\n5634\t2000\t4\t959010675\t5634\t2\n5634\t1\t4\t959009539\t5634\t2\n5634\t2003\t4\t959011218\t5634\t2\n5634\t1606\t1\t959008671\t5634\t2\n5634\t2406\t1\t959011553\t5634\t2\n5634\t2469\t1\t959011255\t5634\t2\n5634\t2470\t4\t959011202\t5634\t2\n5634\t671\t4\t959008792\t5634\t2\n5634\t2872\t4\t959009264\t5634\t2\n5634\t3072\t1\t959011424\t5634\t2\n5634\t673\t4\t959008582\t5634\t2\n5634\t1676\t4\t959008303\t5634\t2\n5634\t3479\t4\t959011553\t5634\t2\n5634\t480\t4\t959008149\t5634\t2\n5634\t2081\t4\t959010587\t5634\t2\n5634\t1883\t1\t959009768\t5634\t2\n5634\t2883\t4\t959007695\t5634\t2\n5634\t2485\t4\t959012452\t5634\t2\n5634\t3087\t4\t959010706\t5634\t2\n5634\t289\t4\t959010186\t5634\t2\n5634\t1689\t4\t959010272\t5634\t2\n5634\t3489\t4\t959008507\t5634\t2\n5634\t1690\t1\t959008957\t5634\t2\n5634\t1894\t4\t959008464\t5634\t2\n5634\t2694\t4\t959012168\t5634\t2\n5634\t1297\t4\t959010587\t5634\t2\n5634\t2498\t1\t959008999\t5634\t2\n5634\t3499\t4\t959011029\t5634\t2\n5634\t500\t4\t959010050\t5634\t2\n5634\t2502\t4\t959009768\t5634\t2\n\n\u003cfont color\u003dred\u003eResults are limited by 1000.\u003c/font\u003e"
      },
      "dateCreated": "Jul 23, 2017 6:00:05 PM",
      "dateStarted": "Jul 24, 2017 12:59:43 AM",
      "dateFinished": "Jul 24, 2017 1:01:13 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val test \u003d sqlContext.read\n    .format(\"com.databricks.spark.csv\")\n    .option(\"header\", \"true\") // Use first line of all files as header\n    .option(\"inferSchema\", \"true\") // Automatically infer data types\n    .option(\"delimiter\", \",\")\n    .load(\"/data/sidana/recnet_draft/cold_start/ucs/ml1m/recnet_all/test_all_raw.csv\")\n\n\nval distinctUsersRating \u003d test.select(\"userId\",\"rating\").distinct\nval groupByUsers \u003d  distinctUsersRating.groupBy(\"userId\").count\nval goodUsers  \u003d groupByUsers.filter($\"count\"\u003e\u003d2).sort(asc(\"userId\"))\n\nz.show(goodUsers)",
      "authenticationInfo": {},
      "dateUpdated": "Jul 24, 2017 1:37:22 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [
            {
              "name": "userId",
              "index": 0.0,
              "aggr": "sum"
            }
          ],
          "values": [
            {
              "name": "count",
              "index": 1.0,
              "aggr": "sum"
            }
          ],
          "groups": [],
          "scatter": {
            "xAxis": {
              "name": "userId",
              "index": 0.0,
              "aggr": "sum"
            },
            "yAxis": {
              "name": "count",
              "index": 1.0,
              "aggr": "sum"
            }
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1500850252693_1728227454",
      "id": "20170724-005052_1164637930",
      "result": {
        "code": "SUCCESS",
        "type": "TABLE",
        "msg": "userId\tcount\n1\t2\n5\t2\n8\t2\n10\t2\n11\t2\n15\t2\n16\t2\n19\t2\n21\t2\n25\t2\n28\t2\n29\t2\n30\t2\n31\t2\n33\t2\n34\t2\n35\t2\n37\t2\n38\t2\n40\t2\n44\t2\n45\t2\n46\t2\n49\t2\n53\t2\n54\t2\n56\t2\n57\t2\n58\t2\n59\t2\n60\t2\n63\t2\n66\t2\n69\t2\n70\t2\n72\t2\n74\t2\n75\t2\n78\t2\n79\t2\n82\t2\n84\t2\n86\t2\n93\t2\n96\t2\n98\t2\n99\t2\n100\t2\n101\t2\n103\t2\n108\t2\n110\t2\n111\t2\n112\t2\n113\t2\n118\t2\n119\t2\n121\t2\n122\t2\n123\t2\n125\t2\n126\t2\n128\t2\n129\t2\n130\t2\n137\t2\n139\t2\n140\t2\n141\t2\n142\t2\n144\t2\n145\t2\n147\t2\n154\t2\n155\t2\n156\t2\n159\t2\n161\t2\n164\t2\n165\t2\n168\t2\n170\t2\n171\t2\n172\t2\n173\t2\n174\t2\n176\t2\n177\t2\n179\t2\n181\t2\n182\t2\n183\t2\n185\t2\n187\t2\n188\t2\n189\t2\n193\t2\n195\t2\n198\t2\n199\t2\n200\t2\n202\t2\n203\t2\n204\t2\n208\t2\n211\t2\n213\t2\n217\t2\n218\t2\n219\t2\n221\t2\n223\t2\n226\t2\n227\t2\n228\t2\n232\t2\n234\t2\n237\t2\n238\t2\n239\t2\n240\t2\n244\t2\n245\t2\n246\t2\n247\t2\n248\t2\n249\t2\n250\t2\n252\t2\n255\t2\n256\t2\n257\t2\n259\t2\n260\t2\n261\t2\n263\t2\n264\t2\n265\t2\n267\t2\n269\t2\n270\t2\n274\t2\n276\t2\n278\t2\n281\t2\n282\t2\n284\t2\n286\t2\n288\t2\n292\t2\n294\t2\n295\t2\n296\t2\n300\t2\n301\t2\n303\t2\n304\t2\n308\t2\n310\t2\n311\t2\n314\t2\n315\t2\n316\t2\n317\t2\n320\t2\n321\t2\n322\t2\n323\t2\n324\t2\n326\t2\n327\t2\n328\t2\n330\t2\n332\t2\n336\t2\n337\t2\n338\t2\n340\t2\n342\t2\n346\t2\n347\t2\n349\t2\n351\t2\n352\t2\n354\t2\n358\t2\n359\t2\n360\t2\n364\t2\n368\t2\n369\t2\n371\t2\n372\t2\n373\t2\n374\t2\n375\t2\n379\t2\n381\t2\n385\t2\n387\t2\n389\t2\n390\t2\n393\t2\n394\t2\n395\t2\n396\t2\n397\t2\n399\t2\n405\t2\n406\t2\n407\t2\n409\t2\n410\t2\n411\t2\n413\t2\n414\t2\n416\t2\n417\t2\n418\t2\n419\t2\n424\t2\n425\t2\n426\t2\n428\t2\n429\t2\n430\t2\n431\t2\n432\t2\n435\t2\n439\t2\n440\t2\n441\t2\n442\t2\n446\t2\n450\t2\n452\t2\n453\t2\n458\t2\n460\t2\n461\t2\n464\t2\n466\t2\n468\t2\n469\t2\n470\t2\n472\t2\n475\t2\n477\t2\n480\t2\n485\t2\n486\t2\n489\t2\n490\t2\n492\t2\n493\t2\n494\t2\n495\t2\n498\t2\n501\t2\n503\t2\n504\t2\n508\t2\n509\t2\n511\t2\n512\t2\n513\t2\n515\t2\n518\t2\n519\t2\n522\t2\n529\t2\n532\t2\n533\t2\n534\t2\n536\t2\n537\t2\n538\t2\n539\t2\n541\t2\n543\t2\n545\t2\n547\t2\n551\t2\n552\t2\n555\t2\n556\t2\n558\t2\n559\t2\n561\t2\n565\t2\n566\t2\n567\t2\n570\t2\n572\t2\n574\t2\n575\t2\n577\t2\n581\t2\n582\t2\n584\t2\n585\t2\n586\t2\n587\t2\n589\t2\n590\t2\n593\t2\n594\t2\n598\t2\n599\t2\n600\t2\n602\t2\n603\t2\n604\t2\n608\t2\n611\t2\n616\t2\n617\t2\n618\t2\n619\t2\n620\t2\n627\t2\n628\t2\n630\t2\n633\t2\n638\t2\n639\t2\n640\t2\n641\t2\n643\t2\n644\t2\n648\t2\n654\t2\n657\t2\n658\t2\n664\t2\n665\t2\n675\t2\n679\t2\n680\t2\n683\t2\n684\t2\n685\t2\n686\t2\n687\t2\n688\t2\n689\t2\n690\t2\n691\t2\n692\t2\n697\t2\n698\t2\n700\t2\n703\t2\n706\t2\n710\t2\n714\t2\n718\t2\n721\t2\n724\t2\n727\t2\n728\t2\n730\t2\n731\t2\n737\t2\n739\t2\n743\t2\n745\t2\n747\t2\n748\t2\n749\t2\n753\t2\n754\t2\n759\t2\n760\t2\n761\t2\n762\t2\n763\t2\n764\t2\n765\t2\n766\t2\n768\t2\n773\t2\n774\t2\n775\t2\n776\t2\n777\t2\n779\t2\n782\t2\n784\t2\n788\t2\n789\t2\n790\t2\n792\t2\n793\t2\n795\t2\n798\t2\n799\t2\n802\t2\n804\t2\n806\t2\n807\t2\n809\t2\n813\t2\n816\t2\n818\t2\n820\t2\n821\t2\n826\t2\n828\t2\n829\t2\n830\t2\n833\t2\n836\t2\n837\t2\n839\t2\n840\t2\n843\t2\n845\t2\n846\t2\n852\t2\n853\t2\n855\t2\n857\t2\n858\t2\n860\t2\n861\t2\n862\t2\n867\t2\n868\t2\n870\t2\n871\t2\n877\t2\n878\t2\n879\t2\n881\t2\n885\t2\n887\t2\n890\t2\n896\t2\n898\t2\n899\t2\n900\t2\n902\t2\n903\t2\n905\t2\n907\t2\n908\t2\n910\t2\n911\t2\n912\t2\n913\t2\n914\t2\n916\t2\n917\t2\n918\t2\n920\t2\n921\t2\n923\t2\n924\t2\n929\t2\n932\t2\n934\t2\n936\t2\n938\t2\n939\t2\n943\t2\n945\t2\n946\t2\n948\t2\n949\t2\n950\t2\n956\t2\n958\t2\n959\t2\n961\t2\n963\t2\n965\t2\n966\t2\n968\t2\n969\t2\n970\t2\n971\t2\n973\t2\n974\t2\n975\t2\n976\t2\n977\t2\n978\t2\n981\t2\n986\t2\n991\t2\n992\t2\n993\t2\n994\t2\n996\t2\n997\t2\n1005\t2\n1007\t2\n1009\t2\n1012\t2\n1015\t2\n1016\t2\n1017\t2\n1020\t2\n1021\t2\n1024\t2\n1025\t2\n1027\t2\n1028\t2\n1029\t2\n1030\t2\n1032\t2\n1033\t2\n1035\t2\n1036\t2\n1037\t2\n1038\t2\n1039\t2\n1041\t2\n1043\t2\n1045\t2\n1051\t2\n1054\t2\n1055\t2\n1057\t2\n1060\t2\n1062\t2\n1064\t2\n1065\t2\n1066\t2\n1067\t2\n1068\t2\n1069\t2\n1070\t2\n1073\t2\n1074\t2\n1076\t2\n1078\t2\n1080\t2\n1082\t2\n1083\t2\n1085\t2\n1086\t2\n1087\t2\n1091\t2\n1092\t2\n1093\t2\n1095\t2\n1102\t2\n1104\t2\n1105\t2\n1106\t2\n1110\t2\n1112\t2\n1115\t2\n1116\t2\n1117\t2\n1118\t2\n1119\t2\n1121\t2\n1122\t2\n1123\t2\n1127\t2\n1130\t2\n1132\t2\n1133\t2\n1134\t2\n1135\t2\n1137\t2\n1139\t2\n1140\t2\n1141\t2\n1144\t2\n1146\t2\n1148\t2\n1149\t2\n1151\t2\n1152\t2\n1154\t2\n1157\t2\n1158\t2\n1159\t2\n1160\t2\n1161\t2\n1166\t2\n1168\t2\n1171\t2\n1172\t2\n1173\t2\n1177\t2\n1179\t2\n1183\t2\n1184\t2\n1185\t2\n1187\t2\n1188\t2\n1196\t2\n1198\t2\n1200\t2\n1201\t2\n1204\t2\n1205\t2\n1207\t2\n1208\t2\n1209\t2\n1211\t2\n1214\t2\n1215\t2\n1218\t2\n1220\t2\n1221\t2\n1222\t2\n1225\t2\n1226\t2\n1232\t2\n1237\t2\n1238\t2\n1240\t2\n1241\t2\n1243\t2\n1246\t2\n1247\t2\n1248\t2\n1250\t2\n1251\t2\n1255\t2\n1256\t2\n1257\t2\n1259\t2\n1261\t2\n1264\t2\n1266\t2\n1267\t2\n1268\t2\n1269\t2\n1270\t2\n1273\t2\n1274\t2\n1275\t2\n1281\t2\n1282\t2\n1288\t2\n1289\t2\n1290\t2\n1298\t2\n1299\t2\n1303\t2\n1306\t2\n1307\t2\n1310\t2\n1312\t2\n1319\t2\n1320\t2\n1323\t2\n1326\t2\n1331\t2\n1332\t2\n1337\t2\n1338\t2\n1339\t2\n1340\t2\n1341\t2\n1342\t2\n1344\t2\n1345\t2\n1347\t2\n1349\t2\n1352\t2\n1355\t2\n1359\t2\n1361\t2\n1363\t2\n1364\t2\n1365\t2\n1366\t2\n1370\t2\n1374\t2\n1376\t2\n1381\t2\n1383\t2\n1386\t2\n1388\t2\n1391\t2\n1393\t2\n1395\t2\n1397\t2\n1398\t2\n1402\t2\n1403\t2\n1404\t2\n1405\t2\n1407\t2\n1408\t2\n1409\t2\n1411\t2\n1414\t2\n1415\t2\n1417\t2\n1419\t2\n1423\t2\n1428\t2\n1429\t2\n1433\t2\n1434\t2\n1436\t2\n1437\t2\n1439\t2\n1441\t2\n1442\t2\n1446\t2\n1447\t2\n1448\t2\n1449\t2\n1450\t2\n1451\t2\n1452\t2\n1454\t2\n1455\t2\n1457\t2\n1458\t2\n1459\t2\n1460\t2\n1462\t2\n1467\t2\n1475\t2\n1476\t2\n1478\t2\n1479\t2\n1481\t2\n1482\t2\n1487\t2\n1488\t2\n1489\t2\n1492\t2\n1497\t2\n1498\t2\n1499\t2\n1501\t2\n1502\t2\n1507\t2\n1508\t2\n1511\t2\n1514\t2\n1516\t2\n1523\t2\n1526\t2\n1530\t2\n1531\t2\n1532\t2\n1534\t2\n1537\t2\n1538\t2\n1540\t2\n1545\t2\n1547\t2\n1548\t2\n1549\t2\n1552\t2\n1555\t2\n1558\t2\n1559\t2\n1560\t2\n1561\t2\n1562\t2\n1564\t2\n1568\t2\n1569\t2\n1571\t2\n1572\t2\n1573\t2\n1574\t2\n1575\t2\n1577\t2\n1578\t2\n1579\t2\n1580\t2\n1581\t2\n1584\t2\n1586\t2\n1587\t2\n1588\t2\n1589\t2\n1591\t2\n1593\t2\n1596\t2\n1599\t2\n1600\t2\n1603\t2\n1604\t2\n1607\t2\n1609\t2\n1612\t2\n1613\t2\n1614\t2\n1618\t2\n1620\t2\n1623\t2\n1625\t2\n1627\t2\n1630\t2\n1631\t2\n1632\t2\n1633\t2\n1634\t2\n1635\t2\n1637\t2\n1641\t2\n1644\t2\n1645\t2\n1646\t2\n1649\t2\n1650\t2\n1652\t2\n1655\t2\n1658\t2\n1667\t2\n1668\t2\n1672\t2\n1673\t2\n1677\t2\n1678\t2\n1680\t2\n1683\t2\n1684\t2\n1689\t2\n1692\t2\n1693\t2\n1694\t2\n1696\t2\n1697\t2\n1699\t2\n1700\t2\n1702\t2\n1703\t2\n1705\t2\n1706\t2\n1707\t2\n1712\t2\n1717\t2\n1721\t2\n1723\t2\n1725\t2\n1728\t2\n1729\t2\n1730\t2\n1732\t2\n1735\t2\n1738\t2\n1740\t2\n1741\t2\n1742\t2\n1745\t2\n1748\t2\n1749\t2\n1754\t2\n1757\t2\n1760\t2\n1761\t2\n1762\t2\n1764\t2\n1767\t2\n1768\t2\n1772\t2\n1773\t2\n1774\t2\n1776\t2\n1778\t2\n1779\t2\n1783\t2\n1784\t2\n1785\t2\n1787\t2\n1790\t2\n1792\t2\n1793\t2\n1797\t2\n1801\t2\n1804\t2\n1805\t2\n1806\t2\n1807\t2\n1808\t2\n1812\t2\n1815\t2\n1816\t2\n1817\t2\n1818\t2\n1820\t2\n1821\t2\n1824\t2\n1830\t2\n1831\t2\n1833\t2\n1834\t2\n1836\t2\n1837\t2\n1840\t2\n1842\t2\n1844\t2\n1845\t2\n1846\t2\n1848\t2\n1853\t2\n1855\t2\n1858\t2\n1859\t2\n1860\t2\n1861\t2\n1862\t2\n1863\t2\n1865\t2\n1869\t2\n1870\t2\n1872\t2\n1873\t2\n1876\t2\n1877\t2\n1879\t2\n1880\t2\n1881\t2\n1883\t2\n1884\t2\n1886\t2\n1887\t2\n1890\t2\n1891\t2\n1893\t2\n1897\t2\n1898\t2\n1899\t2\n1900\t2\n1907\t2\n1908\t2\n1911\t2\n1912\t2\n1913\t2\n1914\t2\n1915\t2\n1918\t2\n1923\t2\n1925\t2\n1928\t2\n1930\t2\n1931\t2\n1933\t2\n1935\t2\n1940\t2\n1941\t2\n1942\t2\n1943\t2\n1944\t2\n1948\t2\n1949\t2\n1950\t2\n1952\t2\n1953\t2\n1954\t2\n1955\t2\n1956\t2\n1957\t2\n1958\t2\n1960\t2\n1961\t2\n1962\t2\n1963\t2\n1964\t2\n1965\t2\n1967\t2\n1970\t2\n1971\t2\n1972\t2\n1973\t2\n1974\t2\n1975\t2\n1976\t2\n1977\t2\n1978\t2\n1980\t2\n1983\t2\n1985\t2\n1987\t2\n1988\t2\n1989\t2\n1991\t2\n1992\t2\n1993\t2\n1995\t2\n2003\t2\n2005\t2\n2006\t2\n2007\t2\n2008\t2\n2010\t2\n2011\t2\n2014\t2\n2017\t2\n2018\t2\n2021\t2\n2023\t2\n2025\t2\n\n\u003cfont color\u003dred\u003eResults are limited by 1000.\u003c/font\u003e"
      },
      "dateCreated": "Jul 24, 2017 12:50:52 AM",
      "dateStarted": "Jul 24, 2017 1:37:22 AM",
      "dateFinished": "Jul 24, 2017 1:37:42 AM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1500851030464_-1754804171",
      "id": "20170724-010350_328539267",
      "dateCreated": "Jul 24, 2017 1:03:50 AM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "recnet_draft: ml1mDataCreation",
  "id": "2CRE4T2C1",
  "angularObjects": {
    "2BGHSKCA7": [],
    "2BFMBPKAB": [],
    "2BHKKP27G": [],
    "2BJHJDBK6": [],
    "2BJAQG5W4": [],
    "2BJGSXM37": [],
    "2BFXEV5XZ": [],
    "2BG77RV7M": [],
    "2BF969NNB": [],
    "2BG8QQJNC": [],
    "2BGVG5JP4": [],
    "2BJ5FCP57": [],
    "2BFEDXCTE": [],
    "2BJ8AEWCT": [],
    "2BH9AVVKH": [],
    "2BJ7KKX85": [],
    "2BHKAE8WK": [],
    "2BJ6HN5AY": []
  },
  "config": {},
  "info": {}
}